<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>5/15</title>
    <link href="/2021/05/15/5-15/"/>
    <url>/2021/05/15/5-15/</url>
    
    <content type="html"><![CDATA[<p>a</p><p>早晨</p><p>我还是会和往常一样很早起床</p><p>走在去往食堂的小路上</p><p>我不会去想什么——除了考试，学习和其他任务</p><p>一个牛肉饼、一个卤蛋再加一杯豆浆</p><p>就和往常一样</p><p>早早地来到考场</p><p>我不想去想什么</p><p>翻开书——打开手机——永无止境地浏览</p><p>考完试后</p><p>一个人慢慢走在去食堂的路上</p><p>其实也并不是很饿——或许吧</p><p>因为饿了也并不一定想吃饭</p><p>吃过午餐——完成这项每日任务</p><p>一个人慢慢走向图书馆</p><p>立在扶梯上——从一楼到四楼</p><p>找一张桌子——可以一个人坐的桌子</p><p>因为我本就一个人</p><p>旁边的陌生人会让我分心、焦虑和不安</p><p>不知从什么时候我闭上眼睛</p><p>又不知从什么时候睁开眼睛</p><p>周围是谁、发生了什么</p><p>我不知道、我不关心</p><p>也与我无关</p><p>因为我就是一个人</p><p>夜幕降临，</p><p>黑夜涂满窗户</p><p>思维也越发迟钝——我该离开了</p><p>明远湖上倒影着长桥上绚丽的、寂寞的灯光</p><p>忧郁的蓝色格外显眼</p><p>长桥走到那头</p><p>什么也没有变</p><hr><p>那是另一个世界的我</p><p>那个没有你的世界</p><p><em>You make a difference!!!</em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于DOSBOX的使用</title>
    <link href="/2021/05/12/%E5%85%B3%E4%BA%8Edosbox%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/05/12/%E5%85%B3%E4%BA%8Edosbox%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="DOSBOX的下载和安装"><a href="#DOSBOX的下载和安装" class="headerlink" title="DOSBOX的下载和安装"></a>DOSBOX的下载和安装</h1><p>DOSBOX的安装包在文件夹里，安装说明里面也有，我就不说了，完全按照他来就可以。</p><p><strong>一定要记住你的安装路径</strong></p><h1 id="安装debug程序"><a href="#安装debug程序" class="headerlink" title="安装debug程序"></a>安装debug程序</h1><p>文件夹中有一个名为<code>MASM</code>的文件夹，其中包含了debug程序。</p><p>将这个文件夹拷贝到C盘根目录下</p><p>就像这样</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/20210512225244.png"></p><h1 id="修改窗口大小"><a href="#修改窗口大小" class="headerlink" title="修改窗口大小"></a>修改窗口大小</h1><p>根据你的安装路径</p><p>打开配置文件中的<code>DOSBox 0.74-3 Options.bat</code>文件（在你的电脑上可能是<code>DOSBox 0.74-3 Options</code>）</p><p>找到这样两行字</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">windowresolution</span>=original<br><span class="hljs-attr">output</span>=original<br></code></pre></td></tr></table></figure><p>改为</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">windowresolution</span>=<span class="hljs-number">2160</span>x1600<br><span class="hljs-attr">output</span>=opengl<br></code></pre></td></tr></table></figure><p>保存后关闭该文件即可</p><h1 id="文件挂载"><a href="#文件挂载" class="headerlink" title="文件挂载"></a>文件挂载</h1><p>双击桌面上的快捷方式打开DOSBOX</p><p>1.输入命令,实现挂载</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">mount <span class="hljs-keyword">c</span> <span class="hljs-keyword">c</span>:\masa<br></code></pre></td></tr></table></figure><p>2.输入命令，转换到C盘</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">c:</span><br></code></pre></td></tr></table></figure><p>3.输入命令，进入debug程序</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs d"><span class="hljs-keyword">debug</span><br></code></pre></td></tr></table></figure><p>如图</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/20210512230311.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>汇编语言实验</title>
    <link href="/2021/05/11/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/"/>
    <url>/2021/05/11/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>a</p><p>在</p><h1 id="r命令"><a href="#r命令" class="headerlink" title="r命令"></a>r命令</h1><p>功能：查看、修改寄存器中的内容（所有寄存器都可以）</p><p>FR寄存器中的内容由字母表示</p><p>1、<code>r</code>显示所有寄存器的内容</p><p>2、<code>r &lt;register&gt;</code>显示该寄存器的内容</p><p>3、使用（2）后输入数字可以改变该</p><h1 id="a命令"><a href="#a命令" class="headerlink" title="a命令"></a>a命令</h1><p>1、<code>a</code></p><p>2、<code>a xxxx:xxxx</code></p><h1 id="u命令——反汇编命令"><a href="#u命令——反汇编命令" class="headerlink" title="u命令——反汇编命令"></a>u命令——反汇编命令</h1><p>把机器指令反汇编成汇编指令，每次反汇编128个字节</p><p>1、<code>u</code></p><p>2、<code>u xxxx:xxxx</code></p><h1 id="t命令——单步调试指令"><a href="#t命令——单步调试指令" class="headerlink" title="t命令——单步调试指令"></a>t命令——单步调试指令</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>糖尿病——从绝症到慢性病</title>
    <link href="/2021/05/10/%E7%B3%96%E5%B0%BF%E7%97%85%E2%80%94%E2%80%94%E4%BB%8E%E7%BB%9D%E7%97%87%E5%88%B0%E6%85%A2%E6%80%A7%E7%97%85/"/>
    <url>/2021/05/10/%E7%B3%96%E5%B0%BF%E7%97%85%E2%80%94%E2%80%94%E4%BB%8E%E7%BB%9D%E7%97%87%E5%88%B0%E6%85%A2%E6%80%A7%E7%97%85/</url>
    
    <content type="html"><![CDATA[<p>第一型糖尿病：产生胰岛素的功能丧失。</p><p>第二型糖尿病：身体对胰岛素敏感度降低，产生胰岛素抵抗。</p><p>三多一少：多饮、多尿、多食、消瘦</p><p>并发症：失明、截肢、肾衰竭、高血压、心脏病</p><p>糖尿病最早的治疗——埃及（感觉就是闹着玩的，我就不记录了）</p><p>胰岛素的历史1921-2021</p><p>在胰岛素发现之前，糖尿病就是一种绝症，基本无药可治，只有饥饿疗法有一定作用。确诊的患者生存大多不到两年。</p><p>文科生贝纳尔的贡献</p><ol><li>发现胰腺分泌物具有消化功能</li><li>肝脏的糖原功能</li><li>血管收缩神经</li><li>涉足毒性的生物碱</li></ol><p>聚焦胰腺</p><p>冯·麦林和闵可夫斯基研究胰腺，发现摘除胰腺的狗的尿液中含有大量糖分。得出结论胰腺和糖尿病有关，为日后科学家寻找糖尿病的治疗方法打下基础。</p><p>一战打乱了研究的节奏</p><p>1921年，多伦多大学的班廷和贝斯特发现胰岛素</p><p>班廷——最年轻的诺贝尔奖获得者</p><p>首先，他分析了同行失败的原因——胰腺分泌的胰液中含有许多酶会破坏胰岛素</p><p>然后设计实验：先将胰管结扎，使胰腺不分泌外胰液，然后提取。</p><p>地下室、10只狗、一个学生助手（贝斯特）——胰腺结扎使胰岛素提取成功。</p><p>1922年，胰岛素首次人体实验成功</p><p>三人火速申请专利，并以一美元卖给多伦多大学</p><p>胰岛素：</p><p>本质是蛋白质，是体内唯一能降低血糖的激素，由胰岛β细胞分泌。不同哺乳动物的胰岛素分子略有差异，猪和人的胰岛素最接近，故第一代胰岛素为猪的胰岛素。</p><p>人类花了去10年的时间确定胰岛素的氨基酸排列</p><p>1965年，我国在世界上首次用仍方法合成胰岛素</p><p>合成方法</p><p>一、生物合成（基因指导蛋白质合成）</p><p>碱基错配导致蛋白质合成的保真度降低</p><p>二、化学合成</p><p>（1）液相合成</p><p>（2）固相合成√</p><p>花了34年解析了胰岛素的三维结构</p><p>胰岛素半衰期非常短，进入人体后大约一个小时后就会完全降解。胰岛素还会造成低血糖</p><p>1946年，中性鱼精蛋白胰岛素（中效胰岛素）</p><p>长效胰岛素（甘精胰岛素）-&gt;胰岛素结构修饰</p><p>​p><p>利西纳肽</p><p>glp-1</p><p>西格列汀</p><p>二甲双胍——山羊草</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>5/7</title>
    <link href="/2021/05/07/5-7/"/>
    <url>/2021/05/07/5-7/</url>
    
    <content type="html"><![CDATA[<hr><hr><p>今天有感</p><p>突然想起了刘慈欣的《三体》结局</p><p>高级文明相互厮杀， 将宇宙不断降维。强大的文明在低维度空间苟活，低级文明湮灭其中，无人过问。</p><p>最后的地球人——程心在另一个空间里生存。那是一个球，与宇宙隔绝。通过将宇宙中的物质搬运到其中来构成一个完整的生态系统，人类生存其中。</p><p>我记不得细节了，但那个小世界就像世外桃源一般，令人向往。</p><hr><p>当你进入我的生活时</p><p>我的世界便变成了两个部分——</p><p>其一是我和世界</p><p>另一是你和我</p><hr><p>算了，我的语文水平无法描述这种美好</p><p>嘻嘻嘻</p><p>爱你~</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>5/5</title>
    <link href="/2021/05/05/5-5/"/>
    <url>/2021/05/05/5-5/</url>
    
    <content type="html"><![CDATA[<p>偷偷地写，嘻嘻嘻</p><p>为什么要在这个时候写呢</p><p>原因有二</p><p>一是因为前一晚就决定今早写点什么，可是早上刚起床的时候实属不大清醒，什么也写不出来。</p><p>二是因为要等一个软件下载，校园网有点慢，所以写点东西消磨一下时间。</p><p>这时你可能会问了：为啥不去学习哩？就是不想学···</p><p>写什么呢</p><p>昨晚是想好了的</p><p>因为有个人晚上给我发了些很折磨人的东西，真的是太可怕了。好在我还存在理性，没有盲目冲动，现将我的思考记录在下。</p><hr><p>关于性的思考</p><p>人是唯一能将做爱与生育联系到一起的动物。在其他动物看来，做爱同进食，饮水，睡觉而言没什么两样，都是在“神经-体液”调节下进行的正常生命活动。但人是不同的，人领悟到了做爱的意义和结果，这种知识在一定程度上也是一种诅咒。</p><hr><p>(下载好了，先干正事了)</p><p>啊~ 不想写了~最近好忙</p><p>有空再说吧。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>5/3</title>
    <link href="/2021/05/03/5-3/"/>
    <url>/2021/05/03/5-3/</url>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=28788849&auto=1&height=66"></iframe><p>哦~突然发现有好几天没有更新了</p><p>当然啦~因为晚上太忙了，真的是很忙</p><p>今早终于抽出时间（不想玩游戏又不想学习）</p><hr><p>突然想到了</p><p>幻想到了</p><p>未来的某个早晨</p><p>我先醒来</p><p>看到你熟睡的面庞</p><p>我会忍不住给你清晨的第一个吻</p><p>轻轻的，不愿把你吻醒</p><p>轻轻的，看着你熟睡的面庞</p><p>.</p><p>窗外是个好天气</p><p>我们喜欢的天气</p><p>阴沉沉的，</p><p>终于等到她落下小雨</p><p>雨滴淋在窗上</p><p>透过窗帘的缝隙，能看见</p><p>雨姑娘纤细的手指</p><p>轻轻</p><p>轻轻划过玻璃</p><p>留下转瞬即逝的痕迹</p><p>雷隐隐，低语着</p><p>属于春天的诗</p><p>.</p><p>趁着你还没醒</p><p>我决定先去厨房舒展舒展</p><p>点火，待煎锅里的水烧干</p><p>淋少许油</p><p>两个鸡蛋，两篇培根</p><p>听着煎锅发出滋滋的响声</p><p>温两袋牛奶，几片面包</p><p>香气四溢</p><p>出锅</p><p>.</p><p>你还没醒</p><p>也许已经醒了，故意等我来叫你</p><p>但那熟睡的面庞还是那么迷人</p><p>我又忍不住吻了上去</p><p>这一次不是轻轻的了</p><p>你躲进被子里</p><p>我</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>哟~看到这儿了</p><p>下面是付费内容咯，嘻嘻嘻</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>待我们起来时</p><p>早餐已经有点凉了</p><p>谁在意呢？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/29</title>
    <link href="/2021/04/29/4-29/"/>
    <url>/2021/04/29/4-29/</url>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=442867218&auto=1&height=66"></iframe><blockquote><p>当你经历漫长的黑暗终于浮出海面，便会有灿烂的星光落入眼眸，无垠波浪拂过面颊。</p><p>——《明日方舟》</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/28</title>
    <link href="/2021/04/28/4-28/"/>
    <url>/2021/04/28/4-28/</url>
    
    <content type="html"><![CDATA[<p>我找到那首歌了</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=375168&auto=1&height=66"></iframe><p>有一点小累</p><p>“让人保持理性是一种奢望”</p><p>的确</p><p>可是如果一个人这剩下理智，也是很可怕的。</p><p>我选择放任一些冲动——既有可能产生积极结果又有能力承担不良后果的冲动</p><p>今晚的月色好美</p><p>机不可失啊，没有尝试，会后悔的。</p><p>这个年纪我们还有机会“盲目”</p><p>如果真的有一天，我们要为了那些可悲的理由不得不选择配偶，那真就是人生的不幸了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/27</title>
    <link href="/2021/04/27/4-27/"/>
    <url>/2021/04/27/4-27/</url>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=551400874&auto=1&height=66"></iframe><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/Cache_-350e60d7a6f32bd9.jpg"></p><p>我多么希望这美好是永恒的~</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/26</title>
    <link href="/2021/04/26/4-26/"/>
    <url>/2021/04/26/4-26/</url>
    
    <content type="html"><![CDATA[<p>今天</p><p>我找回了久违的感觉</p><p>高数、线代我又回到了第一排</p><p>我仿佛又见到了刚到大学的那个我</p><p>内心充满对知识的渴望</p><p>严格要求自己</p><p><strong>我要开始回归正轨了</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/25</title>
    <link href="/2021/04/25/4-25/"/>
    <url>/2021/04/25/4-25/</url>
    
    <content type="html"><![CDATA[<p>分享一张照片</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/1619363178396.jpg.jpg"></p><p>今天<strong>早一点</strong>写博客</p><hr><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/3087d273a78ccaff4bb1e9972e2ba2a7583c9f11.jpg"></p><p>今天我这个<del>很懒的</del>人<del>破天荒地</del>收拾了衣柜</p><p>把一件件冬衣塞进行李箱</p><p>这也许宣告了寒冷的远去</p><p>在此还是要感谢冬衣为我保暖，虽然这个冬天还是冻成狗</p><p>夏天到来了，是一件好事，但是咽炎又犯了。难道是季节性咽炎？（突然想到口香糖可以抑制我的咳嗽）</p><p>啊，半截袖还是不够穿、衬衫太多了、袜子单身成灾······</p><p>emmmmm真是充实的一个下午，<em><strong>反正没有课</strong></em>，你说气人不气人</p><hr><p>续记</p><p>昨晚也真是“充实”的晚上</p><p>首先，我貌似梦游把睡衣脱了~也许是太热了？我明明记得睡觉前是穿着睡衣的，怎么醒来就没了······</p><p>此外，我还做了一个梦</p><p>难得一个让我不愿醒来的梦：</p><p>梦中的时间、地点、人物都已不记得了</p><p>或者说在梦里我也是不知道的</p><p>因为这些都不重要</p><p>我也许需要冷静一下，一是确认我是否真的会做这个梦，二是梦的内容有一点甜，感觉像是电视剧的情节</p><hr><p>我没有做过这件事，只是在文艺作品中见过，所以说我还是可能会梦到的。早上刚醒的时候记得还是很清楚，现在已经是下午了，记忆可能会出现偏差，但大致内容应该还记得。</p><hr><p>这个梦电视剧和电影里都有，伴着浪漫的音乐，镜头的色调偏暖，我还是有一点不好意思描述</p><hr><p>我梦到了求婚的场景，但是第三人称的。（也许梦都是第三人称吧）</p><p>弗洛伊德认为：梦是人······</p><hr><p>今日的好奇：酥酥的声音听起来是什么样的？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/24</title>
    <link href="/2021/04/24/4-24/"/>
    <url>/2021/04/24/4-24/</url>
    
    <content type="html"><![CDATA[<p>惊喜是一个奇怪的东西</p><p>准备的惊喜的人要一直藏着掖着，将要收到惊喜的人心理却是毫无波澜（对比而言）</p><p>反正我憋不住~</p><p>很显然这是不平等的</p><p>所以我决定要先吊胃口</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/DBC02BA6C5C6AD28A8CD8F605665561F.png"></p><p>诶嘿，嘿嘿，嘿嘿嘿~</p><hr><p>续</p><p>看到一个笑话</p><p>一个测试工程师走进一家酒吧，要了一杯啤酒；<br>一个测试工程师走进一家酒吧，要了一杯咖啡；<br>一个测试工程师走进一家酒吧，要了0.7杯啤酒；<br>一个测试工程师走进一家酒吧，要了-1杯啤酒；<br>一个测试工程师走进一家酒吧，要了232杯啤酒；<br>一个测试工程师走进一家酒吧，要了一杯洗脚水；<br>一个测试工程师走进一家酒吧，要了一杯蜥蜴；<br>一个测试工程师走进一家酒吧，要了一份asdfQwer@24dg!&amp;*(@；<br>一个测试工程师走进一家酒吧，什么也没要；<br>一个测试工程师走进一家酒吧，又走出去又从窗户进来又从后门出去从下水道钻进来；<br>一个测试工程师走进一家酒吧，又走出去又进来又出去又进来又出去，最后在外面把老板打了一顿；<br>一个测试工程师走进一家酒吧，要了一杯烫烫烫的锟斤拷；<br>一个测试工程师走进一家酒吧，要了NaN杯Null；<br>一个测试工程师冲进一家酒吧，要了500T啤酒咖啡洗脚水野猫狼牙棒奶茶；<br>一个测试工程师把酒吧拆了；<br>一个测试工程师化装成老板走进一家酒吧，要了500杯啤酒并且不付钱；<br>一万个测试工程师在酒吧门外呼啸而过；<br> 一个测试工程师走进一家酒吧，”&lt; script &gt;alert(“要了一杯酒”);&lt; /script &gt;”<br>一个测试工程师走进一家酒吧，要了一杯啤酒’;DROP TABLE 酒吧；<br>测试工程师们满意地离开了酒吧。<br>然后一名顾客点了一份炒饭，酒吧炸了。</p><p>你可以理解成一个秃头程序猿编了一个软件，然后他带着一帮程序猿用各种姿势测试bug，没有bug，程序猿安心的把这个软件实装了，结果一个普通路过·魔鬼·玩家在程序里点了一碗炒饭，结果软件崩了。程序猿:淦</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/3087d273a78ccaff4bb1e9972e2ba2a7583c9f11.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/3087d273a78ccaff4bb1e9972e2ba2a7583c9f11.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/3087d273a78ccaff4bb1e9972e2ba2a7583c9f11.jpg"></p><hr><p>续</p><p>今个儿打了快一个小时的羽毛球</p><p>我得出一个结论</p><p><em><strong>我是真的不想学习啊</strong></em></p><p>方舟二周年直播——今晚有事干了</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/23</title>
    <link href="/2021/04/23/4-23/"/>
    <url>/2021/04/23/4-23/</url>
    
    <content type="html"><![CDATA[<p>今天要写一点东西了</p><p>不能总是拖来拖去</p><p>今天，也是充实的一天</p><p>C++课上看完了一部短片小说（也不能说是看完，还差了一章）（也不能完全说是小说，感觉怪怪的）</p><p>《眠》</p><p>阅读的时候有一种窒息的感觉，我不禁开始思考，我怎样能逃离或是避免成为她？我是否正在成为她？</p><p>会有出路的</p><p>C++之后是社交舞</p><p>新的动作还是不熟练，但迷迷糊糊能完成，还是挺神奇的</p><p>多练习吧</p><p>我要让以后的广场命名为——王瀚弘广场[doge]</p><p>中午把考试题做完了</p><p>明明想睡觉，无果</p><p><del>···</del></p><p>停，不记流水账了</p><p>晚上跑步的时候</p><p>阴云密布，阴风怒号</p><p>我的内心是很不安的</p><p>生命的无力感</p><p>仿佛灾难即将到来，可是我无力改变</p><p>也许我的糟糕经历太多了吧，其中很多赶在了阴天</p><p>难免对阴天有一些偏见</p><p>想吃芒果了</p><p>大不了麻烦一点咯</p><p>算了~找机会再说</p><p>录毕</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/22</title>
    <link href="/2021/04/22/4-22/"/>
    <url>/2021/04/22/4-22/</url>
    
    <content type="html"><![CDATA[<p>今天</p><p>是充实的一天</p><p>不想记流水账</p><p>不是因为懒，而是太累</p><p>因为实在太充实</p><p>嗯，就这样了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/21</title>
    <link href="/2021/04/21/4-21/"/>
    <url>/2021/04/21/4-21/</url>
    
    <content type="html"><![CDATA[<p>好久都没有这样了</p><p>上一次赖床是什么时候我已经记不起来了</p><p>但是赖床好舒服</p><p>慵懒地躺在床上，时不时再访梦乡</p><hr><p>今早起床后（物理起床）咽炎犯了</p><p>熟悉的感觉</p><p>就像老朋友那样</p><hr><p>现在还没有感觉饿</p><p>明明昨晚······</p><p>我的胃可能还没有睡醒吧</p><hr><p>现在想想</p><p>我真的亏欠了我的身体太多</p><p>我也应该学会爱自己呀</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/IMG_20210420_144118.jpg" alt="江安图书馆"></p><p>遮帘到货了</p><p>真好</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/20</title>
    <link href="/2021/04/20/4-20/"/>
    <url>/2021/04/20/4-20/</url>
    
    <content type="html"><![CDATA[<h1 id="我究竟想要什么"><a href="#我究竟想要什么" class="headerlink" title="我究竟想要什么"></a>我究竟想要什么</h1><p>一个人应该认真思考他想要什么，并将其作为生活的动力，人生的方向。这是一个哲学的问题，肯定会有人认为这是再自寻烦恼。不可否认的是，这<strong>的确</strong>是一个自寻烦恼的过程，但我认为这个过程是值得的。任何生命都有其动力，动物为了生存选择狩猎、伪装、躲避······一切都是为了这个物种的延续（虽然它们认识不到这一点）。人类亦是如此，但与动物不同，人可以进行更复杂的思考，以更为抽象的东西作为自己生命的动力。如果一个人不用心的去思考其生命的动力，盲目听从他人，跟随他人，或为了自己生命的延续，就像其他动物那样，我无法不悲观的认为这是一个可悲的、可怕的人生。</p><p>有人想要的是春秋大义，有人想要的是功名利禄，而我想要的，就当下而言，其实很简单。</p><p><strong>他人的陪伴、关心。</strong></p><p>人的经历各不相同，对于一些人生来就是理所应当的东西，可能是别人苦苦奢求的；对于一些人穷尽一生都难以遇见的挑战，可能是别人的家常便饭。我并不想说谁更幸福，谁更不幸，因为这属实无聊，每个人都没有选择，这一点我们是相同的。我想说的是人的境遇不同，所以想要的东西也不尽相同。与他人交流这个话题，往往是很有趣、很有意义的。</p><p>我是一个坚强的人。从小就能独立做很多事，其中有一些真的很难，但咬咬牙还是坚持下来了（毕竟不坚持下来也不行啊）。但我也是一个很脆弱的人，我虽然习惯于独行，但我始终渴望有人陪伴；我虽然习惯于冷静，但是亲人的一句话仍可让我崩溃。我懂得柳宗元游小石潭时的孤独落寞，我也羡慕苏轼能有友人相伴共赏积水空明。我曾做过一个奇怪的梦，最开始梦见屋子里出现了奇怪的人。我被吓醒，发现还是在梦里，在这个梦里还是有奇怪的人，更可怕的熟悉的人不认识我了。我再次被惊醒，但还是在梦里，这次所有人都不认识我了······再次惊醒，幸运的是，这次真的醒了。</p><p>我希望他人的陪伴，深究其实是想填满我空虚的灵魂，我害怕孤独，我希望他人为我带来快乐——在我无能为力的时候。但我不是单纯的追求自己的快乐，当我用错误的方法获得快乐，我只会更加空虚。我希望我能为他人带来快乐，让他人感受到快乐——最终我也会获得加倍的快乐，使我感到充实的快乐，真正的快乐。</p><p>感谢你，感谢你的陪伴。此刻我发现我们的结果并没有那么重要了，因为我获得了真正的快乐，我真正想要的东西。如果我们走到了那一步，我想那应该就是锦上添花了；如果没有，我依然会感谢你，并给你我最真挚的祝福，同时我会带着你给我的宝贵的财富，更加勇敢地走下去。</p><p>我好像明白了这一刻便是永恒的含义，当然只是我的理解。</p><h1 id="关于谎言"><a href="#关于谎言" class="headerlink" title="关于谎言"></a>关于谎言</h1><p>人总是自私的，为了达到目的去编造谎言，无论善意与否，谎言的本质是不变的。</p><p>我承认善于说谎是我的缺点</p><p>但我也保证与人之交往，我的情感不会参杂一点谎言</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/18</title>
    <link href="/2021/04/18/4-18/"/>
    <url>/2021/04/18/4-18/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/1618754578945.jpg" alt="《月夜》梵高"></p><p>他们说</p><p>哲学始于人们开始仰望星空</p><p>我蛮赞同这个观点的</p><p>我能盯着星空看很久，不累的那种</p><p>我能想出很多问题</p><p>很多很多</p><hr><p>啊艹，被室友打断思路真的好烦，下单一个遮帘</p><hr><p>是啊，今晚月色还是很美的</p><p>朦朦胧胧若隐若现</p><p>将云层照得像轻纱一般</p><p>要是晚上的灯光少一点就更好了</p><hr><p>绝美的月色</p><p>还是在农村老家</p><p>地面的灯光小心翼翼的</p><p>月光倒是好不吝啬自己的美貌</p><p>让人随意观赏</p><hr><p>我看过一次月全食</p><p>那也是一次神奇的经历</p><p>可惜细节记不清了</p><p>只记得那天很冷</p><p>我一个人在固执的等待</p><p>毕竟我不用担心结果</p><hr><p>到这里啊</p><p>再说点别的吧</p><p>该静静心了</p><p>嗯</p><p>做一些计划吧</p><hr><ol><li>分个条吧，看起来有条理一些</li><li>算了，估计写在分条里的计划永远也不可能实现</li></ol><p>嗯，就在这里写了</p><hr><p>入党申请书，无论自己之前写的什么，请我自己先耐心看完，再做更改或重写（本月）</p><hr><p>学英语吧，先把书本上的学好了，练一练口语（明天开始）</p><hr><p>啊，完成一篇小说（本周）</p><hr><p>微积分线代复习、预习（本周）</p><hr><p>军理背（五一假期吧）</p><hr><p>汇编整理笔记（本周）</p><hr><p>c++项目（拖一拖）</p><hr><p>我希望与人共同前进</p><p><strong>对，就是你</strong></p><p>要去图书馆可以约我</p><p>约我啊，我有时间一定去</p><p>早睡了，<strong>晚安</strong></p><p>好吧，不早了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ForYou</title>
    <link href="/2021/04/18/ForYou/"/>
    <url>/2021/04/18/ForYou/</url>
    
    <content type="html"><![CDATA[<p>这个是在蓝桥杯那天构思出来的</p><p>嘻嘻嘻</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//</span><br><span class="hljs-comment">//输入名字的简写</span><br><span class="hljs-comment">//</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Dear &quot;</span>);<br><span class="hljs-keyword">char</span> name[<span class="hljs-number">3</span>];<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,name);<br><span class="hljs-keyword">int</span> N[<span class="hljs-number">3</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++) N[i]=name[i]%<span class="hljs-number">100</span>;<br><span class="hljs-keyword">int</span> wo[<span class="hljs-number">10</span>];<br>wo[<span class="hljs-number">0</span>]=(N[<span class="hljs-number">0</span>]+N[<span class="hljs-number">1</span>])*<span class="hljs-number">2</span>+N[<span class="hljs-number">2</span>]+<span class="hljs-number">1</span>;<br>wo[<span class="hljs-number">1</span>]=(N[<span class="hljs-number">0</span>]+N[<span class="hljs-number">1</span>])-N[<span class="hljs-number">2</span>]/<span class="hljs-number">2</span>;<br>wo[<span class="hljs-number">2</span>]=wo[<span class="hljs-number">0</span>]+N[<span class="hljs-number">2</span>]<span class="hljs-number">-1</span>;<br>wo[<span class="hljs-number">3</span>]=wo[<span class="hljs-number">2</span>]+(wo[<span class="hljs-number">2</span>]-wo[<span class="hljs-number">0</span>]);<br>wo[<span class="hljs-number">4</span>]=wo[<span class="hljs-number">2</span>]+<span class="hljs-number">10</span>;<br>wo[<span class="hljs-number">5</span>]=wo[<span class="hljs-number">1</span>]*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>+N[<span class="hljs-number">2</span>];<br>wo[<span class="hljs-number">6</span>]=wo[<span class="hljs-number">1</span>];<br>wo[<span class="hljs-number">7</span>]=wo[<span class="hljs-number">4</span>]+<span class="hljs-number">3</span>;<br>wo[<span class="hljs-number">8</span>]=wo[<span class="hljs-number">3</span>];<br>wo[<span class="hljs-number">9</span>]=wo[<span class="hljs-number">4</span>]<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,wo[i]);<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/17</title>
    <link href="/2021/04/17/4-17/"/>
    <url>/2021/04/17/4-17/</url>
    
    <content type="html"><![CDATA[<p>我知道问题出在哪里了</p><p>当然，这是我的问题</p><p>”你要和同学多说话，大大方方的。“</p><p>”知道了知道了。“</p><p>的确我可以和别人自如的交流</p><p>但我始终怯于说出那最重要的事</p><p>我不说出，还指望别人能看出</p><p>难道每个人都是福尔摩斯？</p><p>这也是一种逃避吧</p><p>这就是一种逃避</p><p>有的人能面对上百人之众，慷慨陈词</p><p>但在面对一个人的时候却是扭扭捏捏，东躲西藏</p><p>他在害怕什么？</p><p>你在害怕什么？</p><p>我在害怕什么？</p><p>我无时无刻不在读取别人的心声</p><p>举止、用词、表情</p><p>究竟是别人的心声大过了我自己的心声</p><p>还是说我所听到的心声是我内心独白的另一种表现形式</p><p>我无法继续思考这个问题了</p><p>下一步，我要勇敢地说出来——这对我而言一定是非常大的挑战</p><blockquote><p>我于此记录下自己的心路历程，避免在认识自己的道路上走失</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/16</title>
    <link href="/2021/04/16/4-16/"/>
    <url>/2021/04/16/4-16/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/IMG_20210416_122429(1).jpg"></p><p>哦吼吼，晴天咯</p><p>昨夜小雨，竟是阴天的告别。它仔细地擦净每一片叶子：明天要让人们看见春天的样子啊。</p><p>伤病渐愈，体力逐渐恢复，正常的生活终于要重启。</p><p>去做些事，去写一下字，去聊一聊天，去跑一跑，去跳一跳</p><p>很久没喝咖啡了吧</p><p>忘了吧，把它留在寒冷的春天吧</p><p>龙井、茉莉、红袍、普洱</p><p>让他们出来吧</p><p>茶是喝不够的</p><p>若是有人相伴</p><p>明远湖畔</p><p>畅谈抒怀</p><p>若孑然一人</p><p>尚有野鸭戏水</p><p>百鸟争鸣</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>共产党章程</title>
    <link href="/2021/04/15/%E5%85%B1%E4%BA%A7%E5%85%9A%E7%AB%A0%E7%A8%8B/"/>
    <url>/2021/04/15/%E5%85%B1%E4%BA%A7%E5%85%9A%E7%AB%A0%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="总-纲"><a href="#总-纲" class="headerlink" title="总 纲"></a><strong>总 纲</strong></h1><p>　　中国共产党是中国工人阶级的先锋队，同时是中国人民和中华民族的先锋队，是中国特色社会主义事业的领导核心，代表中国先进生产力的发展要求，代表中国先进文化的前进方向，代表中国最广大人民的根本利益。党的最高理想和最终目标是实现共产主义。</p><p>　　中国共产党以马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想作为自己的行动指南。</p><p>　　马克思列宁主义揭示了人类社会历史发展的规律，它的基本原理是正确的，具有强大的生命力。中国共产党人追求的共产主义最高理想，只有在社会主义社会充分发展和高度发达的基础上才能实现。社会主义制度的发展和完善是一个长期的历史过程。坚持马克思列宁主义的基本原理，走中国人民自愿选择的适合中国国情的道路，中国的社会主义事业必将取得最终的胜利。</p><p>　　以毛泽东同志为主要代表的中国共产党人，把马克思列宁主义的基本原理同中国革命的具体实践结合起来，创立了毛泽东思想。毛泽东思想是马克思列宁主义在中国的运用和发展，是被实践证明了的关于中国革命和建设的正确的理论原则和经验总结，是中国共产党集体智慧的结晶。 在毛泽东思想指引下，中国共产党领导全国各族人民，经过长期的反对帝国主义、封建主义、官僚资本主义的革命斗争，取得了新民主主义革命的胜利，建立了人民民主专政的中华人民共和国；新中国成立以后，顺利地进行了社会主义改造，完成了从新民主主义到社会主义的过渡，确立了社会主义基本制度，发展了社会主义的经济、政治和文化。</p><p>　　十一届三中全会以来，以邓小平同志为主要代表的中国共产党人，总结新中国成立以来正反两方面的经验，解放思想，实事求是，实现全党工作中心向经济建设的转移，实行改革开放，开辟了社会主义事业发展的新时期，逐步形成了建设中国特色社会主义的路线、方针、政策，阐明了在中国建设社会主义、巩固和发展社会主义的基本问题，创立了邓小平理论。邓小平理论是马克思列宁主义的基本原理同当代中国实践和时代特征相结合的产物，是毛泽东思想在新的历史条件下的继承和发展，是马克思主义在中国发展的新阶段，是当代中国的马克思主义，是中国共产党集体智慧的结晶，引导着我国社会主义现代化事业不断前进。</p><p>　　十三届四中全会以来，以江泽民同志为主要代表的中国共产党人，在建设中国特色社会主义的实践中，加深了对什么是社会主义、怎样建设社会主义和建设什么样的党、怎样建设党的认识，积累了治党治国新的宝贵经验，形成了“三个代表”重要思想。“三个代表”重要思想是对马克思列宁主义、毛泽东思想、邓小平理论的继承和发展，反映了当代世界和中国的发展变化对党和国家工作的新要求，是加强和改进党的建设、推进我国社会主义自我完善和发展的强大理论武器，是中国共产党集体智慧的结晶，是党必须长期坚持的指导思想。始终做到“三个代表”，是我们党的立党之本、执政之基、力量之源。</p><p>　　十六大以来，以胡锦涛同志为主要代表的中国共产党人，坚持以邓小平理论和“三个代表”重要思想为指导，根据新的发展要求，深刻认识和回答了新形势下实现什么样的发展、怎样发展等重大问题，形成了以人为本、全面协调可持续发展的科学发展观。科学发展观是同马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想既一脉相承又与时俱进的科学理论，是马克思主义关于发展的世界观和方法论的集中体现，是马克思主义中国化重大成果，是中国共产党集体智慧的结晶，是发展中国特色社会主义必须长期坚持的指导思想。</p><p>　　十八大以来，以习近平同志为主要代表的中国共产党人，顺应时代发展，从理论和实践结合上系统回答了新时代坚持和发展什么样的中国特色社会主义、怎样坚持和发展中国特色社会主义这个重大时代课题，创立了习近平新时代中国特色社会主义思想。习近平新时代中国特色社会主义思想是对马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观的继承和发展，是马克思主义中国化最新成果，是党和人民实践经验和集体智慧的结晶，是中国特色社会主义理论体系的重要组成部分，是全党全国人民为实现中华民族伟大复兴而奋斗的行动指南，必须长期坚持并不断发展。 在习近平新时代中国特色社会主义思想指导下，中国共产党领导全国各族人民，统揽伟大斗争、伟大工程、伟大事业、伟大梦想，推动中国特色社会主义进入了新时代。</p><p>　　改革开放以来我们取得一切成绩和进步的<strong>根本原因</strong>，归结起来就是：<strong>开辟了中国特色社会主义道路，形成了中国特色社会主义理论体系，确立了中国特色社会主义制度，发展了中国特色社会主义文化。</strong>全党同志<strong>要</strong>倍加珍惜、长期坚持和不断发展党历经艰辛开创的这条道路、这个理论体系、这个制度、这个文化，高举中国特色社会主义伟大旗帜，坚定道路自信、理论自信、制度自信、文化自信，贯彻党的基本理论、基本路线、基本方略，为实现推进现代化建设、完成祖国统一、维护世界和平与促进共同发展这三大历史任务，实现“两个一百年”奋斗目标、实现中华民族伟大复兴的中国梦而奋斗。</p><p>　　我国正处于并将长期处于社会主义初级阶段。这是在原本经济文化落后的中国建设社会主义现代化不可逾越的历史阶段，需要上百年的时间。我国的社会主义建设，必须从我国的国情出发，走中国特色社会主义道路。在现阶段，我国社会的主要矛盾是人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾。 由于国内的因素和国际的影响，阶级斗争还在一定范围内长期存在，在某种条件下还有可能激化，但已经不是主要矛盾。我国社会主义建设的根本任务，是进一步解放生产力，发展生产力，逐步实现社会主义现代化，并且为此而改革生产关系和上层建筑中不适应生产力发展的方面和环节。 必须坚持和完善公有制为主体、多种所有制经济共同发展的基本经济制度，坚持和完善按劳分配为主体、多种分配方式并存的分配制度，鼓励一部分地区和一部分人先富起来，逐步消灭贫穷，达到共同富裕，在生产发展和社会财富增长的基础上不断满足人民日益增长的美好生活需要，促进人的全面发展。发展是我们党执政兴国的第一要务。必须坚持以人民为中心的发展思想，坚持创新、协调、绿色、开放、共享的发展理念。各项工作都要把有利于发展社会主义社会的生产力，有利于增强社会主义国家的综合国力，有利于提高人民的生活水平，作为总的出发点和检验标准，尊重劳动、尊重知识、尊重人才、尊重创造，做到发展为了人民、发展依靠人民、发展成果由人民共享。跨入新世纪，我国进入全面建设小康社会、加快推进社会主义现代化的新的发展阶段。必须按照中国特色社会主义事业“五位一体”总体布局和“四个全面”战略布局，统筹推进经济建设、政治建设、文化建设、社会建设、生态文明建设，协调推进全面建成小康社会、全面深化改革、全面依法治国、全面从严治党。在新世纪新时代，经济和社会发展的战略目标是，到建党一百年时，全面建成小康社会；到新中国成立一百年时，全面建成社会主义现代化强国。</p><p>　　中国共产党在社会主义初级阶段的基本路线是：领导和团结全国各族人民，以经济建设为中心，坚持四项基本原则，坚持改革开放，自力更生，艰苦创业，为把我国建设成为富强民主文明和谐美丽的社会主义现代化强国而奋斗。</p><p>　　中国共产党在领导社会主义事业中，必须坚持以经济建设为中心，其他各项工作都服从和服务于这个中心。要实施科教兴国战略、人才强国战略、创新驱动发展战略、乡村振兴战略、区域协调发展战略、可持续发展战略、军民融合发展战略，充分发挥科学技术作为第一生产力的作用，充分发挥创新作为引领发展第一动力的作用，依靠科技进步，提高劳动者素质，促进国民经济更高质量、更有效率、更加公平、更可持续发展。</p><p>　　坚持社会主义道路、坚持人民民主专政、坚持中国共产党的领导、坚持马克思列宁主义毛泽东思想这四项基本原则，是我们的立国之本。在社会主义现代化建设的整个过程中，必须坚持四项基本原则，反对资产阶级自由化。</p><p>　　坚持改革开放，是我们的强国之路。只有改革开放，才能发展中国、发展社会主义、发展马克思主义。要全面深化改革，完善和发展中国特色社会主义制度，推进国家治理体系和治理能力现代化。 要从根本上改革束缚生产力发展的经济体制，坚持和完善社会主义市场经济体制；与此相适应，要进行政治体制改革和其他领域的改革。要坚持对外开放的基本国策，吸收和借鉴人类社会创造的一切文明成果。改革开放应当大胆探索，勇于开拓，提高改革决策的科学性，更加注重改革的系统性、整体性、协同性，在实践中开创新路。</p><p>　　中国共产党领导人民发展社会主义市场经济。毫不动摇地巩固和发展公有制经济，毫不动摇地鼓励、支持、引导非公有制经济发展。发挥市场在资源配置中的决定性作用，更好发挥政府作用，建立完善的宏观调控体系。统筹城乡发展、区域发展、经济社会发展、人与自然和谐发展、国内发展和对外开放，调整经济结构，转变经济发展方式，推进供给侧结构性改革。促进新型工业化、信息化、城镇化、农业现代化同步发展，建设社会主义新农村，走中国特色新型工业化道路，建设创新型国家和世界科技强国。</p><p>　　中国共产党领导人民发展社会主义民主政治。坚持党的领导、人民当家作主、依法治国有机统一，走中国特色社会主义政治发展道路，扩大社会主义民主，建设中国特色社会主义法治体系，建设社会主义法治国家，巩固人民民主专政，建设社会主义政治文明。坚持和完善人民代表大会制度、中国共产党领导的多党合作和政治协商制度、民族区域自治制度以及基层群众自治制度。发展更加广泛、更加充分、更加健全的人民民主，推进协商民主广泛、多层、制度化发展，切实保障人民管理国家事务和社会事务、管理经济和文化事业的权利。尊重和保障人权。广开言路，建立健全民主选举、民主决策、民主管理、民主监督的制度和程序。完善中国特色社会主义法律体系，加强法律实施工作，实现国家各项工作法治化。</p><p>　　中国共产党领导人民发展社会主义先进文化。建设社会主义精神文明，实行依法治国和以德治国相结合，提高全民族的思想道德素质和科学文化素质，为改革开放和社会主义现代化建设提供强大的思想保证、精神动力和智力支持，建设社会主义文化强国。加强社会主义核心价值体系建设，坚持马克思主义指导思想，树立中国特色社会主义共同理想，弘扬以爱国主义为核心的民族精神和以改革创新为核心的时代精神，培育和践行社会主义核心价值观，倡导社会主义荣辱观，增强民族自尊、自信和自强精神，抵御资本主义和封建主义腐朽思想的侵蚀，扫除各种社会丑恶现象，努力使我国人民成为有理想、有道德、有文化、有纪律的人民。对党员要进行共产主义远大理想教育。大力发展教育、科学、文化事业，推动中华优秀传统文化创造性转化、创新性发展，继承革命文化，发展社会主义先进文化，提高国家文化软实力。牢牢掌握意识形态工作领导权，不断巩固马克思主义在意识形态领域的指导地位，巩固全党全国人民团结奋斗的共同思想基础。</p><p>　　中国共产党领导人民构建社会主义和谐社会。按照民主法治、公平正义、诚信友爱、充满活力、安定有序、人与自然和谐相处的总要求和共同建设、共同享有的原则，以保障和改善民生为重点，解决好人民最关心、最直接、最现实的利益问题，使发展成果更多更公平惠及全体人民，不断增强人民群众获得感，努力形成全体人民各尽其能、各得其所而又和谐相处的局面。加强和创新社会治理。严格区分和正确处理敌我矛盾和人民内部矛盾这两类不同性质的矛盾。加强社会治安综合治理，依法坚决打击各种危害国家安全和利益、危害社会稳定和经济发展的犯罪活动和犯罪分子，保持社会长期稳定。坚持总体国家安全观，坚决维护国家主权、安全、发展利益。</p><p>　　中国共产党领导人民建设社会主义生态文明。树立尊重自然、顺应自然、保护自然的生态文明理念，增强绿水青山就是金山银山的意识，坚持节约资源和保护环境的基本国策，坚持节约优先、保护优先、自然恢复为主的方针，坚持生产发展、生活富裕、生态良好的文明发展道路。着力建设资源节约型、环境友好型社会，实行最严格的生态环境保护制度，形成节约资源和保护环境的空间格局、产业结构、生产方式、生活方式，为人民创造良好生产生活环境，实现中华民族永续发展。</p><p>　　中国共产党坚持对人民解放军和其他人民武装力量的绝对领导，贯彻习近平强军思想，加强人民解放军的建设，坚持政治建军、改革强军、科技兴军、依法治军，建设一支听党指挥、能打胜仗、作风优良的人民军队，切实保证人民解放军有效履行新时代军队使命任务，充分发挥人民解放军在巩固国防、保卫祖国和参加社会主义现代化建设中的作用。</p><p>　　中国共产党维护和发展平等团结互助和谐的社会主义民族关系，积极培养、选拔少数民族干部，帮助少数民族和民族地区发展经济、文化和社会事业，铸牢中华民族共同体意识，实现各民族共同团结奋斗、共同繁荣发展。全面贯彻党的宗教工作基本方针，团结信教群众为经济社会发展作贡献。</p><p>　　中国共产党同全国各民族工人、农民、知识分子团结在一起，同各民主党派、无党派人士、各民族的爱国力量团结在一起，进一步发展和壮大由全体社会主义劳动者、社会主义事业的建设者、拥护社会主义的爱国者、拥护祖国统一和致力于中华民族伟大复兴的爱国者组成的最广泛的爱国统一战线。不断加强全国人民包括香港特别行政区同胞、澳门特别行政区同胞、台湾同胞和海外侨胞的团结。按照“一个国家、两种制度”的方针，促进香港、澳门长期繁荣稳定，完成祖国统一大业。</p><p>　　中国共产党坚持独立自主的和平<strong>外交政策</strong>，坚持和平发展道路，坚持互利共赢的开放战略，统筹国内国际两个大局，积极发展对外关系，努力为我国的改革开放和现代化建设争取有利的国际环境。在国际事务中，坚持正确义利观，维护我国的独立和主权，反对霸权主义和强权政治，维护世界和平，促进人类进步，推动构建人类命运共同体，推动建设持久和平、共同繁荣的和谐世界。在互相尊重主权和领土完整、互不侵犯、互不干涉内政、平等互利、和平共处五项原则的基础上，发展我国同世界各国的关系。不断发展我国同周边国家的睦邻友好关系，加强同发展中国家的团结与合作。遵循共商共建共享原则，推进“一带一路”建设。按照独立自主、完全平等、互相尊重、互不干涉内部事务的原则，发展我党同各国共产党和其他政党的关系。</p><p>　　中国共产党要领导全国各族人民实现“两个一百年”奋斗目标、实现中华民族伟大复兴的中国梦，<strong>必须</strong>紧密围绕党的基本路线，坚持党要管党、全面从严治党，加强党的长期执政能力建设、先进性和纯洁性建设，以改革创新精神全面推进党的建设新的伟大工程，以党的政治建设为统领，全面推进党的政治建设、思想建设、组织建设、作风建设、纪律建设，把制度建设贯穿其中，深入推进反腐败斗争，全面提高党的建设科学化水平。坚持立党为公、执政为民，发扬党的优良传统和作风，不断提高党的领导水平和执政水平，提高拒腐防变和抵御风险的能力，不断增强自我净化、自我完善、自我革新、自我提高能力，不断增强党的阶级基础和扩大党的群众基础，不断提高党的创造力、凝聚力、战斗力，建设学习型、服务型、创新型的马克思主义执政党，使我们党始终走在时代前列，成为领导全国人民沿着中国特色社会主义道路不断前进的坚强核心。<strong>党的建设必须坚决实现以下五项基本要求：</strong></p><p>　　第一，坚持党的基本路线。全党要用邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想和党的基本路线统一思想，统一行动，并且毫不动摇地长期坚持下去。必须把改革开放同四项基本原则统一起来，全面落实党的基本路线，反对一切“左”的和右的错误倾向，要警惕右，但主要是防止“左”。加强各级领导班子建设，培养选拔党和人民需要的好干部，培养和造就千百万社会主义事业接班人，从组织上保证党的基本理论、基本路线、基本方略的贯彻落实。</p><p>　　第二，坚持解放思想，实事求是，与时俱进，求真务实。党的思想路线是一切从实际出发，理论联系实际，实事求是，在实践中检验真理和发展真理。全党必须坚持这条思想路线，积极探索，大胆试验，开拓创新，创造性地开展工作，不断研究新情况，总结新经验，解决新问题，在实践中丰富和发展马克思主义，推进马克思主义中国化。</p><p>　　第三，坚持全心全意为人民服务。党除了工人阶级和最广大人民群众的利益，没有自己特殊的利益。党在任何时候都把群众利益放在第一位，同群众同甘共苦，保持最密切的联系，坚持权为民所用、情为民所系、利为民所谋，不允许任何党员脱离群众，凌驾于群众之上。我们党的最大政治优势是密切联系群众，党执政后的最大危险是脱离群众。党风问题、党同人民群众联系问题是关系党生死存亡的问题。党在自己的工作中实行群众路线，一切为了群众，一切依靠群众，从群众中来，到群众中去，把党的正确主张变为群众的自觉行动。</p><p>　　第四，坚持民主集中制。民主集中制是民主基础上的集中和集中指导下的民主相结合。它既是党的根本组织原则，也是群众路线在党的生活中的运用。必须充分发扬党内民主，尊重党员主体地位，保障党员民主权利，发挥各级党组织和广大党员的积极性创造性。必须实行正确的集中，牢固树立政治意识、大局意识、核心意识、看齐意识，坚定维护以习近平同志为核心的党中央权威和集中统一领导，保证全党的团结统一和行动一致，保证党的决定得到迅速有效的贯彻执行。加强和规范党内政治生活，增强党内政治生活的政治性、时代性、原则性、战斗性，发展积极健康的党内政治文化，营造风清气正的良好政治生态。党在自己的政治生活中正确地开展批评和自我批评，在原则问题上进行思想斗争，坚持真理，修正错误。努力造成又有集中又有民主，又有纪律又有自由，又有统一意志又有个人心情舒畅生动活泼的政治局面。</p><p>　　第五，坚持从严管党治党。全面从严治党永远在路上。新形势下，党面临的执政考验、改革开放考验、市场经济考验、外部环境考验是长期的、复杂的、严峻的，精神懈怠危险、能力不足危险、脱离群众危险、消极腐败危险更加尖锐地摆在全党面前。要把严的标准、严的措施贯穿于管党治党全过程和各方面。坚持依规治党、标本兼治，坚持把纪律挺在前面，加强组织性纪律性，在党的纪律面前人人平等。强化管党治党主体责任和监督责任，加强对党的领导机关和党员领导干部特别是主要领导干部的监督，不断完善党内监督体系。深入推进党风廉政建设和反腐败斗争，以零容忍态度惩治腐败，构建不敢腐、不能腐、不想腐的有效机制。</p><p>　　<strong>中国共产党的领导是中国特色社会主义最本质的特征，是中国特色社会主义制度的最大优势。</strong>党政军民学，东西南北中，党是领导一切的。党要适应改革开放和社会主义现代化建设的要求，坚持科学执政、民主执政、依法执政，加强和改善党的领导。党必须按照总揽全局、协调各方的原则，在同级各种组织中发挥领导核心作用。党必须集中精力领导经济建设，组织、协调各方面的力量，同心协力，围绕经济建设开展工作，促进经济社会全面发展。党必须实行民主的科学的决策，制定和执行正确的路线、方针、政策，做好党的组织工作和宣传教育工作，发挥全体党员的先锋模范作用。党必须在宪法和法律的范围内活动。党必须保证国家的立法、司法、行政、监察机关，经济、文化组织和人民团体积极主动地、独立负责地、协调一致地工作。党必须加强对工会、共产主义青年团、妇女联合会等群团组织的领导，使它们保持和增强政治性、先进性、群众性，充分发挥作用。党必须适应形势的发展和情况的变化，完善领导体制，改进领导方式，增强执政能力。共产党员必须同党外群众亲密合作，共同为建设中国特色社会主义而奋斗。</p><h1 id="第一章-党-员"><a href="#第一章-党-员" class="headerlink" title="第一章　党　员"></a><strong>第一章　党　员</strong></h1><p>　　第一条　年满十八岁的中国工人、农民、军人、知识分子和其他社会阶层的先进分子，承认党的纲领和章程，愿意参加党的一个组织并在其中积极工作、执行党的决议和按期交纳党费的[<a href="#_msocom_17">瀚弘17]</a> ，<strong>可以申请加入中国共产党。</strong></p><p>　　第二条　中国共产党党员是中国工人阶级的有共产主义觉悟的先锋战士。</p><p>　　中国共产党党员必须全心全意为人民服务，不惜牺牲个人的一切，为实现共产主义奋斗终身。</p><p>　　中国共产党党员永远是劳动人民的普通一员。除了法律和政策规定范围内的个人利益和工作职权以外，所有共产党员都不得谋求任何私利和特权。[<a href="#_msocom_18">瀚弘18]</a> </p><p>　　第三条　党员必须履行下列<strong>义务</strong>：</p><p>　　（一）认真学习马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想，学习党的路线、方针、政策和决议，学习党的基本知识，学习科学、文化、法律和业务知识，努力提高为人民服务的本领。</p><p>　　（二）贯彻执行党的基本路线和各项方针、政策，带头参加改革开放和社会主义现代化建设，带动群众为经济发展和社会进步艰苦奋斗，在生产、工作、学习和社会生活中起先锋模范作用。</p><p>　　（三）坚持党和人民的利益高于一切，个人利益服从党和人民的利益，吃苦在前，享受在后，克己奉公，多做贡献。</p><p>　　（四）自觉遵守党的纪律，首先是党的政治纪律和政治规矩，模范遵守国家的法律法规，严格保守党和国家的秘密，执行党的决定，服从组织分配，积极完成党的任务。</p><p>　　（五）维护党的团结和统一，对党忠诚老实，言行一致，坚决反对一切派别组织和小集团活动，反对阳奉阴违的两面派行为和一切阴谋诡计。</p><p>　　（六）切实开展批评和自我批评，勇于揭露和纠正违反党的原则的言行和工作中的缺点、错误，坚决同消极腐败现象作斗争。</p><p>　　（七）密切联系群众，向群众宣传党的主张，遇事同群众商量，及时向党反映群众的意见和要求，维护群众的正当利益。</p><p>　　（八）发扬社会主义新风尚，带头实践社会主义核心价值观和社会主义荣辱观，提倡共产主义道德，弘扬中华民族传统美德，为了保护国家和人民的利益，在一切困难和危险的时刻挺身而出，英勇斗争，不怕牺牲。[<a href="#_msocom_19">瀚弘19]</a> </p><p>　　第四条　党员享有下列<strong>权利</strong>：</p><p>　　（一）参加党的有关会议，阅读党的有关文件，接受党的教育和培训。</p><p>　　（二）在党的会议上和党报党刊上，参加关于党的政策问题的讨论。</p><p>　　（三）对党的工作提出建议和倡议。</p><p>　　（四）在党的会议上有根据地批评党的任何组织和任何党员，向党负责地揭发、检举党的任何组织和任何党员违法乱纪的事实，要求处分违法乱纪的党员，要求罢免或撤换不称职的干部。</p><p>　　（五）行使表决权、选举权，有被选举权。</p><p>　　（六）在党组织讨论决定对党员的党纪处分或作出鉴定时，本人有权参加和进行申辩，其他党员可以为他作证和辩护。</p><p>　　（七）对党的决议和政策如有不同意见，在坚决执行的前提下，可以声明保留，并且可以把自己的意见向党的上级组织直至中央提出。</p><p>　　（八）向党的上级组织直至中央提出请求、申诉和控告，并要求有关组织给以负责的答复。</p><p>　　党的任何一级组织直至中央都无权剥夺党员的上述权利。[<a href="#_msocom_20">瀚弘20]</a> </p><p>　　第五条　<strong>发展党员，必须把政治标准放在首位，经过党的支部，坚持个别吸收的原则。</strong></p><p>　　<strong>申请入党的人，要填写入党志愿书，要有两名正式党员作介绍人，要经过支部大会通过和上级党组织批准，并且经过预备期的考察，才能成为正式党员。</strong></p><p>　　<strong>介绍人要认真了解申请人的思想、品质、经历和工作表现，向他解释党的纲领和党的章程，说明党员的条件、义务和权利，并向党组织作出负责的报告。</strong></p><p>　　<strong>党的支部委员会对申请入党的人，要注意征求党内外有关群众的意见，进行严格的审查，认为合格后再提交支部大会讨论。</strong></p><p>　　<strong>上级党组织在批准申请人入党以前，要派人同他谈话，作进一步的了解，并帮助他提高对党的认识。</strong></p><p>　　<strong>在特殊情况下，党的中央和省、自治区、直辖市委员会可以直接接收党员。</strong>[<a href="#_msocom_21">瀚弘21]</a> </p><p>　　第六条　预备党员必须面向党旗进行入党宣誓。誓词如下：我志愿加入中国共产党，拥护党的纲领，遵守党的章程，履行党员义务，执行党的决定，严守党的纪律，保守党的秘密，对党忠诚，积极工作，为共产主义奋斗终身，随时准备为党和人民牺牲一切，永不叛党。[<a href="#_msocom_22">瀚弘22]</a> </p><p>　　第七条　<strong>预备党员</strong>的预备期为一年。党组织对预备党员应当认真教育和考察。</p><p>　　预备党员的义务同正式党员一样。预备党员的权利，除了没有表决权、选举权和被选举权以外，也同正式党员一样。</p><p>　　预备党员预备期满，党的支部应当及时讨论他能否转为正式党员。认真履行党员义务，具备党员条件的，应当按期转为正式党员；需要继续考察和教育的，可以延长预备期，但不能超过一年；不履行党员义务，不具备党员条件的，应当取消预备党员资格。预备党员转为正式党员，或延长预备期，或取消预备党员资格，都应当经支部大会讨论通过和上级党组织批准。</p><p>　　预备党员的预备期，从支部大会通过他为预备党员之日算起。党员的党龄，从预备期满转为正式党员之日算起。</p><p>　　第八条　每个党员，不论职务高低，都必须编入党的一个支部、小组或其他特定组织，参加党的组织生活，接受党内外群众的监督。党员领导干部还必须参加党委、党组的民主生活会。不允许有任何不参加党的组织生活、不接受党内外群众监督的特殊党员。</p><p>　　第九条　党员有<strong>退党</strong>的自由。党员要求退党，应当经支部大会讨论后宣布除名，并报上级党组织备案。</p><p>　　党员缺乏革命意志，不履行党员义务，不符合党员条件，党的支部应当对他进行教育，要求他限期改正；经教育仍无转变的，应当劝他退党。劝党员退党，应当经支部大会讨论决定，并报上级党组织批准。如被劝告退党的党员坚持不退，应当提交支部大会讨论，决定把他除名，并报上级党组织批准。</p><p>　　党员如果没有正当理由，连续六个月不参加党的组织生活，或不交纳党费，或不做党所分配的工作，就被认为是自行脱党。支部大会应当决定把这样的党员除名，并报上级党组织批准。</p><h1 id="第二章-党的组织制度"><a href="#第二章-党的组织制度" class="headerlink" title="第二章　党的组织制度"></a><strong>第二章　党的组织制度</strong></h1><p>　　第十条　党是根据自己的纲领和章程，按照民主集中制组织起来的统一整体。党的民主集中制的基本原则是：</p><p>　　（一）<strong>党员个人服从党的组织，少数服从多数，下级组织服从上级组织，全党各个组织和全体党员服从党的全国代表大会和中央委员会。</strong></p><p>　　（二）<strong>党的各级领导机关，除它们派出的代表机关和在非党组织中的党组外，都由选举产生。</strong></p><p>　　（三）党的<strong>最高领导机关</strong>，是<strong>党的全国代表大会和它所产生的中央委员会</strong>。党的地方各级领导机关，是党的地方各级代表大会和它们所产生的委员会。党的各级委员会向同级的代表大会负责并报告工作。</p><p>　　（四）党的上级组织要经常听取下级组织和党员群众的意见，及时解决他们提出的问题。党的下级组织既要向上级组织请示和报告工作，又要独立负责地解决自己职责范围内的问题。上下级组织之间要互通情报、互相支持和互相监督。党的各级组织要按规定实行党务公开，使党员对党内事务有更多的了解和参与。</p><p>　　（五）党的各级委员会实行<strong>集体领导和个人分工负责相结合的制度</strong>。凡属重大问题都要按照集体领导、民主集中、个别酝酿、会议决定的原则，由党的委员会集体讨论，作出决定；委员会成员要根据集体的决定和分工，切实履行自己的职责。</p><p>　　（六）党<strong>禁止任何形式的个人崇拜</strong>。要保证党的领导人的活动处于党和人民的监督之下，同时维护一切代表党和人民利益的领导人的威信。[<a href="#_msocom_23">瀚弘23]</a> </p><p>　　第十一条　<strong>党的各级代表大会的代表和委员会的产生</strong>，要体现选举人的意志。选举采用无记名投票的方式。候选人名单要由党组织和选举人充分酝酿讨论。可以直接采用候选人数多于应选人数的差额选举办法进行正式选举。也可以先采用差额选举办法进行预选，产生候选人名单，然后进行正式选举。选举人有了解候选人情况、要求改变候选人、不选任何一个候选人和另选他人的权利。任何组织和个人不得以任何方式强迫选举人选举或不选举某个人。</p><p>　　党的地方各级代表大会和基层代表大会的选举，如果发生违反党章的情况，上一级党的委员会在调查核实后，应作出选举无效和采取相应措施的决定，并报再上一级党的委员会审查批准，正式宣布执行。</p><p>　　<strong>党的各级代表大会代表实行任期制。</strong></p><p>　　第十二条　<strong>党的中央和地方各级委员会在必要时召集代表会议，讨论和决定需要及时解决的重大问题。</strong>代表会议代表的名额和产生办法，由召集代表会议的委员会决定。</p><p>　　第十三条　凡是成立党的新组织，或是撤销党的原有组织，必须由上级党组织决定。</p><p>　　在党的地方各级代表大会和基层代表大会闭会期间，上级党的组织认为有必要时，可以调动或者指派下级党组织的负责人。</p><p>　　党的中央和地方各级委员会可以派出代表机关。</p><p>　　第十四条　党的中央和省、自治区、直辖市委员会实行巡视制度，在一届任期内，对所管理的地方、部门、企事业单位党组织实现巡视全覆盖。</p><p>　　中央有关部委和国家机关部门党组（党委）根据工作需要，开展巡视工作。</p><p>　　党的市（地、州、盟）和县（市、区、旗）委员会建立巡察制度。</p><p>　　第十五条　党的各级领导机关，对同下级组织有关的重要问题作出决定时，在通常情况下，要征求下级组织的意见。要保证下级组织能够正常行使他们的职权。凡属应由下级组织处理的问题，如无特殊情况，上级领导机关不要干预。</p><p>　　第十六条　有关全国性的重大政策问题，只有党中央有权作出决定，各部门、各地方的党组织可以向中央提出建议，但不得擅自作出决定和对外发表主张。</p><p>　　党的下级组织必须坚决执行上级组织的决定。下级组织如果认为上级组织的决定不符合本地区、本部门的实际情况，可以请求改变；如果上级组织坚持原决定，下级组织必须执行，并不得公开发表不同意见，但有权向再上一级组织报告。</p><p>　　党的各级组织的报刊和其他宣传工具，必须宣传党的路线、方针、政策和决议。</p><p>　　第十七条　党组织讨论决定问题，必须执行少数服从多数的原则。决定重要问题，要进行表决。对于少数人的不同意见，应当认真考虑。如对重要问题发生争论，双方人数接近，除了在紧急情况下必须按多数意见执行外，应当暂缓作出决定，进一步调查研究，交换意见，下次再表决；在特殊情况下，也可将争论情况向上级组织报告，请求裁决。</p><p>　　党员个人代表党组织发表重要主张，如果超出党组织已有决定的范围，必须提交所在的党组织讨论决定，或向上级党组织请示。任何党员不论职务高低，都不能个人决定重大问题；如遇紧急情况，必须由个人作出决定时，事后要迅速向党组织报告。不允许任何领导人实行个人专断和把个人凌驾于组织之上。</p><p>　　第十八条　党的中央、地方和基层组织，都必须重视党的建设，经常讨论和检查党的宣传工作、教育工作、组织工作、纪律检查工作、群众工作、统一战线工作等，注意研究党内外的思想政治状况。</p><h1 id="第三章-党的中央组织"><a href="#第三章-党的中央组织" class="headerlink" title="第三章　党的中央组织"></a><strong>第三章　党的中央组织</strong></h1><p>　　第十九条　党的全国代表大会每五年举行一次，由中央委员会召集。中央委员会认为有必要，或者有三分之一以上的省一级组织提出要求，全国代表大会可以提前举行；如无非常情况，不得延期举行。</p><p>　　全国代表大会代表的名额和选举办法，由中央委员会决定。</p><p>　　第二十条　党的全国代表大会的职权是：</p><p>　　（一）听取和审查中央委员会的报告；</p><p>　　（二）审查中央纪律检查委员会的报告；</p><p>　　（三）讨论并决定党的重大问题；</p><p>　　（四）修改党的章程；</p><p>　　（五）选举中央委员会；</p><p>　　（六）选举中央纪律检查委员会。</p><p>　　第二十一条　党的全国代表会议的职权是：讨论和决定重大问题；调整和增选中央委员会、中央纪律检查委员会的部分成员。调整和增选中央委员及候补中央委员的数额，不得超过党的全国代表大会选出的中央委员及候补中央委员各自总数的五分之一。</p><p>　　第二十二条　党的中央委员会每届任期五年。全国代表大会如提前或延期举行，它的任期相应地改变。中央委员会委员和候补委员必须有五年以上的党龄。中央委员会委员和候补委员的名额，由全国代表大会决定。中央委员会委员出缺，由中央委员会候补委员按照得票多少依次递补。</p><p>　　中央委员会全体会议由中央政治局召集，每年至少举行一次。中央政治局向中央委员会全体会议报告工作，接受监督。</p><p>　　在全国代表大会闭会期间，中央委员会执行全国代表大会的决议，领导党的全部工作，对外代表中国共产党。</p><p>　　第二十三条　党的中央政治局、中央政治局常务委员会和中央委员会总书记，由中央委员会全体会议选举。中央委员会总书记必须从中央政治局常务委员会委员中产生。</p><p>　　中央政治局和它的常务委员会在中央委员会全体会议闭会期间，行使中央委员会的职权。</p><p>　　中央书记处是中央政治局和它的常务委员会的办事机构；成员由中央政治局常务委员会提名，中央委员会全体会议通过。</p><p>　　中央委员会总书记负责召集中央政治局会议和中央政治局常务委员会会议，并主持中央书记处的工作。</p><p>　　党的中央军事委员会组成人员由中央委员会决定，中央军事委员会实行主席负责制。</p><p>　　每届中央委员会产生的中央领导机构和中央领导人，在下届全国代表大会开会期间，继续主持党的经常工作，直到下届中央委员会产生新的中央领导机构和中央领导人为止。</p><p>　　第二十四条　中国人民解放军的党组织，根据中央委员会的指示进行工作。中央军事委员会负责军队中党的工作和政治工作，对军队中党的组织体制和机构作出规定。</p><h1 id="第四章-党的地方组织"><a href="#第四章-党的地方组织" class="headerlink" title="第四章　党的地方组织"></a><strong>第四章　党的地方组织</strong></h1><p>　　第二十五条　党的省、自治区、直辖市的代表大会，设区的市和自治州的代表大会，县（旗）、自治县、不设区的市和市辖区的代表大会，每五年举行一次。</p><p>　　党的地方各级代表大会由同级党的委员会召集。在特殊情况下，经上一级委员会批准，可以提前或延期举行。</p><p>　　党的地方各级代表大会代表的名额和选举办法，由同级党的委员会决定，并报上一级党的委员会批准。</p><p>　　第二十六条　党的地方各级代表大会的职权是：</p><p>　　（一）听取和审查同级委员会的报告；</p><p>　　（二）审查同级纪律检查委员会的报告；</p><p>　　（三）讨论本地区范围内的重大问题并作出决议；</p><p>　　（四）选举同级党的委员会，选举同级党的纪律检查委员会。</p><p>　　第二十七条　党的省、自治区、直辖市、设区的市和自治州的委员会，每届任期五年。这些委员会的委员和候补委员必须有五年以上的党龄。</p><p>　　党的县（旗）、自治县、不设区的市和市辖区的委员会，每届任期五年。这些委员会的委员和候补委员必须有三年以上的党龄。</p><p>　　党的地方各级代表大会如提前或延期举行，由它选举的委员会的任期相应地改变。</p><p>　　党的地方各级委员会的委员和候补委员的名额，分别由上一级委员会决定。党的地方各级委员会委员出缺，由候补委员按照得票多少依次递补。</p><p>　　党的地方各级委员会全体会议，每年至少召开两次。</p><p>　　党的地方各级委员会在代表大会闭会期间，执行上级党组织的指示和同级党代表大会的决议，领导本地方的工作，定期向上级党的委员会报告工作。</p><p>　　第二十八条　党的地方各级委员会全体会议，选举常务委员会和书记、副书记，并报上级党的委员会批准。党的地方各级委员会的常务委员会，在委员会全体会议闭会期间，行使委员会职权；在下届代表大会开会期间，继续主持经常工作，直到新的常务委员会产生为止。</p><p>　　党的地方各级委员会的常务委员会定期向委员会全体会议报告工作，接受监督。</p><p>　　第二十九条　党的地区委员会和相当于地区委员会的组织，是党的省、自治区委员会在几个县、自治县、市范围内派出的代表机关。它根据省、自治区委员会的授权，领导本地区的工作。</p><h1 id="第五章-党的基层组织"><a href="#第五章-党的基层组织" class="headerlink" title="第五章　党的基层组织"></a><strong>第五章　党的基层组织</strong></h1><p>　　第三十条　企业、农村、机关、学校、科研院所、街道社区、社会组织、人民解放军连队和其他基层单位，凡是有正式党员三人以上的，都应当成立党的基层组织。</p><p>　　党的基层组织，根据工作需要和党员人数，经上级党组织批准，分别设立党的基层委员会、总支部委员会、支部委员会。基层委员会由党员大会或代表大会选举产生，总支部委员会和支部委员会由党员大会选举产生，提出委员候选人要广泛征求党员和群众的意见。</p><p>　　第三十一条　党的基层委员会、总支部委员会、支部委员会每届任期三年至五年。基层委员会、总支部委员会、支部委员会的书记、副书记选举产生后，应报上级党组织批准。</p><p>　　第三十二条　党的基层组织是党在社会基层组织中的战斗堡垒，是党的全部工作和战斗力的基础。它的基本任务是：</p><p>　　（一）宣传和执行党的路线、方针、政策，宣传和执行党中央、上级组织和本组织的决议，充分发挥党员的先锋模范作用，积极创先争优，团结、组织党内外的干部和群众，努力完成本单位所担负的任务。</p><p>　　（二）组织党员认真学习马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想，推进“两学一做”学习教育常态化制度化，学习党的路线、方针、政策和决议，学习党的基本知识，学习科学、文化、法律和业务知识。</p><p>　　（三）对党员进行教育、管理、监督和服务，提高党员素质，坚定理想信念，增强党性，严格党的组织生活，开展批评和自我批评，维护和执行党的纪律，监督党员切实履行义务，保障党员的权利不受侵犯。加强和改进流动党员管理。</p><p>　　（四）密切联系群众，经常了解群众对党员、党的工作的批评和意见，维护群众的正当权利和利益，做好群众的思想政治工作。</p><p>　　（五）充分发挥党员和群众的积极性创造性，发现、培养和推荐他们中间的优秀人才，鼓励和支持他们在改革开放和社会主义现代化建设中贡献自己的聪明才智。</p><p>　　（六）对要求入党的积极分子进行教育和培养，做好经常性的发展党员工作，重视在生产、工作第一线和青年中发展党员。</p><p>　　（七）监督党员干部和其他任何工作人员严格遵守国家法律法规，严格遵守国家的财政经济法规和人事制度，不得侵占国家、集体和群众的利益。</p><p>　　（八）教育党员和群众自觉抵制不良倾向，坚决同各种违纪违法行为作斗争。</p><p>　　第三十三条　街道、乡、镇党的基层委员会和村、社区党组织，领导本地区的工作和基层社会治理，支持和保证行政组织、经济组织和群众自治组织充分行使职权。</p><p>　　国有企业党委（党组）发挥领导作用，把方向、管大局、保落实，依照规定讨论和决定企业重大事项。国有企业和集体企业中党的基层组织，围绕企业生产经营开展工作。保证监督党和国家的方针、政策在本企业的贯彻执行；支持股东会、董事会、监事会和经理（厂长）依法行使职权；全心全意依靠职工群众，支持职工代表大会开展工作；参与企业重大问题的决策；加强党组织的自身建设，领导思想政治工作、精神文明建设和工会、共青团等群团组织。</p><p>　　非公有制经济组织中党的基层组织，贯彻党的方针政策，引导和监督企业遵守国家的法律法规，领导工会、共青团等群团组织，团结凝聚职工群众，维护各方的合法权益，促进企业健康发展。</p><p>　　社会组织中党的基层组织，宣传和执行党的路线、方针、政策，领导工会、共青团等群团组织，教育管理党员，引领服务群众，推动事业发展。</p><p>　　实行行政领导人负责制的事业单位中党的基层组织，发挥战斗堡垒作用。实行党委领导下的行政领导人负责制的事业单位中党的基层组织，对重大问题进行讨论和作出决定，同时保证行政领导人充分行使自己的职权。</p><p>　　各级党和国家机关中党的基层组织，协助行政负责人完成任务，改进工作，对包括行政负责人在内的每个党员进行教育、管理、监督，不领导本单位的业务工作。</p><p>　　第三十四条　党支部是党的基础组织，担负直接教育党员、管理党员、监督党员和组织群众、宣传群众、凝聚群众、服务群众的职责。</p><h1 id="第六章-党的干部"><a href="#第六章-党的干部" class="headerlink" title="第六章　党的干部"></a><strong>第六章　党的干部</strong></h1><p>　　第三十五条　党的干部是党的事业的骨干，是人民的公仆，要做到忠诚干净担当。党按照德才兼备、以德为先的原则选拔干部，坚持五湖四海、任人唯贤，坚持事业为上、公道正派，反对任人唯亲，努力实现干部队伍的革命化、年轻化、知识化、专业化。</p><p>　　党重视教育、培训、选拔、考核和监督干部，特别是培养、选拔优秀年轻干部。积极推进干部制度改革。</p><p>　　党重视培养、选拔女干部和少数民族干部。</p><p>　　第三十六条　党的各级领导干部必须信念坚定、为民服务、勤政务实、敢于担当、清正廉洁，模范地履行本章程第三条所规定的党员的各项义务，并且必须具备以下的基本条件：</p><p>　　（一）具有履行职责所需要的马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观的水平，带头贯彻落实习近平新时代中国特色社会主义思想，努力用马克思主义的立场、观点、方法分析和解决实际问题，坚持讲学习、讲政治、讲正气，经得起各种风浪的考验。</p><p>　　（二）具有共产主义远大理想和中国特色社会主义坚定信念，坚决执行党的基本路线和各项方针、政策，立志改革开放，献身现代化事业，在社会主义建设中艰苦创业，树立正确政绩观，做出经得起实践、人民、历史检验的实绩。</p><p>　　（三）坚持解放思想，实事求是，与时俱进，开拓创新，认真调查研究，能够把党的方针、政策同本地区、本部门的实际相结合，卓有成效地开展工作，讲实话，办实事，求实效。</p><p>　　（四）有强烈的革命事业心和政治责任感，有实践经验，有胜任领导工作的组织能力、文化水平和专业知识。</p><p>　　（五）正确行使人民赋予的权力，坚持原则，依法办事，清正廉洁，勤政为民，以身作则，艰苦朴素，密切联系群众，坚持党的群众路线，自觉地接受党和群众的批评和监督，加强道德修养，讲党性、重品行、作表率，做到自重、自省、自警、自励，反对形式主义、官僚主义、享乐主义和奢靡之风，反对任何滥用职权、谋求私利的行为。</p><p>　　（六）坚持和维护党的民主集中制，有民主作风，有全局观念，善于团结同志，包括团结同自己有不同意见的同志一道工作。</p><p>　　第三十七条　党员干部要善于同党外干部合作共事，尊重他们，虚心学习他们的长处。</p><p>　　党的各级组织要善于发现和推荐有真才实学的党外干部担任领导工作，保证他们有职有权，充分发挥他们的作用。</p><p>　　第三十八条　党的各级领导干部，无论是由民主选举产生的，或是由领导机关任命的，他们的职务都不是终身的，都可以变动或解除。</p><p>　　年龄和健康状况不适宜于继续担任工作的干部，应当按照国家的规定退、离休。</p><h1 id="第七章-党的纪律"><a href="#第七章-党的纪律" class="headerlink" title="第七章　党的纪律"></a><strong>第七章　党的纪律</strong></h1><p>　　第三十九条　党的纪律是党的各级组织和全体党员必须遵守的行为规则，是维护党的团结统一、完成党的任务的保证。党组织必须严格执行和维护党的纪律，共产党员必须自觉接受党的纪律的约束。</p><p>　　第四十条　党的纪律主要包括政治纪律、组织纪律、廉洁纪律、群众纪律、工作纪律、生活纪律。</p><p>　　坚持惩前毖后、治病救人，执纪必严、违纪必究，抓早抓小、防微杜渐，按照错误性质和情节轻重，给以批评教育直至纪律处分。运用监督执纪“四种形态”，让“红红脸、出出汗”成为常态，党纪处分、组织调整成为管党治党的重要手段，严重违纪、严重触犯刑律的党员必须开除党籍。</p><p>　　党内严格禁止用违反党章和国家法律的手段对待党员，严格禁止打击报复和诬告陷害。违反这些规定的组织或个人必须受到党的纪律和国家法律的追究。</p><p>　　第四十一条　对党员的纪律处分有五种：警告、严重警告、撤销党内职务、留党察看、开除党籍。</p><p>　　留党察看最长不超过两年。党员在留党察看期间没有表决权、选举权和被选举权。党员经过留党察看，确已改正错误的，应当恢复其党员的权利；坚持错误不改的，应当开除党籍。</p><p>　　开除党籍是党内的最高处分。各级党组织在决定或批准开除党员党籍的时候，应当全面研究有关的材料和意见，采取十分慎重的态度。</p><p>　　第四十二条　对党员的纪律处分，必须经过支部大会讨论决定，报党的基层委员会批准；如果涉及的问题比较重要或复杂，或给党员以开除党籍的处分，应分别不同情况，报县级或县级以上党的纪律检查委员会审查批准。在特殊情况下，县级和县级以上各级党的委员会和纪律检查委员会有权直接决定给党员以纪律处分。</p><p>　　对党的中央委员会委员、候补委员，给以警告、严重警告处分，由中央纪律检查委员会常务委员会审议后，报党中央批准。对地方各级党的委员会委员、候补委员，给以警告、严重警告处分，应由上一级纪律检查委员会批准，并报它的同级党的委员会备案。</p><p>　　对党的中央委员会和地方各级委员会的委员、候补委员，给以撤销党内职务、留党察看或开除党籍的处分，必须由本人所在的委员会全体会议三分之二以上的多数决定。在全体会议闭会期间，可以先由中央政治局和地方各级委员会常务委员会作出处理决定，待召开委员会全体会议时予以追认。对地方各级委员会委员和候补委员的上述处分，必须经过上级纪律检查委员会常务委员会审议，由这一级纪律检查委员会报同级党的委员会批准。</p><p>　　严重触犯刑律的中央委员会委员、候补委员，由中央政治局决定开除其党籍；严重触犯刑律的地方各级委员会委员、候补委员，由同级委员会常务委员会决定开除其党籍。</p><p>　　第四十三条　党组织对党员作出处分决定，应当实事求是地查清事实。处分决定所依据的事实材料和处分决定必须同本人见面，听取本人说明情况和申辩。如果本人对处分决定不服，可以提出申诉，有关党组织必须负责处理或者迅速转递，不得扣压。对于确属坚持错误意见和无理要求的人，要给以批评教育。</p><p>　　第四十四条　党组织如果在维护党的纪律方面失职，必须问责。</p><p>　　对于严重违犯党的纪律、本身又不能纠正的党组织，上一级党的委员会在查明核实后，应根据情节严重的程度，作出进行改组或予以解散的决定，并报再上一级党的委员会审查批准，正式宣布执行。</p><h1 id="第八章-党的纪律检查机关"><a href="#第八章-党的纪律检查机关" class="headerlink" title="第八章　党的纪律检查机关"></a><strong>第八章　党的纪律检查机关</strong></h1><p>　　第四十五条　党的中央纪律检查委员会在党的中央委员会领导下进行工作。党的地方各级纪律检查委员会和基层纪律检查委员会在同级党的委员会和上级纪律检查委员会双重领导下进行工作。上级党的纪律检查委员会加强对下级纪律检查委员会的领导。</p><p>　　党的各级纪律检查委员会每届任期和同级党的委员会相同。</p><p>　　党的中央纪律检查委员会全体会议，选举常务委员会和书记、副书记，并报党的中央委员会批准。党的地方各级纪律检查委员会全体会议，选举常务委员会和书记、副书记，并由同级党的委员会通过，报上级党的委员会批准。党的基层委员会是设立纪律检查委员会，还是设立纪律检查委员，由它的上一级党组织根据具体情况决定。党的总支部委员会和支部委员会设纪律检查委员。</p><p>　　党的中央和地方纪律检查委员会向同级党和国家机关全面派驻党的纪律检查组。纪律检查组组长参加驻在部门党的领导组织的有关会议。他们的工作必须受到该机关党的领导组织的支持。</p><p>　　第四十六条　党的各级纪律检查委员会是党内监督专责机关，主要任务是：维护党的章程和其他党内法规，检查党的路线、方针、政策和决议的执行情况，协助党的委员会推进全面从严治党、加强党风建设和组织协调反腐败工作。</p><p>　　党的各级纪律检查委员会的职责是监督、执纪、问责，要经常对党员进行遵守纪律的教育，作出关于维护党纪的决定；对党的组织和党员领导干部履行职责、行使权力进行监督，受理处置党员群众检举举报，开展谈话提醒、约谈函询；检查和处理党的组织和党员违反党的章程和其他党内法规的比较重要或复杂的案件，决定或取消对这些案件中的党员的处分；进行问责或提出责任追究的建议；受理党员的控告和申诉；保障党员的权利。</p><p>　　各级纪律检查委员会要把处理特别重要或复杂的案件中的问题和处理的结果，向同级党的委员会报告。党的地方各级纪律检查委员会和基层纪律检查委员会要同时向上级纪律检查委员会报告。</p><p>　　各级纪律检查委员会发现同级党的委员会委员有违犯党的纪律的行为，可以先进行初步核实，如果需要立案检查的，应当在向同级党的委员会报告的同时向上一级纪律检查委员会报告；涉及常务委员的，报告上一级纪律检查委员会，由上一级纪律检查委员会进行初步核实，需要审查的，由上一级纪律检查委员会报它的同级党的委员会批准。</p><p>　　第四十七条　上级纪律检查委员会有权检查下级纪律检查委员会的工作，并且有权批准和改变下级纪律检查委员会对于案件所作的决定。如果所要改变的该下级纪律检查委员会的决定，已经得到它的同级党的委员会的批准，这种改变必须经过它的上一级党的委员会批准。</p><p>　　党的地方各级纪律检查委员会和基层纪律检查委员会如果对同级党的委员会处理案件的决定有不同意见，可以请求上一级纪律检查委员会予以复查；如果发现同级党的委员会或它的成员有违犯党的纪律的情况，在同级党的委员会不给予解决或不给予正确解决的时候，有权向上级纪律检查委员会提出申诉，请求协助处理。</p><h1 id="第九章-党-组"><a href="#第九章-党-组" class="headerlink" title="第九章　党　组"></a><strong>第九章　党　组</strong></h1><p>　　第四十八条　在中央和地方国家机关、人民团体、经济组织、文化组织和其他非党组织的领导机关中，可以成立党组。党组发挥领导核心作用。党组的任务，主要是负责贯彻执行党的路线、方针、政策；加强对本单位党的建设的领导，履行全面从严治党责任；讨论和决定本单位的重大问题；做好干部管理工作；讨论和决定基层党组织设置调整和发展党员、处分党员等重要事项；团结党外干部和群众，完成党和国家交给的任务；领导机关和直属单位党组织的工作。</p><p>　　第四十九条　党组的成员，由批准成立党组的党组织决定。党组设书记，必要时还可以设副书记。</p><p>　　党组必须服从批准它成立的党组织领导。</p><p>　　第五十条　对下属单位实行集中统一领导的国家工作部门可以建立党委，党委的产生办法、职权和工作任务，由中央另行规定。</p><h1 id="第十章-党和共产主义青年团的关系"><a href="#第十章-党和共产主义青年团的关系" class="headerlink" title="第十章　党和共产主义青年团的关系"></a><strong>第十章　党和共产主义青年团的关系</strong></h1><p>　　第五十一条　中国共产主义青年团是中国共产党领导的先进青年的群团组织，是广大青年在实践中学习中国特色社会主义和共产主义的学校，是党的助手和后备军。共青团中央委员会受党中央委员会领导。共青团的地方各级组织受同级党的委员会领导，同时受共青团上级组织领导。</p><p>　　第五十二条　党的各级委员会要加强对共青团的领导，注意团的干部的选拔和培训。党要坚决支持共青团根据广大青年的特点和需要，生动活泼地、富于创造性地进行工作，充分发挥团的突击队作用和联系广大青年的桥梁作用。</p><p>　　团的县级和县级以下各级委员会书记，企业事业单位的团委员会书记，是党员的，可以列席同级党的委员会和常务委员会的会议。</p><h1 id="第十一章-党徽党旗"><a href="#第十一章-党徽党旗" class="headerlink" title="第十一章　党徽党旗"></a><strong>第十一章　党徽党旗</strong></h1><p>　　第五十三条　中国共产党党徽为镰刀和锤头组成的图案。</p><p>　　第五十四条　中国共产党党旗为旗面缀有金黄色党徽图案的红旗。</p><p>　　第五十五条　中国共产党的党徽党旗是中国共产党的象征和标志。党的各级组织和每一个党员都要维护党徽党旗的尊严。要按照规定制作和使用党徽党旗。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>近代史纲要</title>
    <link href="/2021/04/15/%E8%BF%91%E4%BB%A3%E5%8F%B2%E7%BA%B2%E8%A6%81/"/>
    <url>/2021/04/15/%E8%BF%91%E4%BB%A3%E5%8F%B2%E7%BA%B2%E8%A6%81/</url>
    
    <content type="html"><![CDATA[<h1 id="戊戌维新的历史意义、失败原因、经验教训"><a href="#戊戌维新的历史意义、失败原因、经验教训" class="headerlink" title="戊戌维新的历史意义、失败原因、经验教训"></a>戊戌维新的历史意义、失败原因、经验教训</h1><p><strong>空前民族危机下的救亡改革运动</strong>——甲午战争之后</p><h2 id="经过："><a href="#经过：" class="headerlink" title="经过："></a>经过：</h2><h3 id="1895年公车上书——维新运动的序幕"><a href="#1895年公车上书——维新运动的序幕" class="headerlink" title="1895年公车上书——维新运动的序幕"></a>1895年公车上书——维新运动的序幕</h3><p>上书皇帝拒签马关条约，继续与日本开战</p><p>结果：失败</p><h3 id="1895-1898年开展政治活动"><a href="#1895-1898年开展政治活动" class="headerlink" title="1895~1898年开展政治活动"></a>1895~1898年开展政治活动</h3><ol><li>办学会、设新式学堂（数理化，历史政治）</li><li>创办报纸（《万国公报》、《中外纪文》、《强学报》······）</li><li>著书立说、介绍外国变法</li><li>向皇帝上书，参与新政</li></ol><h3 id="1898年昙花一现百日维新"><a href="#1898年昙花一现百日维新" class="headerlink" title="1898年昙花一现百日维新"></a>1898年昙花一现百日维新</h3><p>颁布“明定国是”诏书，宣布了变更旧法，博采西学，发奋图强</p><p>6月11日~9月21日</p><p>特点：大变、全变</p><table><thead><tr><th align="center">类别</th><th align="left">颁布的新发</th><th align="left">改革的旧制</th></tr></thead><tbody><tr><td align="center">政治方面</td><td align="left">广开言路，提倡官民上书</td><td align="left">1.裁撤闲散重叠机构</td></tr><tr><td align="center"></td><td align="left"></td><td align="left">2.裁撤冗员</td></tr><tr><td align="center"></td><td align="left"></td><td align="left">3澄清吏治</td></tr><tr><td align="center">经济方面</td><td align="left">1.中央设立矿物铁路局、农工商总局，奖励农、工、商的发展。</td><td align="left">1.取消旗人有国家供养的政策，令其自谋生计</td></tr><tr><td align="center"></td><td align="left">2.兴办商会、农会等民间团体</td><td align="left">2.裁减驿站</td></tr><tr><td align="center"></td><td align="left">3.改革财政，编制预算结算</td><td align="left"></td></tr><tr><td align="center"></td><td align="left">4.设立邮政机构，修筑铁路</td><td align="left"></td></tr><tr><td align="center">军事方面</td><td align="left">1.精练陆军，改习洋操</td><td align="left">裁汰旧军</td></tr><tr><td align="center"></td><td align="left">2.添置兵轮，扩建海军</td><td align="left"></td></tr></tbody></table><h3 id="1898年9月21日慈禧太后发动了戊戌政变"><a href="#1898年9月21日慈禧太后发动了戊戌政变" class="headerlink" title="1898年9月21日慈禧太后发动了戊戌政变"></a>1898年9月21日慈禧太后发动了戊戌政变</h3><p>戊戌维新运动宣告破产</p><h2 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h2><p>学术争论：部分学者给戊戌变法扣上了改良的帽子，加以否定</p><p>是一次思想启蒙运动</p><p>是一次爱国救亡运动</p><p>是一次资产阶级性质的政治改革运动</p><h2 id="失败原因"><a href="#失败原因" class="headerlink" title="失败原因"></a>失败原因</h2><p>客观方面：以慈禧太后为首的旧势力的强大</p><p>慈禧最初对变法的态度：也曾对光绪的变法表示同情和支持</p><p>全变、大变的改革主张，造成整个社会结构的强烈震荡。</p><p>蔑视慈禧权威，直接威胁到她的权力。</p><p>维新人士缺乏政治经验，过早激化帝—后矛盾，忽略拉拢洋务派李鸿章、张之洞等人，导致力量薄弱。以卵击石，最终粉身碎骨！！<strong>鉴之鉴之！！</strong></p><p>主观方面：维新派自身的局限性（中国民族资产阶级发展不彻底，具有软弱性和妥协性）</p><ol><li>不敢否定封建主义</li><li>对帝国主义抱有幻想</li><li>不敢发动人民群众</li></ol><h1 id="辛亥革命爆发的原因、主要政治活动、历史意义、失败的原因"><a href="#辛亥革命爆发的原因、主要政治活动、历史意义、失败的原因" class="headerlink" title="辛亥革命爆发的原因、主要政治活动、历史意义、失败的原因"></a>辛亥革命爆发的原因、主要政治活动、历史意义、失败的原因</h1><p><strong>资产阶级革命发动的辛亥革命</strong></p><p>历史背景：民族危机继续加剧，清政府不能应对这一危机，中国民众对清政府丧失信心。</p><h2 id="1894-1901年：并非适合革命，更适合改良（是康有为的年代，而不是孙中山的年代）"><a href="#1894-1901年：并非适合革命，更适合改良（是康有为的年代，而不是孙中山的年代）" class="headerlink" title="1894~1901年：并非适合革命，更适合改良（是康有为的年代，而不是孙中山的年代）"></a>1894~1901年：并非适合革命，更适合改良（是康有为的年代，而不是孙中山的年代）</h2><p>革命思想不受欢迎，改良思想能得到更多人的支持</p><h3 id="1894年：建立兴中会"><a href="#1894年：建立兴中会" class="headerlink" title="1894年：建立兴中会"></a>1894年：建立兴中会</h3><p>只有几十人耳，拥护者寥寥无几。</p><h3 id="1895年：广州起义、公车上书、百日维新"><a href="#1895年：广州起义、公车上书、百日维新" class="headerlink" title="1895年：广州起义、公车上书、百日维新"></a>1895年：广州起义、公车上书、百日维新</h3><h3 id="1901年：八国联军入侵北京，签订《辛丑条约》"><a href="#1901年：八国联军入侵北京，签订《辛丑条约》" class="headerlink" title="1901年：八国联军入侵北京，签订《辛丑条约》"></a>1901年：八国联军入侵北京，签订《辛丑条约》</h3><p>满清政府彻底沦为列强瓜分中国的工具，清政府威信荡然无存。</p><p>革命思想渐渐被人所接受</p><p>《革命军》——邹容：销量百万册，点燃革命思想</p><h2 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h2><h4 id="1894年成立兴中会——资产阶级革命派第一个团体"><a href="#1894年成立兴中会——资产阶级革命派第一个团体" class="headerlink" title="1894年成立兴中会——资产阶级革命派第一个团体"></a>1894年成立兴中会——资产阶级革命派第一个团体</h4><h4 id="1905年中国同盟会成立——确立革命纲领"><a href="#1905年中国同盟会成立——确立革命纲领" class="headerlink" title="1905年中国同盟会成立——确立革命纲领"></a>1905年中国同盟会成立——确立革命纲领</h4><p>使分散的资产阶级革命派更为团结</p><p>确立资产阶级革命派纲领——三民主义（民族、民权、民主）</p><p>驱逐鞑虏，恢复中华，创立民国，平均地权（旧三民主义）</p><h5 id="民族主义——第一个主义，首要问题"><a href="#民族主义——第一个主义，首要问题" class="headerlink" title="民族主义——第一个主义，首要问题"></a>民族主义——第一个主义，首要问题</h5><p>内容：驱逐鞑虏，恢复中华</p><p>优点：</p><ol><li>用暴力革命手段推翻清政府</li><li>将满族贵族同满族人们区分来</li></ol><p>缺点：</p><ol><li>革命目标直接为“排满”，具有一定的大汉族主义思想</li><li>没有明确地提出反对帝国主义的主张</li><li>对汉族地主阶级妥协</li></ol><h5 id="民权主义——核心"><a href="#民权主义——核心" class="headerlink" title="民权主义——核心"></a>民权主义——核心</h5><p>内容：</p><p>优点：把政治革命同民族革命结合起来</p><p>缺点：人民的民主权利难以得到真正的保障</p><h5 id="民族主义——特色"><a href="#民族主义——特色" class="headerlink" title="民族主义——特色"></a>民族主义——特色</h5><p>解决人民的经济生活问题，防止贫富差距过大</p><p>从<strong>资本</strong>和<strong>土地</strong>入手</p><p>内容：</p><ol><li>土地问题的解决</li><li>平均地权：土地国有制，核定天下地价，照价收买，照价纳税</li><li>施行“国家资本主义”</li></ol><p>优点：把社会革命与政治革命和民族革命结合起来</p><p>缺点：没有正面触及封建土地所有制，不能满足农民对土地的要求（“如此漂亮又如此模糊的经济革命”）</p><h4 id="1905-1907关于改革和革命的辩论"><a href="#1905-1907关于改革和革命的辩论" class="headerlink" title="1905-1907关于改革和革命的辩论"></a>1905-1907关于改革和革命的辩论</h4><p><strong>划清了革命和改革的界限</strong>，同时也促进了革命思想的进一步发展</p><h5 id="问题一：要不要以革命的手段推翻清王朝"><a href="#问题一：要不要以革命的手段推翻清王朝" class="headerlink" title="问题一：要不要以革命的手段推翻清王朝"></a>问题一：要不要以革命的手段推翻清王朝</h5><p>改良派：中国不能革命，只能改良</p><p>革命派：只要革命才能促进中国社会进步、民族独立</p><h5 id="问题二：要不要推翻帝制，实行共和制"><a href="#问题二：要不要推翻帝制，实行共和制" class="headerlink" title="问题二：要不要推翻帝制，实行共和制"></a>问题二：要不要推翻帝制，实行共和制</h5><p>改良派：不能实行共和政体，而应实行君主立宪制</p><p>革命派：中国民众自有建立民主共和的能力</p><h5 id="问题三：要不要进行社会革命（要不要改变地主所有制，而实行土地国有、平均地权）"><a href="#问题三：要不要进行社会革命（要不要改变地主所有制，而实行土地国有、平均地权）" class="headerlink" title="问题三：要不要进行社会革命（要不要改变地主所有制，而实行土地国有、平均地权）"></a>问题三：要不要进行社会革命（要不要改变地主所有制，而实行土地国有、平均地权）</h5><p>改良派：</p><p>革命派：</p><p><strong>革命派赢得了辩论</strong></p><ol><li>当时的群众多为年轻人，对革命派思想更感兴趣</li><li>改良派前后态度不一，失了民心</li><li>改良派已经失败，革命派还没有尝试</li></ol><h4 id="1911年保路运动——-gt-辛亥革命"><a href="#1911年保路运动——-gt-辛亥革命" class="headerlink" title="1911年保路运动——&gt;辛亥革命"></a>1911年保路运动——&gt;辛亥革命</h4><p>川督赵尔丰制造“成都血案”，激变全川，导致文明情愿变为起义运动</p><p>湖北省调兵支援四川，导致湖北省清军兵力较弱</p><p>1911年10月10日起义消息泄露，革命被迫提前发动</p><p>10月10日晚打响革命起义第一枪</p><p>辛亥革命具有<strong>突发性</strong>（起义消息泄露——&gt;第一枪意外打响——&gt;军政府的都督强迫黎元洪担任）</p><p><strong>迅速性</strong>（各省纷纷宣布独立）</p><p><em>保路运动</em>成为辛亥革命的导火索</p><p>1911年12月17~31日南北议和</p><p>1911年12月27日成立南京临时政府，孙中山任临时总统</p><p><strong>《中华民族约法》</strong></p><p>关系破裂，情况紧张</p><p>1912年2月12日皇帝退位——帝制结束</p><p>辛亥革命的意义：推翻了</p><p>辛亥革命的失败：</p><h1 id="资产阶级为什么在中国行不通？"><a href="#资产阶级为什么在中国行不通？" class="headerlink" title="资产阶级为什么在中国行不通？"></a>资产阶级为什么在中国行不通？</h1><h2 id="中国国情——半殖民地半封建社会"><a href="#中国国情——半殖民地半封建社会" class="headerlink" title="中国国情——半殖民地半封建社会"></a>中国国情——半殖民地半封建社会</h2><p>中国自身生产力和商品经济未发展到足够程度，在外力——西方资本主义列强——压迫下产生的民主资本主义</p><p><strong>先天不足，后天急性</strong></p><ol><li>国民经济中民族资本经济占比小</li><li>工业资本占比小，商业资本和金融业资本占比大</li><li>缺乏重工业</li><li>规模小，技术落后，生产效率低</li><li>民族资本经济有封建经济的影子</li></ol><p>经济基础决定上层建筑，导致民主资本主义存在妥协性：</p><ol><li>不敢发动农民，不可能解决农民问题</li><li>具有两面性</li><li>没有自己的武装</li></ol><p>先天不足，后天畸形</p><p>三座大山</p><p>缺少安定环境</p><h1 id="开天辟地的大事件——中国共产党的成立"><a href="#开天辟地的大事件——中国共产党的成立" class="headerlink" title="开天辟地的大事件——中国共产党的成立"></a>开天辟地的大事件——中国共产党的成立</h1><h2 id="新文化运动和五四运动"><a href="#新文化运动和五四运动" class="headerlink" title="新文化运动和五四运动"></a>新文化运动和五四运动</h2><p>历史背景：1915年，中国与日本签订二十一条</p><h3 id="1915-1919新文化运动前期"><a href="#1915-1919新文化运动前期" class="headerlink" title="1915~1919新文化运动前期"></a>1915~1919新文化运动前期</h3><p>1.《新青年》杂志的发行</p><p>2.北京大学的改革-&gt;蔡元培-&gt;思想学术自由-&gt;新文化运动的中心阵地</p><p>3.思想文化改革运动</p><p>-&gt;<strong>白话文运动</strong>（胡适）-&gt;文学革命（提倡新文学，反对旧文学）</p><p>-&gt;批判传统儒家文化——“打倒孔家店”（儒家思想中的等级制度、尊卑秩序、婚姻制度（包办婚姻、男尊女卑）、家庭制度、敬菩萨信风水的风俗习惯）</p><blockquote><p>梁漱溟对儒家思想的态度</p><p>提出新儒学——西方工业文明和儒家文化结合</p><p>认可的是先秦时期的孔孟儒学</p></blockquote><p>-&gt;批判、改造国民性（前期新文化运动的主要内容）</p><p>4.<strong>伦理觉悟；提倡新道德</strong>（个性解放、自主、独立、平等），反对旧道德（三纲五常）；</p><p>5.新思想的引进—–&gt;新文化的两面大旗：民主科学；旗手：陈独秀、胡适</p><p>-&gt;社会主义派别</p><p>-&gt;封建主义派别</p><p>-&gt;资本主义派别</p><p><strong>启发民众的政治觉悟</strong></p><p>民主-&gt;指资产阶级民主政治当时指向的是<strong>人权</strong></p><p>科学-&gt;用科学的精神和方法研究自然科学和社会</p><h3 id="五四运动的爆发"><a href="#五四运动的爆发" class="headerlink" title="五四运动的爆发"></a>五四运动的爆发</h3><p>五四运动的导火索——巴黎和会外交失败</p><p>第一阶段：</p><p>北京，学生</p><p>第二阶段：</p><p>全国，三罢</p><p>历史特点</p><ol><li>是彻底的不妥协的的反帝反封建爱国运动</li><li>是一次真正的群众运动</li><li>促进了马克思主义在中国的传播及其与中国工人运动相结合</li></ol><p>标志新民主主义革命的开端</p><p>——新的时代特点</p><p>——新的<strong>领导力量</strong>（与旧民主主义革命最根本的曲别）</p><p>——新的指导思想</p><p>——新的发展方向</p><h3 id="后期新文化运动的发展"><a href="#后期新文化运动的发展" class="headerlink" title="后期新文化运动的发展"></a>后期新文化运动的发展</h3><p>知识分子把他们的注意力由对传统观念制度的共同敌视转移到寻求积极救国方案，在面对各种各样的社会哲学和社会形式时，新知识分子内部便出现了分歧</p><h4 id="胡适（自由主义者）——倾向于学术研究、改革和渐进进化"><a href="#胡适（自由主义者）——倾向于学术研究、改革和渐进进化" class="headerlink" title="胡适（自由主义者）——倾向于学术研究、改革和渐进进化"></a>胡适（自由主义者）——倾向于学术研究、改革和渐进进化</h4><p>多研究问题，少谈些主义，通过解决一个个问题来改造中国。</p><p>主义只是解决问题的方法。</p><h4 id="陈独秀——倾向于政治行动和暴力革命（在参政方式上选择了马克思主义）"><a href="#陈独秀——倾向于政治行动和暴力革命（在参政方式上选择了马克思主义）" class="headerlink" title="陈独秀——倾向于政治行动和暴力革命（在参政方式上选择了马克思主义）"></a>陈独秀——倾向于政治行动和暴力革命（在参政方式上选择了马克思主义）</h4><h2 id="马克思主义的传播"><a href="#马克思主义的传播" class="headerlink" title="马克思主义的传播"></a>马克思主义的传播</h2><p><strong>马克思主义<u>（马列主义）</u>为什么能在中国传播开来，并得到大批知识分子的青睐，成为他们的信仰?</strong></p><p>答：</p><p>西方不亮东方亮。</p><ol><li>辛亥革命的经验与教训：中国旧民主主义革命的失败，打破了中国人对西方革命思想和建国方案的迷信</li><li>新文化运动</li><li>十月革命</li><li>五四运动的推动</li><li>马克思主义理论自身的吸引力</li></ol><h3 id="先进知识分子转变为马克思主义者"><a href="#先进知识分子转变为马克思主义者" class="headerlink" title="先进知识分子转变为马克思主义者"></a>先进知识分子转变为马克思主义者</h3><p>陈独秀、李大钊</p><h3 id="五四进步青年转变为马克思主义者"><a href="#五四进步青年转变为马克思主义者" class="headerlink" title="五四进步青年转变为马克思主义者"></a>五四进步青年转变为马克思主义者</h3><p>毛泽东、杨匏安、蔡和森、周恩来</p><h3 id="原同盟会会员转变为马克思主义者"><a href="#原同盟会会员转变为马克思主义者" class="headerlink" title="原同盟会会员转变为马克思主义者"></a>原同盟会会员转变为马克思主义者</h3><p>朱德、吴玉章、董必武、林伯渠</p><h2 id="中国共产党的诞生"><a href="#中国共产党的诞生" class="headerlink" title="中国共产党的诞生"></a>中国共产党的诞生</h2><h3 id="（一）中国共产党成立的历史必然性"><a href="#（一）中国共产党成立的历史必然性" class="headerlink" title="（一）中国共产党成立的历史必然性"></a>（一）中国共产党成立的历史必然性</h3><p>1、国际背景</p><p>首先——西方不亮东方亮</p><p>其次——加拉罕宣言</p><p>2、国内背景</p><p>中国近代基本国情-&gt;反帝反封建-&gt;革命需要坚强的领导者和组织者-&gt;中国共产党成立</p><p>救国屡次失败-&gt;历史呼唤新阶级的新政党的领导-&gt;中国共产党成立</p><p>3、内部基础</p><p>1）阶级基础——无产阶级迅速壮大和日益成熟是中国共产党诞生的经济基础和阶级基础。</p><p>工人阶级特点：工人分布集中；收到压迫重，反抗力量大；与农民阶级联系密切</p><p>2）思想基础——新文化运动中，中国先进知识分子信奉、宣传马克思主义思想，为中国共产党成立提供思想基础。</p><p>3）组织基础——地方成立中国共产党早期组织</p><p>4、外部条件</p><h3 id="中国共产党早期的活动"><a href="#中国共产党早期的活动" class="headerlink" title="中国共产党早期的活动"></a>中国共产党早期的活动</h3><h4 id="研究和宣传马克思主义"><a href="#研究和宣传马克思主义" class="headerlink" title="研究和宣传马克思主义"></a>研究和宣传马克思主义</h4><p>三次论战：</p><ol><li>问题与主义之争</li><li>社会主义论证</li><li>同无政府主义的论证</li></ol><h4 id="到工人中宣传和组织"><a href="#到工人中宣传和组织" class="headerlink" title="到工人中宣传和组织"></a>到工人中宣传和组织</h4><ol><li>创办各种形式的工人夜校</li><li>组织工会，发动罢工</li></ol><h4 id="经行建党问题的讨论和实际组织工作"><a href="#经行建党问题的讨论和实际组织工作" class="headerlink" title="经行建党问题的讨论和实际组织工作"></a>经行建党问题的讨论和实际组织工作</h4><h2 id="中国革命的新局面"><a href="#中国革命的新局面" class="headerlink" title="中国革命的新局面"></a>中国革命的新局面</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/15</title>
    <link href="/2021/04/15/4-15/"/>
    <url>/2021/04/15/4-15/</url>
    
    <content type="html"><![CDATA[<p>​    : 你在想什么？</p><p>（你在想什么我就在想什么）：没什么······欸，那个是什么？</p><p>我已将你读懂，你可将我读懂？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>匿名提问</title>
    <link href="/2021/04/13/%E5%8C%BF%E5%90%8D%E6%8F%90%E9%97%AE/"/>
    <url>/2021/04/13/%E5%8C%BF%E5%90%8D%E6%8F%90%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<p>由于能力有限，我无法知道我的博客评论区评论者的信息</p><p>正好可以拿来做匿名信箱</p><p><strong>来提问吧⬇</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>部署问题及解决方法</title>
    <link href="/2021/04/13/%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2021/04/13/%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="部署问题及解决方法"><a href="#部署问题及解决方法" class="headerlink" title="部署问题及解决方法"></a>部署问题及解决方法</h1><p>1.</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">Failed <span class="hljs-keyword">to</span> connect <span class="hljs-keyword">to</span> github.com <span class="hljs-keyword">port</span> <span class="hljs-number">443</span>:<br></code></pre></td></tr></table></figure><p>使用指令</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> --<span class="hljs-keyword">unset</span> <span class="hljs-keyword">http</span>.proxy<br></code></pre></td></tr></table></figure><p>2.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">OpenSSL SSL_read: <span class="hljs-keyword">Connection</span> was <span class="hljs-keyword">reset</span>, errno <span class="hljs-number">10054</span><br></code></pre></td></tr></table></figure><p>使用指令</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> <span class="hljs-keyword">http</span>.sslVerify <span class="hljs-string">&quot;false&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/13</title>
    <link href="/2021/04/13/4-13/"/>
    <url>/2021/04/13/4-13/</url>
    
    <content type="html"><![CDATA[<blockquote><p>一个人的灵魂堕落，莫过于把自己变成宇宙的的赘瘤。对任何发生的事情抱怨，便是对自然的违逆，因为一切的事物都不过是自然的某一部分而已。另一堕落之道便是：对某人加以嫉视，甚至意欲加害于他，许多愤怒的人便往往如是。第三个堕落之道便是：被享乐或痛苦所征服。第四：戴假面具，在言行上虚伪无诚。第五：行为或意向漫无目标，对任何事都掉以轻心不加考虑，殊不知最细琐的事也应顾虑到其结果。有理性的人应以服从那最原始的组织形式，即宇宙之理性与法则，为其终极之目标。</p><p>——奥勒留</p></blockquote><h1 id="眼"><a href="#眼" class="headerlink" title="眼"></a>眼</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/12</title>
    <link href="/2021/04/12/4-12/"/>
    <url>/2021/04/12/4-12/</url>
    
    <content type="html"><![CDATA[<p>果然啊</p><p>翘课只有<strong>零次</strong>和<strong>无数次</strong></p><p><a href="https://www.bilibili.com/video/BV1Jb4y1D79G">https://www.bilibili.com/video/BV1Jb4y1D79G</a></p><p>分享一首音乐啦</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/11</title>
    <link href="/2021/04/11/4-11/"/>
    <url>/2021/04/11/4-11/</url>
    
    <content type="html"><![CDATA[<p>今日有感是生理有感（冒），难道一年两次感冒真的是无法避免的诅咒了吗？</p><p>这一天真的是漫长。</p><p>早晨起床时就感觉嗓子里塞了块石头，浑身没有力气。本以为是嗓子太干，喝点水就能缓解，没想到这一疼就是一天（当然估计是一周了）。嗓子疼还是小事，浑身乏力，大脑宕机。本来规划好的一天完全乱套了，不想下楼洗衣，不想吃早饭，不想学习（这个好像一直如此）。</p><p>这次生病的感觉怪怪的，心情莫名的低沉，可能和前一天有关吧。</p><p>那天晚上睡得很早，想要调整一下我这一周糟糕的睡眠。然而早上4点多就醒了，而且毫无困意了。短暂思索过后顿然感到悲伤，我的睡眠向来比别人少</p><p>······</p><p>不说了，难受</p><p>已经没有力气打字了</p><blockquote><p>我有点疲倦了，但我总要还有勇气，在狗一样的生活上做出神仙一样的事。</p><p>​                                                                                                ——汪曾祺</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一张图片</title>
    <link href="/2021/04/11/%E7%AC%AC%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/"/>
    <url>/2021/04/11/%E7%AC%AC%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<p><strong>兜兜转转跌跌撞撞终于做好了我自己的图床，从此以后我的博客可以上传照片了！！！！！！</strong></p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/avatar2.png" alt="第一张图片"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4/10</title>
    <link href="/2021/04/10/4-10/"/>
    <url>/2021/04/10/4-10/</url>
    
    <content type="html"><![CDATA[<p>第一次萌生制作博客的念头还是在三个月前，那是看到川大校友王兆基的博客感觉非常神奇，摩拳擦掌想要自己做一个。先是在网上查各种资料，得知以hexo作为模板制作的博客可以托管在GitHub上，几乎零成本，我便决定试一试。</p><p>一开始是非常困难的，要下载很多软件。要么是纯英文的介绍让我一脸懵，要么资源在国外我为了逃避龟速下载只得在国内找资源。一通折腾过后，总算是万事俱备，我便开始构建我的博客。这时我才发现之前遇到的都不算困难。</p><p>即使网上的流程非常详细，但对于我这个小白而言还是难以理解，在加之有一些教程自身存在一些局限性，我不得不四处寻找其他版本的教程。前前后后找了四五个教程，曾遇到过一个非常详细的教程，让我少走了不少弯路（不过现在被封了）。</p><p>如果问我学到了什么，我真的不知道该怎么回答。虽然我在这个过程中使用了git、hexo、GitHub等工具，但我还是十分清楚我对他们仍是一无所知。但是我要频繁地使用命令窗口，看着满屏的指令结果，并在其中找到问题，我敢说在这个过程中我对计算机的运行原理有了更为深入，抽象的理解。深入是指几乎没有老师可以教我，如果没有这次经历我可能一辈子也想不到；抽象是指要是让我给别人讲一讲到底是怎么回事，我真的讲不出来什么。</p><p><img src="https://raw.githubusercontent.com/nobug-maker/PicGoCDN/master/abc.jpg" alt="avatar"></p><p>此外博客要搭建在网络上，不知不觉中我对网络的原理也有了一些自己的感觉。当然很多时候都是被逼出来的，明明本地可以预览，就是挂不到网上；明明已经部署但是网上的资源就是不更新；以及最令我无语的是因为政治敏感的原因，曾有一段时间无法访问GitHub导致博客塌掉，无奈之下我只得弃城逃跑······</p><p>当然在设置主题的时候我终于懂得了程序员的辛苦，在这里我留一个备份,感谢中文注释！！！</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># Hexo Theme Fluid</span><br><span class="hljs-comment"># Author: Fluid-dev</span><br><span class="hljs-comment"># Github: https://github.com/fluid-dev/hexo-theme-fluid</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 配置指南: https://hexo.fluid-dev.com/docs/guide/</span><br><span class="hljs-comment"># 你可以从指南中获得更详细的说明</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Guide: https://hexo.fluid-dev.com/docs/en/guide/</span><br><span class="hljs-comment"># You can get more detailed help from the guide</span><br><span class="hljs-comment">#---------------------------</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 全局</span><br><span class="hljs-comment"># Global</span><br><span class="hljs-comment">#---------------------------</span><br><br><span class="hljs-comment"># 用于浏览器标签的图标</span><br><span class="hljs-comment"># Icon for browser tab</span><br><span class="hljs-attr">favicon:</span> <span class="hljs-string">/img/avatar.png</span><br><br><span class="hljs-comment"># 用于苹果设备的图标</span><br><span class="hljs-comment"># Icon for Apple touch</span><br><span class="hljs-attr">apple_touch_icon:</span> <span class="hljs-string">/img/avatar.png</span><br><br><span class="hljs-comment"># 浏览器标签页中的标题分隔符，效果： 文章名 - 站点名</span><br><span class="hljs-comment"># Title separator in browser tab, eg: article - site</span><br><span class="hljs-attr">tab_title_separator:</span> <span class="hljs-string">&quot; - &quot;</span><br><br><span class="hljs-comment"># 强制所有链接升级为 HTTPS（适用于图片等资源出现 HTTP 混入报错）</span><br><span class="hljs-comment"># Force all links to be HTTPS (applicable to HTTP mixed error)</span><br><span class="hljs-attr">force_https:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># 代码块的增强配置</span><br><span class="hljs-comment"># Enhancements to code blocks</span><br><span class="hljs-attr">code:</span><br>  <span class="hljs-comment"># 是否开启复制代码的按钮</span><br>  <span class="hljs-comment"># Enable copy code button</span><br>  <span class="hljs-attr">copy_btn:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 代码高亮</span><br>  <span class="hljs-comment"># Code highlight</span><br>  <span class="hljs-attr">highlight:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 代码块是否显示行号</span><br>    <span class="hljs-comment"># If true, the code block display line numbers</span><br>    <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 实现高亮的库，对应下面的设置</span><br>    <span class="hljs-comment"># Highlight library</span><br>    <span class="hljs-comment"># Options: highlightjs | prismjs</span><br>    <span class="hljs-attr">lib:</span> <span class="hljs-string">&quot;highlightjs&quot;</span><br><br>    <span class="hljs-attr">highlightjs:</span><br>      <span class="hljs-comment"># 在链接中挑选 style 填入</span><br>      <span class="hljs-comment"># Select a style in the link</span><br>      <span class="hljs-comment"># See: https://highlightjs.org/static/demo/</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">&quot;Github Gist&quot;</span><br><br>      <span class="hljs-comment"># 是否根据 style 改变代码背景色（如果 style 是深色背景别忘了开启此项）</span><br>      <span class="hljs-comment"># If true, the code background will change color based on the style (If style has a dark background, don&#x27;t forget to true)</span><br>      <span class="hljs-attr">bg_color:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-attr">prismjs:</span><br>      <span class="hljs-comment"># 在下方链接页面右侧的圆形按钮挑选 style 填入，也可以直接填入 css 链接</span><br>      <span class="hljs-comment"># Select the style button on the right side of the link page, you can also set the CSS link</span><br>      <span class="hljs-comment"># See: https://prismjs.com/</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">&quot;default&quot;</span><br><br>      <span class="hljs-comment"># 设为 true 高亮将本地静态生成（并只支持部分 prismjs 插件），设为 false 高亮将在浏览器通过 js 生成</span><br>      <span class="hljs-comment"># If true, it will be generated locally (but some prismjs plugins are not supported). If false, it will be generated via JS in the browser</span><br>      <span class="hljs-attr">preprocess:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 一些好玩的功能</span><br><span class="hljs-comment"># Some fun features</span><br><span class="hljs-attr">fun_features:</span><br>  <span class="hljs-comment"># 为 subtitle 添加打字机效果</span><br>  <span class="hljs-comment"># Typing animation for subtitle</span><br>  <span class="hljs-attr">typing:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 打印速度，数字越大越慢</span><br>    <span class="hljs-comment"># Typing speed, the larger the number, the slower</span><br>    <span class="hljs-attr">typeSpeed:</span> <span class="hljs-number">70</span><br><br>    <span class="hljs-comment"># 游标字符</span><br>    <span class="hljs-comment"># Cursor character</span><br>    <span class="hljs-attr">cursorChar:</span> <span class="hljs-string">&quot;_&quot;</span><br><br>    <span class="hljs-comment"># 是否循环播放效果</span><br>    <span class="hljs-comment"># If true, loop animation</span><br>    <span class="hljs-attr">loop:</span> <span class="hljs-literal">false</span><br><br>  <span class="hljs-comment"># 为文章内容中的标题添加锚图标</span><br>  <span class="hljs-comment"># Add an anchor icon to the title on the post page</span><br>  <span class="hljs-attr">anchorjs:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">element:</span> <span class="hljs-string">h1,h2,h3,h4,h5,h6</span><br>    <span class="hljs-attr">placement:</span> <span class="hljs-string">right</span><br>    <span class="hljs-comment"># Options: hover | always | touch</span><br>    <span class="hljs-attr">visible:</span> <span class="hljs-string">hover</span><br>    <span class="hljs-comment"># Option：§ | # | ❡</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;&quot;</span><br><br>  <span class="hljs-comment"># 加载进度条</span><br>  <span class="hljs-comment"># Progress bar when loading</span><br>  <span class="hljs-attr">progressbar:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">height_px:</span> <span class="hljs-number">3</span><br>    <span class="hljs-attr">color:</span> <span class="hljs-string">&quot;#29d&quot;</span><br>    <span class="hljs-comment"># See: https://github.com/rstacruz/nprogress</span><br>    <span class="hljs-attr">options:</span> &#123; <span class="hljs-attr">showSpinner:</span> <span class="hljs-literal">false</span>, <span class="hljs-attr">trickleSpeed:</span> <span class="hljs-number">100</span> &#125;<br><br><span class="hljs-comment"># 主题暗色模式，开启后菜单中会出现切换按钮，用户浏览器会存储切换选项，并且会遵循 prefers-color-scheme 自动切换</span><br><span class="hljs-comment"># Theme dark mode. If enable, a switch button will appear on the menu, each of the visitor&#x27;s browser will store his switch option</span><br><span class="hljs-attr">dark_mode:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># 默认的选项（当用户手动切换后则不再按照默认模式），选择 `auto` 会优先遵循 prefers-color-scheme，其次按用户本地时间 18 点到次日 6 点之间进入暗色模式</span><br>  <span class="hljs-comment"># Default option (when the visitor switches manually, the default mode is no longer followed), choosing `auto` will give priority to prefers-color-scheme, and then enter the dark mode from 18:00 to 6:00 in the visitor’s local time</span><br>  <span class="hljs-comment"># Options: auto | light | dark</span><br>  <span class="hljs-attr">default:</span> <span class="hljs-string">auto</span><br><br><span class="hljs-comment"># 主题颜色配置，其他不生效的地方请使用自定义 css 解决，配色可以在下方链接中获得启发</span><br><span class="hljs-comment"># Theme color, please use custom CSS to solve other colors, color schema can be inspired by the links below</span><br><span class="hljs-comment"># See: https://www.webdesignrankings.com/resources/lolcolors/</span><br><span class="hljs-attr">color:</span><br>  <span class="hljs-comment"># body 背景色</span><br>  <span class="hljs-comment"># Color of body background</span><br>  <span class="hljs-attr">body_bg_color:</span> <span class="hljs-string">&quot;#eee&quot;</span><br>  <span class="hljs-comment"># 暗色模式下的 body 背景色，下同</span><br>  <span class="hljs-comment"># Color in dark mode, the same below</span><br>  <span class="hljs-attr">body_bg_color_dark:</span> <span class="hljs-string">&quot;#181c27&quot;</span><br><br>  <span class="hljs-comment"># 顶部菜单背景色</span><br>  <span class="hljs-comment"># Color of navigation bar background</span><br>  <span class="hljs-attr">navbar_bg_color:</span> <span class="hljs-string">&quot;#2f4154&quot;</span><br>  <span class="hljs-attr">navbar_bg_color_dark:</span> <span class="hljs-string">&quot;#1f3144&quot;</span><br><br>  <span class="hljs-comment"># 顶部菜单字体色</span><br>  <span class="hljs-comment"># Color of navigation bar text</span><br>  <span class="hljs-attr">navbar_text_color:</span> <span class="hljs-string">&quot;#fff&quot;</span><br>  <span class="hljs-attr">navbar_text_color_dark:</span> <span class="hljs-string">&quot;#d0d0d0&quot;</span><br><br>  <span class="hljs-comment"># 全局字体色</span><br>  <span class="hljs-comment"># Color of global text</span><br>  <span class="hljs-attr">text_color:</span> <span class="hljs-string">&quot;#3c4858&quot;</span><br>  <span class="hljs-attr">text_color_dark:</span> <span class="hljs-string">&quot;#c4c6c9&quot;</span><br><br>  <span class="hljs-comment"># 全局次级字体色（摘要、简介等位置）</span><br>  <span class="hljs-comment"># Color of global secondary text (excerpt, introduction, etc.)</span><br>  <span class="hljs-attr">sec_text_color:</span> <span class="hljs-string">&quot;#718096&quot;</span><br>  <span class="hljs-attr">sec_text_color_dark:</span> <span class="hljs-string">&quot;#a7a9ad&quot;</span><br><br>  <span class="hljs-comment"># 文章正文字体色</span><br>  <span class="hljs-comment"># Color of post text</span><br>  <span class="hljs-attr">post_text_color:</span> <span class="hljs-string">&quot;#2c3e50&quot;</span><br>  <span class="hljs-attr">post_text_color_dark:</span> <span class="hljs-string">&quot;#c4c6c9&quot;</span><br><br>  <span class="hljs-comment"># 文章正文字体色（h1 h2 h3...）</span><br>  <span class="hljs-comment"># Color of Article heading (h1 h2 h3...)</span><br>  <span class="hljs-attr">post_heading_color:</span> <span class="hljs-string">&quot;#1a202c&quot;</span><br>  <span class="hljs-attr">post_heading_color_dark:</span> <span class="hljs-string">&quot;#c4c6c9&quot;</span><br><br>  <span class="hljs-comment"># 文章超链接字体色</span><br>  <span class="hljs-comment"># Color of post link</span><br>  <span class="hljs-attr">post_link_color:</span> <span class="hljs-string">&quot;#0366d6&quot;</span><br>  <span class="hljs-attr">post_link_color_dark:</span> <span class="hljs-string">&quot;#1589e9&quot;</span><br><br>  <span class="hljs-comment"># 超链接悬浮时字体色</span><br>  <span class="hljs-comment"># Color of link when hovering</span><br>  <span class="hljs-attr">link_hover_color:</span> <span class="hljs-string">&quot;#30a9de&quot;</span><br>  <span class="hljs-attr">link_hover_color_dark:</span> <span class="hljs-string">&quot;#30a9de&quot;</span><br><br>  <span class="hljs-comment"># 超链接悬浮背景色</span><br>  <span class="hljs-comment"># Color of link background when hovering</span><br>  <span class="hljs-attr">link_hover_bg_color:</span> <span class="hljs-string">&quot;#f8f9fa&quot;</span><br>  <span class="hljs-attr">link_hover_bg_color_dark:</span> <span class="hljs-string">&quot;#364151&quot;</span><br><br>  <span class="hljs-comment"># 主面板背景色</span><br>  <span class="hljs-comment"># Color of main board</span><br>  <span class="hljs-attr">board_color:</span> <span class="hljs-string">&quot;#fff&quot;</span><br>  <span class="hljs-attr">board_color_dark:</span> <span class="hljs-string">&quot;#252d38&quot;</span><br><br><span class="hljs-comment"># 主题字体配置</span><br><span class="hljs-comment"># Font</span><br><span class="hljs-attr">font:</span><br>  <span class="hljs-attr">font_size:</span> <span class="hljs-string">16px</span><br>  <span class="hljs-attr">font_family:</span><br>  <span class="hljs-attr">code_font_size:</span> <span class="hljs-number">85</span><span class="hljs-string">%</span><br><br><span class="hljs-comment"># 指定自定义 .js 文件路径，支持列表；路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js</span><br><span class="hljs-comment"># Specify the path of your custom js file, support list. The path is relative to the source directory, such as `/js/custom.js` corresponding to the directory `source/js/custom.js`</span><br><span class="hljs-attr">custom_js:</span><br><br><span class="hljs-comment"># 指定自定义 .css 文件路径，用法和 custom_js 相同</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br><span class="hljs-attr">custom_css:</span><br><br><span class="hljs-comment"># 自定义 &lt;head&gt; 节点中的 HTML 内容</span><br><span class="hljs-comment"># Customize &lt;head&gt; HTML content</span><br><span class="hljs-attr">custom_head:</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment"># 自定义底部 HTML 内容（位于 footer 上方），注意不要和 `post: custom` 配置冲突</span><br><span class="hljs-comment"># Customize the HTML content at the bottom (located above the footer), be careful not to conflict with `post: custom`</span><br><span class="hljs-attr">custom_html:</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment"># 网页访问统计</span><br><span class="hljs-comment"># Analysis of website visitors</span><br><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>  <span class="hljs-comment"># 百度统计的 Key，值需要获取下方链接中 `hm.js?` 后边的字符串</span><br>  <span class="hljs-comment"># Baidu analytics, get the string behind `hm.js?`</span><br>  <span class="hljs-comment"># See: https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376</span><br>  <span class="hljs-attr">baidu:</span><br><br>  <span class="hljs-comment"># Google 统计的 Tracking ID</span><br>  <span class="hljs-comment"># Google analytics, set Tracking ID</span><br>  <span class="hljs-comment"># See: https://developers.google.com/analytics/devguides/collection/analyticsjs</span><br>  <span class="hljs-attr">google:</span><br><br>  <span class="hljs-comment"># Google gtag.js 的媒体资源 ID</span><br>  <span class="hljs-comment"># Google gtag.js GA_MEASUREMENT_ID</span><br>  <span class="hljs-comment"># See: https://developers.google.com/analytics/devguides/collection/gtagjs/</span><br>  <span class="hljs-attr">gtag:</span><br><br>  <span class="hljs-comment"># 腾讯统计的 H5 App ID，开启高级功能才有cid</span><br>  <span class="hljs-comment"># Tencent analytics, set APP ID</span><br>  <span class="hljs-comment"># See: https://mta.qq.com/h5/manage/ctr_app_manage</span><br>  <span class="hljs-attr">tencent:</span><br>    <span class="hljs-attr">sid:</span><br>    <span class="hljs-attr">cid:</span><br><br>  <span class="hljs-comment"># 51.la 站点统计 ID</span><br>  <span class="hljs-comment"># 51.la analytics</span><br>  <span class="hljs-comment"># See: https://www.51.la/user/site/index</span><br>  <span class="hljs-attr">woyaola:</span>  <span class="hljs-comment"># 51.la 站点统计 ID，参见</span><br><br>  <span class="hljs-comment"># 友盟/cnzz 站点统计 web_id</span><br>  <span class="hljs-comment"># cnzz analytics</span><br>  <span class="hljs-comment"># See: https://web.umeng.com/main.php?c=site&amp;a=show</span><br>  <span class="hljs-attr">cnzz:</span><br><br>  <span class="hljs-comment"># LeanCloud 计数统计，可用于 PV UV 展示，如果 `web_analytics: enable` 没有开启，PV UV 展示只会查询不会增加</span><br>  <span class="hljs-comment"># LeanCloud count statistics, which can be used for PV UV display. If `web_analytics: enable` is false, PV UV display will only query and not increase</span><br>  <span class="hljs-attr">leancloud:</span><br>    <span class="hljs-attr">app_id:</span><br>    <span class="hljs-attr">app_key:</span><br>    <span class="hljs-comment"># REST API 服务器地址，国际版不填</span><br>    <span class="hljs-comment"># Only the Chinese mainland users need to set</span><br>    <span class="hljs-attr">server_url:</span><br><br><span class="hljs-comment"># 对页面中的图片和评论插件进行懒加载处理，可见范围外的元素不会提前加载</span><br><span class="hljs-comment"># Lazy loading of images and comment plugin on the page</span><br><span class="hljs-attr">lazyload:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 加载时的占位图片</span><br>  <span class="hljs-comment"># The placeholder image when loading</span><br>  <span class="hljs-attr">loading_img:</span> <span class="hljs-string">/img/loading.gif</span><br><br>  <span class="hljs-comment"># 开启后懒加载仅在文章页生效，如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`</span><br>  <span class="hljs-comment"># If true, only enable lazyload on the post page. For custom pages, you can set &#x27;lazyload: true&#x27; in front-matter</span><br>  <span class="hljs-attr">onlypost:</span> <span class="hljs-literal">false</span><br><br>  <span class="hljs-comment"># 触发加载的偏移倍数，基数是视窗高度，可根据部署环境的请求速度调节</span><br>  <span class="hljs-comment"># The factor of viewport height that triggers loading</span><br>  <span class="hljs-attr">offset_factor:</span> <span class="hljs-number">2</span><br><br><span class="hljs-comment"># 图标库，包含了大量社交类图标，主题依赖的不包含在内，因此可自行修改，详见 https://hexo.fluid-dev.com/docs/icon/</span><br><span class="hljs-comment"># Icon library, which includes many social icons, does not include those theme dependent, so your can modify link by yourself. See: https://hexo.fluid-dev.com/docs/en/icon/</span><br><span class="hljs-attr">iconfont:</span> <span class="hljs-string">//at.alicdn.com/t/font_1736178_kmeydafke9r.css</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 页头</span><br><span class="hljs-comment"># Header</span><br><span class="hljs-comment">#---------------------------</span><br><br><span class="hljs-comment"># 导航栏的相关配置</span><br><span class="hljs-comment"># Navigation bar</span><br><span class="hljs-attr">navbar:</span><br>  <span class="hljs-comment"># 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示</span><br>  <span class="hljs-comment"># The title on the left side of the navigation bar. If empty, it is based on `title` in hexo config</span><br>  <span class="hljs-attr">blog_title:</span> <span class="hljs-string">&quot;这世界本就美好&quot;</span><br><br>  <span class="hljs-comment"># 导航栏毛玻璃特效，实验性功能，可能会造成页面滚动掉帧和抖动，部分浏览器不支持会自动不生效</span><br>  <span class="hljs-comment"># Navigation bar frosted glass special animation. It is an experimental feature</span><br>  <span class="hljs-attr">ground_glass:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># 模糊像素，只能为数字，数字越大模糊度越高</span><br>    <span class="hljs-comment"># Number of blurred pixel. the larger the number, the higher the blur</span><br>    <span class="hljs-attr">px:</span> <span class="hljs-number">3</span><br><br>    <span class="hljs-comment"># 不透明度，数字越大透明度越低，注意透明过度可能看不清菜单字体</span><br>    <span class="hljs-comment"># Ratio of opacity, 1.0 is completely opaque</span><br>    <span class="hljs-comment"># available: 0 - 1.0</span><br>    <span class="hljs-attr">alpha:</span> <span class="hljs-number">0.7</span><br><br>  <span class="hljs-comment"># 导航栏菜单，可自行增减，key 用来关联 languages/*.yml，如不存在关联则显示 key 本身的值；icon 是 css class，可以省略；增加 name 可以强制显示指定名称</span><br>  <span class="hljs-comment"># Navigation bar menu. `key` is used to associate languages/*.yml. If there is no association, the value of `key` itself will be displayed; if `icon` is a css class, it can be omitted; adding `name` can force the display of the specified name</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;home&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-home-fill&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;archive&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/archives/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-archive-fill&quot;</span> &#125;<br>  <span class="hljs-comment">#  - &#123; key: &quot;category&quot;, link: &quot;/categories/&quot;, icon: &quot;iconfont icon-category-fill&quot; &#125;</span><br>  <span class="hljs-comment">#  - &#123; key: &quot;tag&quot;, link: &quot;/tags/&quot;, icon: &quot;iconfont icon-tags-fill&quot; &#125;</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;about&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/about/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-user-fill&quot;</span> &#125;<br>    <span class="hljs-comment">#- &#123; key: &quot;links&quot;, link: &quot;/links/&quot;, icon: &quot;iconfont icon-link-fill&quot; &#125;</span><br><br><span class="hljs-comment"># 搜索功能，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件</span><br><span class="hljs-comment"># Search feature, based on hexo-generator-search. If you have installed other search plugins, please disable this feature to avoid generating redundant index files</span><br><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 搜索索引文件的路径，可以是相对路径或外站的绝对路径</span><br>  <span class="hljs-comment"># Path for search index file, it can be a relative path or an absolute path</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">/local-search.xml</span><br><br>  <span class="hljs-comment"># 文件生成在本地的位置，必须是相对路径</span><br>  <span class="hljs-comment"># The location where the index file is generated locally, it must be a relative location</span><br>  <span class="hljs-attr">generate_path:</span> <span class="hljs-string">/local-search.xml</span><br><br>  <span class="hljs-comment"># 搜索的范围</span><br>  <span class="hljs-comment"># Search field</span><br>  <span class="hljs-comment"># Options: post | page | all</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">post</span><br><br>  <span class="hljs-comment"># 搜索是否扫描正文</span><br>  <span class="hljs-comment"># If true, search will scan the post content</span><br>  <span class="hljs-attr">content:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 首屏图片的相关配置</span><br><span class="hljs-comment"># Config of the big image on the first screen</span><br><span class="hljs-attr">banner:</span><br>  <span class="hljs-comment"># 视差滚动，图片与板块会随着屏幕滚动产生视差效果</span><br>  <span class="hljs-comment"># Scrolling parallax</span><br>  <span class="hljs-attr">parallax:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 图片最小的宽高比，以免图片两边被过度裁剪，适用于移动端竖屏时，如需关闭设为 0</span><br>  <span class="hljs-comment"># Minimum ratio of width to height, applicable to the vertical screen of mobile device, if you need to close it, set it to 0</span><br>  <span class="hljs-attr">width_height_ratio:</span> <span class="hljs-number">1.0</span><br><br><span class="hljs-comment"># 向下滚动的箭头</span><br><span class="hljs-comment"># Scroll down arrow</span><br><span class="hljs-attr">scroll_down_arrow:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 头图高度不小于指定比例，才显示箭头</span><br>  <span class="hljs-comment"># Only the height of the banner image is greater than the ratio, the arrow is displayed</span><br>  <span class="hljs-comment"># Available: 0 - 100</span><br>  <span class="hljs-attr">banner_height_limit:</span> <span class="hljs-number">80</span><br><br>  <span class="hljs-comment"># 翻页后自动滚动</span><br>  <span class="hljs-comment"># Auto scroll after page turning</span><br>  <span class="hljs-attr">scroll_after_turning_page:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 向顶部滚动的箭头</span><br><span class="hljs-comment"># Scroll top arrow</span><br><span class="hljs-attr">scroll_top_arrow:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 页脚</span><br><span class="hljs-comment"># Footer</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">footer:</span><br>  <span class="hljs-comment"># 页脚第一行文字的 HTML，建议保留 Fluid 的链接，用于向更多人推广本主题</span><br>  <span class="hljs-comment"># HTML of the first line of the footer, it is recommended to keep the Fluid link to promote this theme to more people</span><br>  <span class="hljs-attr">content:</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">    &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Hexo&lt;/span&gt;&lt;/a&gt;</span><br><span class="hljs-string">    &lt;i class=&quot;iconfont icon-love&quot;&gt;&lt;/i&gt;</span><br><span class="hljs-string">    &lt;a href=&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Fluid&lt;/span&gt;&lt;/a&gt;</span><br><span class="hljs-string">  &#x27;</span><br><br>  <span class="hljs-comment"># 展示网站的 PV、UV 统计数</span><br>  <span class="hljs-comment"># Display website PV and UV statistics</span><br>  <span class="hljs-attr">statistics:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># 统计数据来源，如果使用 leancloud 需要设置 `web_analytics: leancloud` 中的参数；如果使用 busuanzi 可能会有请求失败的情况</span><br>    <span class="hljs-comment"># Data source. If use leancloud, you need to set the parameter in `web_analytics: leancloud`</span><br>    <span class="hljs-comment"># Options: busuanzi | leancloud</span><br>    <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;busuanzi&quot;</span><br><br>    <span class="hljs-comment"># 页面显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span><br>    <span class="hljs-comment"># Displayed text, &#123;&#125; is a placeholder for numbers (must be included), the same below</span><br>    <span class="hljs-attr">pv_format:</span> <span class="hljs-string">&quot;总访问量 &#123;&#125; 次&quot;</span><br>    <span class="hljs-attr">uv_format:</span> <span class="hljs-string">&quot;总访客数 &#123;&#125; 人&quot;</span><br><br>  <span class="hljs-comment"># 国内大陆服务器的备案信息</span><br>  <span class="hljs-comment"># For Chinese mainland website policy, other areas keep disable</span><br>  <span class="hljs-attr">beian:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># ICP证号</span><br>    <span class="hljs-attr">icp_text:</span> <span class="hljs-string">京ICP证123456号</span><br>    <span class="hljs-comment"># 公安备案号，不填则只显示ICP</span><br>    <span class="hljs-attr">police_text:</span> <span class="hljs-string">京公网安备12345678号</span><br>    <span class="hljs-comment"># 公安备案的编号，用于URL跳转查询</span><br>    <span class="hljs-attr">police_code:</span> <span class="hljs-number">12345678</span><br>    <span class="hljs-comment"># 公安备案的图片. 为空时不显示备案图片</span><br>    <span class="hljs-attr">police_icon:</span> <span class="hljs-string">/img/police_beian.png</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 首页</span><br><span class="hljs-comment"># Home Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">index:</span><br>  <span class="hljs-comment"># 首页 Banner 头图，可以是相对路径或绝对路径，以下相同</span><br>  <span class="hljs-comment"># Path of Banner image, can be a relative path or an absolute path, the same on other pages</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br><br>  <span class="hljs-comment"># 头图高度，屏幕百分比</span><br>  <span class="hljs-comment"># Height ratio of banner image</span><br>  <span class="hljs-comment"># Available: 0 - 100</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">100</span><br><br>  <span class="hljs-comment"># 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明</span><br>  <span class="hljs-comment"># Opacity of the banner mask, 1.0 is completely opaque</span><br>  <span class="hljs-comment"># Available: 0 - 1.0</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br><br>  <span class="hljs-comment"># 首页副标题的独立设置</span><br>  <span class="hljs-comment"># Independent config of home page subtitle</span><br>  <span class="hljs-attr">slogan:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br>    <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br>    <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;海内存知己，天涯若比邻&quot;</span><br><br>    <span class="hljs-comment"># 通过 API 接口作为首页副标题的内容，必须返回的是 JSON 格式，如果请求失败则按 text 字段显示，该功能必须先开启 typing 打字机功能</span><br>    <span class="hljs-comment"># Subtitle of the homepage through the API, must be returned a JSON. If the request fails, it will be displayed in `text` value. This feature must first enable the typing animation</span><br>    <span class="hljs-attr">api:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>      <span class="hljs-comment"># 请求地址</span><br>      <span class="hljs-comment"># Request url</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;&quot;</span><br><br>      <span class="hljs-comment"># 请求方法</span><br>      <span class="hljs-comment"># Request method</span><br>      <span class="hljs-comment"># Available: GET | POST | PUT</span><br>      <span class="hljs-attr">method:</span> <span class="hljs-string">&quot;GET&quot;</span><br><br>      <span class="hljs-comment"># 请求头</span><br>      <span class="hljs-comment"># Request headers</span><br>      <span class="hljs-attr">headers:</span> &#123;&#125;<br><br>      <span class="hljs-comment"># 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, 则取值字段为 [&#x27;data&#x27;, &#x27;content&#x27;]；如果返回是列表则自动选择第一项</span><br>      <span class="hljs-comment"># The value field of the string obtained from the response. For example, the response content is &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, the expected `keys: [&#x27;data&#x27;,&#x27;content&#x27;]`; if the return is a list, the first item is automatically selected</span><br>      <span class="hljs-attr">keys:</span> []<br><br>  <span class="hljs-comment"># 自动截取文章摘要</span><br>  <span class="hljs-comment"># Auto extract post</span><br>  <span class="hljs-attr">auto_excerpt:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 打开文章的标签方式</span><br>  <span class="hljs-comment"># The browser tag to open the post</span><br>  <span class="hljs-comment"># Available: _blank | _self</span><br>  <span class="hljs-attr">post_url_target:</span> <span class="hljs-string">_self</span><br><br>  <span class="hljs-comment"># 是否显示文章信息（时间、分类、标签）</span><br>  <span class="hljs-comment"># Meta information of post</span><br>  <span class="hljs-attr">post_meta:</span><br>    <span class="hljs-attr">date:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">category:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">tag:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 文章通过 sticky 排序后，在首页文章标题前显示图标</span><br>  <span class="hljs-comment"># If the posts are sorted by `sticky`, an icon is displayed in front of the post title</span><br>  <span class="hljs-attr">post_sticky:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-top&quot;</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 文章页</span><br><span class="hljs-comment"># Post Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">70</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br><br>  <span class="hljs-comment"># 文章在首页的默认封面图，当没有指定 index_img 时会使用该图片，若两者都为空则不显示任何图片</span><br>  <span class="hljs-comment"># Path of the default post cover when `index_img` is not set. If both are empty, no image will be displayed</span><br>  <span class="hljs-attr">default_index_img:</span><br><br>  <span class="hljs-comment"># 文章标题下方的元信息</span><br>  <span class="hljs-comment"># Meta information below title</span><br>  <span class="hljs-attr">meta:</span><br>    <span class="hljs-comment"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span><br>    <span class="hljs-comment"># Author, based on `author` field in front-matter, if not set, based on `author` value in hexo config</span><br>    <span class="hljs-attr">author:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span><br>    <span class="hljs-comment"># Post date, based on `date` field in front-matter, if not set, based on create date of .md file</span><br>    <span class="hljs-attr">date:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-comment"># 格式参照 ISO-8601 日期格式化</span><br>      <span class="hljs-comment"># ISO-8601 date format</span><br>      <span class="hljs-comment"># See: http://momentjs.cn/docs/#/parsing/string-format/</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;LL a&quot;</span><br><br>    <span class="hljs-comment"># 字数统计</span><br>    <span class="hljs-comment"># Word count</span><br>    <span class="hljs-attr">wordcount:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span><br>      <span class="hljs-comment"># Displayed text, &#123;&#125; is a placeholder for numbers (must be included), the same below</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 字&quot;</span><br><br>    <span class="hljs-comment"># 估计阅读全文需要的时长</span><br>    <span class="hljs-comment"># Estimate the time required to read the full text</span><br>    <span class="hljs-attr">min2read:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 分钟&quot;</span><br>      <span class="hljs-comment"># 每分钟阅读多少字，如果是技术文章，建议降低</span><br>      <span class="hljs-comment"># Words read per minute</span><br>      <span class="hljs-attr">words:</span> <span class="hljs-number">100</span><br><br>    <span class="hljs-comment"># 浏览量计数</span><br>    <span class="hljs-comment"># Number of visits</span><br>    <span class="hljs-attr">views:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-comment"># 统计数据来源</span><br>      <span class="hljs-comment"># Data Source</span><br>      <span class="hljs-comment"># Options: busuanzi | leancloud</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;busuanzi&quot;</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 次&quot;</span><br><br>  <span class="hljs-comment"># 在文章开头显示文章更新时间，该时间默认是 md 文件更新时间，可通过 front-matter 中 `updated` 手动指定（和 date 一样格式）</span><br>  <span class="hljs-comment"># Update date is displayed at the beginning of the post. The default date is the update date of the md file, which can be manually specified by `updated` in front-matter (same format as date)</span><br>  <span class="hljs-attr">updated:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># 描述文字</span><br>    <span class="hljs-comment"># Descriptive text before date</span><br>    <span class="hljs-attr">content:</span> <span class="hljs-string">本文最后更新于：</span><br><br>    <span class="hljs-comment"># 是否使用相对时间表示，比如：&quot;3 天前&quot;</span><br>    <span class="hljs-comment"># If true, it will be a relative time, such as: &quot;3 days ago&quot;</span><br>    <span class="hljs-attr">relative:</span> <span class="hljs-literal">false</span><br><br>  <span class="hljs-comment"># 文章右侧目录</span><br>  <span class="hljs-comment"># Table of contents (TOC)</span><br>  <span class="hljs-attr">toc:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 目录会选择这些节点作为标题</span><br>    <span class="hljs-comment"># TOC will select these nodes as headings</span><br>    <span class="hljs-attr">headingSelector:</span> <span class="hljs-string">&quot;h1,h2,h3,h4,h5,h6&quot;</span><br>    <span class="hljs-comment"># 层级的折叠深度，0 是全部折叠，大于 0 后如果存在下级标题则默认展开</span><br>    <span class="hljs-comment"># Collapse depth. If 0, all headings collapsed. If greater than 0, it will be expanded by default if there are sub headings</span><br>    <span class="hljs-attr">collapseDepth:</span> <span class="hljs-number">0</span><br><br>  <span class="hljs-comment"># 版权声明，会显示在每篇文章的结尾</span><br>  <span class="hljs-comment"># Copyright, will be displayed at the end of each post</span><br>  <span class="hljs-attr">copyright:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">content:</span> <span class="hljs-string">&#x27;本博客所有文章除特别声明外，均采用 &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/deed.zh&quot; rel=&quot;nofollow noopener&quot;&gt;CC BY-SA 4.0 协议&lt;/a&gt; ，转载请注明出处！&#x27;</span><br><br>  <span class="hljs-comment"># 文章底部上一篇下一篇功能</span><br>  <span class="hljs-comment"># Link to previous/next post</span><br>  <span class="hljs-attr">prev_next:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 文章底部自定义区域（位于 footer 上方），支持 HTML，可插入赞赏码、公众号这类内容内容</span><br>  <span class="hljs-comment"># Custom content at the bottom of the post page (located above the footer)</span><br>  <span class="hljs-attr">custom:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">content:</span> <span class="hljs-string">&#x27;&lt;img src=&quot;https://octodex.github.com/images/jetpacktocat.png&quot; class=&quot;rounded mx-auto d-block mt-5&quot; style=&quot;width:150px; height:150px;&quot;&gt;&#x27;</span><br><br>  <span class="hljs-comment"># 文章图片可点击放大</span><br>  <span class="hljs-comment"># Zoom feature of images</span><br>  <span class="hljs-attr">image_zoom:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 脚注语法，会在文章底部生成脚注，如果 Markdown 渲染器本身支持，则建议关闭，否则可能会冲突</span><br>  <span class="hljs-comment"># Support footnote syntax, footnotes will be generated at the bottom of the post page. If the Markdown renderer itself supports it, please disable it, otherwise it may conflict</span><br>  <span class="hljs-attr">footnote:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 脚注的节标题，也可以在 front-matter 中通过 `foot<span class="hljs-doctag">note:</span> &lt;h2&gt;Reference&lt;/h2&gt;` 这种形式修改单独页面的 header</span><br>    <span class="hljs-comment"># The section title of the footnote, you can also modify the header of a single page in the form of `foot<span class="hljs-doctag">note:</span> &lt;h2&gt;Reference&lt;/h2&gt;` in front-matter</span><br>    <span class="hljs-attr">header:</span> <span class="hljs-string">&#x27;&#x27;</span><br><br>  <span class="hljs-comment"># 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式</span><br>  <span class="hljs-comment"># Mathematical formula. If enable, you need to change the Markdown renderer, see: https://hexo.fluid-dev.com/docs/en/guide/#math</span><br>  <span class="hljs-attr">math:</span><br>    <span class="hljs-comment"># 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`</span><br>    <span class="hljs-comment"># If you want to use math on the custom page, you need to set `math: true` in Front-matter</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</span><br>    <span class="hljs-comment"># If true, only set `math: true` in Front-matter will enable math, to load faster when the page does not contain math</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># Options: mathjax | katex</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br><br>  <span class="hljs-comment"># 流程图，基于 mermaid-js，具体请见：https://hexo.fluid-dev.com/docs/guide/#mermaid-流程图</span><br>  <span class="hljs-comment"># Flow chart, based on mermaid-js, see: https://hexo.fluid-dev.com/docs/en/guide/#mermaid</span><br>  <span class="hljs-attr">mermaid:</span><br>    <span class="hljs-comment"># 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `mermaid: true`</span><br>    <span class="hljs-comment"># If you want to use mermaid on the custom page, you need to set `mermaid: true` in Front-matter</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</span><br>    <span class="hljs-comment"># If true, only set `mermaid: true` in Front-matter will enable mermaid, to load faster when the page does not contain mermaid</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment"># See: http://mermaid-js.github.io/mermaid/</span><br>    <span class="hljs-attr">options:</span> &#123; <span class="hljs-attr">theme:</span> <span class="hljs-string">&#x27;default&#x27;</span> &#125;<br><br>  <span class="hljs-comment"># 评论插件</span><br>  <span class="hljs-comment"># Comment plugin</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># 指定的插件，需要同时设置对应插件的必要参数</span><br>    <span class="hljs-comment"># The specified plugin needs to set the necessary parameters at the same time</span><br>    <span class="hljs-comment"># Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">disqus</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 评论插件</span><br><span class="hljs-comment"># Comment plugins</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 开启评论需要先设置上方 `post: comments: enable: true`，然后根据 `type` 设置下方对应的评论插件参数</span><br><span class="hljs-comment"># Enable comments need to be set `post: comments: enable: true`, then set the corresponding comment plugin parameters below according to `type`</span><br><span class="hljs-comment">#---------------------------</span><br><br><span class="hljs-comment"># Utterances</span><br><span class="hljs-comment"># 基于 GitHub Issues</span><br><span class="hljs-comment"># Based on GitHub Issues</span><br><span class="hljs-comment"># See: https://utteranc.es</span><br><span class="hljs-attr">utterances:</span><br>  <span class="hljs-attr">repo:</span><br>  <span class="hljs-attr">issue_term:</span> <span class="hljs-string">pathname</span><br>  <span class="hljs-attr">label:</span> <span class="hljs-string">utterances</span><br>  <span class="hljs-attr">theme:</span> <span class="hljs-string">github-light</span><br>  <span class="hljs-attr">theme_dark:</span> <span class="hljs-string">github-dark</span><br>  <span class="hljs-attr">crossorigin:</span> <span class="hljs-string">anonymous</span><br><br><span class="hljs-comment"># Disqus</span><br><span class="hljs-comment"># 基于第三方的服务，国内用户直接使用容易被墙，建议配合 Disqusjs</span><br><span class="hljs-comment"># Based on third-party service</span><br><span class="hljs-comment"># See: https://disqus.com</span><br><span class="hljs-attr">disqus:</span><br>  <span class="hljs-attr">shortname:</span><br>  <span class="hljs-comment"># 以下为 Disqusjs 支持, 国内用户如果想使用 Disqus 建议配合使用</span><br>  <span class="hljs-comment"># The following are Disqusjs configurations, please ignore if DisqusJS is not required</span><br>  <span class="hljs-comment"># See: https://github.com/SukkaW/DisqusJS</span><br>  <span class="hljs-attr">disqusjs:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">apikey:</span><br><br><span class="hljs-comment"># Gitalk</span><br><span class="hljs-comment"># 基于 GitHub Issues</span><br><span class="hljs-comment"># Based on GitHub Issues</span><br><span class="hljs-comment"># See: https://github.com/gitalk/gitalk#options</span><br><span class="hljs-attr">gitalk:</span><br>  <span class="hljs-attr">clientID:</span><br>  <span class="hljs-attr">clientSecret:</span><br>  <span class="hljs-attr">repo:</span><br>  <span class="hljs-attr">owner:</span><br>  <span class="hljs-attr">admin:</span> [<span class="hljs-string">&#x27;name&#x27;</span>]<br>  <span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br>  <span class="hljs-attr">labels:</span> [<span class="hljs-string">&#x27;Gitalk&#x27;</span>]<br>  <span class="hljs-attr">perPage:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">pagerDirection:</span> <span class="hljs-string">last</span><br>  <span class="hljs-attr">distractionFreeMode:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">createIssueManually:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># 默认 proxy 已失效，解决方法请见下方链接</span><br>  <span class="hljs-comment"># The default proxy is invalid, please see the links for the solution</span><br>  <span class="hljs-comment"># https://github.com/gitalk/gitalk/issues/429</span><br>  <span class="hljs-comment"># https://github.com/Zibri/cloudflare-cors-anywhere</span><br>  <span class="hljs-attr">proxy:</span> <span class="hljs-string">&lt;your</span> <span class="hljs-string">own</span> <span class="hljs-string">proxy&gt;/https://github.com/login/oauth/access_token</span><br><br><span class="hljs-comment"># Valine</span><br><span class="hljs-comment"># 基于 LeanCloud</span><br><span class="hljs-comment"># Based on LeanCloud</span><br><span class="hljs-comment"># See: https://valine.js.org/configuration.html</span><br><span class="hljs-attr">valine:</span><br>  <span class="hljs-attr">appid:</span><br>  <span class="hljs-attr">appkey:</span><br>  <span class="hljs-attr">placeholder:</span> <span class="hljs-string">说点什么</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">retro</span><br>  <span class="hljs-attr">meta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>, <span class="hljs-string">&#x27;mail&#x27;</span>, <span class="hljs-string">&#x27;link&#x27;</span>]<br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">lang:</span> <span class="hljs-string">zh-CN</span><br>  <span class="hljs-attr">highlight:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">recordIP:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">serverURLs:</span><br><br><span class="hljs-comment"># Waline</span><br><span class="hljs-comment"># 从 Valine 衍生而来，额外增加了服务端和多种功能</span><br><span class="hljs-comment"># Derived from Valine, with self-hosted service and new features</span><br><span class="hljs-comment"># See: https://waline.js.org/</span><br><span class="hljs-attr">waline:</span><br>  <span class="hljs-attr">serverURL:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">placeholder:</span> <span class="hljs-string">说点什么</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">retro</span><br>  <span class="hljs-attr">meta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>, <span class="hljs-string">&#x27;mail&#x27;</span>, <span class="hljs-string">&#x27;link&#x27;</span>]<br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">lang:</span> <span class="hljs-string">zh-CN</span><br>  <span class="hljs-attr">highlight:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">avatarCDN:</span><br>  <span class="hljs-attr">avatarForce:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">requiredFields:</span> []<br>  <span class="hljs-attr">emojiCDN:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">emojiMaps:</span> &#123;&#125;<br>  <span class="hljs-attr">anonymous:</span><br><br><span class="hljs-comment"># 畅言 Changyan</span><br><span class="hljs-comment"># 基于第三方的服务</span><br><span class="hljs-comment"># Based on third-party service, insufficient support for regions outside China</span><br><span class="hljs-comment"># http://changyan.kuaizhan.com</span><br><span class="hljs-attr">changyan:</span><br>  <span class="hljs-attr">appid:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">appkey:</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment"># 来必力 Livere</span><br><span class="hljs-comment"># 基于第三方的服务</span><br><span class="hljs-comment"># Based on third-party service</span><br><span class="hljs-comment"># See: https://www.livere.com</span><br><span class="hljs-attr">livere:</span><br>  <span class="hljs-attr">uid:</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment"># Remark42</span><br><span class="hljs-comment"># 需要自托管服务端</span><br><span class="hljs-comment"># Based on self-hosted service</span><br><span class="hljs-comment"># See: https://remark42.com</span><br><span class="hljs-attr">remark42:</span><br>  <span class="hljs-attr">host:</span><br>  <span class="hljs-attr">site_id:</span><br>  <span class="hljs-attr">max_shown_comments:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">locale:</span> <span class="hljs-string">zh</span><br><br><span class="hljs-comment"># Twikoo</span><br><span class="hljs-comment"># 基于腾讯云开发</span><br><span class="hljs-comment"># Based on Tencent CloudBase</span><br><span class="hljs-comment"># See: https://twikoo.js.org</span><br><span class="hljs-attr">twikoo:</span><br>  <span class="hljs-attr">envId:</span><br>  <span class="hljs-attr">region:</span> <span class="hljs-string">ap-shanghai</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 归档页</span><br><span class="hljs-comment"># Archive Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">archive:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 分类页</span><br><span class="hljs-comment"># Category Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">category:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span><br><br>  <span class="hljs-comment"># 分类的排序字段，前面带减号是倒序，不带减号是正序</span><br>  <span class="hljs-comment"># Sort field for categories, with a minus sign is reverse order</span><br>  <span class="hljs-comment"># Options: length | name</span><br>  <span class="hljs-attr">order_by:</span> <span class="hljs-string">&quot;-length&quot;</span><br><br>  <span class="hljs-comment"># 层级的折叠深度，0 是全部折叠，大于 0 后如果存在子分类则默认展开</span><br>  <span class="hljs-comment"># Collapse depth. If 0, all posts collapsed. If greater than 0, it will be expanded by default if there are subcategories</span><br>  <span class="hljs-attr">collapse_depth:</span> <span class="hljs-number">0</span><br><br>  <span class="hljs-comment"># 文章的排序字段，前面带减号是倒序，不带减号是正序</span><br>  <span class="hljs-comment"># Sort field for posts, with a minus sign is reverse order</span><br>  <span class="hljs-comment"># Options: date | title | or other field of front-matter</span><br>  <span class="hljs-attr">post_order_by:</span> <span class="hljs-string">&quot;-date&quot;</span><br><br>  <span class="hljs-comment"># 单个分类中折叠展示文章数的最大值，超过限制会显示 More，0 则不限制</span><br>  <span class="hljs-comment"># The maximum number of posts in a single category. If the limit is exceeded, it will be displayed More. If 0 no limit</span><br>  <span class="hljs-attr">post_limit:</span> <span class="hljs-number">10</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 标签页</span><br><span class="hljs-comment"># Tag Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">tag:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">80</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span><br>  <span class="hljs-attr">tagcloud:</span><br>    <span class="hljs-attr">min_font:</span> <span class="hljs-number">15</span><br>    <span class="hljs-attr">max_font:</span> <span class="hljs-number">30</span><br>    <span class="hljs-attr">unit:</span> <span class="hljs-string">px</span><br>    <span class="hljs-attr">start_color:</span> <span class="hljs-string">&quot;#BBBBEE&quot;</span><br>    <span class="hljs-attr">end_color:</span> <span class="hljs-string">&quot;#337ab7&quot;</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 关于页</span><br><span class="hljs-comment"># About Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">/img/avatar.png</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;王瀚弘&quot;</span><br>  <span class="hljs-attr">intro:</span> <span class="hljs-string">&quot;真正优秀的人，灵魂越是高贵，行为越是谦卑&quot;</span><br>  <span class="hljs-comment"># 更多图标可从 https://hexo.fluid-dev.com/docs/icon/ 查找，`class` 代表图标的 css class，添加 `qrcode` 后，图标不再是链接而是悬浮二维码</span><br>  <span class="hljs-comment"># More icons can be found from https://hexo.fluid-dev.com/docs/en/icon/  `class` is the css class of the icon. If adding `qrcode`, The icon is no longer a link, but a hovering QR code</span><br>  <span class="hljs-attr">icons:</span><br>  <span class="hljs-comment">#  - &#123; class: &quot;iconfont icon-github-fill&quot;, link: &quot;https://github.com&quot;, tip: &quot;GitHub&quot; &#125;</span><br>  <span class="hljs-comment">#  - &#123; class: &quot;iconfont icon-douban-fill&quot;, link: &quot;https://douban.com&quot;, tip: &quot;豆瓣&quot; &#125;</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&quot;iconfont icon-wechat-fill&quot;</span>, <span class="hljs-attr">qrcode:</span> <span class="hljs-string">&quot;/img/favicon.png&quot;</span> &#125;<br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 自定义页</span><br><span class="hljs-comment"># Custom Page</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 通过 hexo new page 命令创建的页面</span><br><span class="hljs-comment"># Custom Page through `hexo new page`</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">page:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 404页</span><br><span class="hljs-comment"># 404 Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">page404:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">85</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span> <span class="hljs-string">&quot;Page not found这注定发生，你我都无法改变&quot;</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 友链页</span><br><span class="hljs-comment"># Links Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">links:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span><br>  <span class="hljs-comment"># 友链的成员项</span><br>  <span class="hljs-comment"># Member item of page</span><br>  <span class="hljs-attr">items:</span><br>    <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">title:</span> <span class="hljs-string">&quot;Fluid Blog&quot;</span>,<br>      <span class="hljs-attr">intro:</span> <span class="hljs-string">&quot;主题博客&quot;</span>,<br>      <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;https://hexo.fluid-dev.com/&quot;</span>,<br>      <span class="hljs-attr">avatar:</span> <span class="hljs-string">&quot;/img/favicon.png&quot;</span><br>    &#125;<br>    <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">title:</span> <span class="hljs-string">&quot;Fluid Docs&quot;</span>,<br>      <span class="hljs-attr">intro:</span> <span class="hljs-string">&quot;主题使用指南&quot;</span>,<br>      <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;https://hexo.fluid-dev.com/docs/&quot;</span>,<br>      <span class="hljs-attr">avatar:</span> <span class="hljs-string">&quot;/img/favicon.png&quot;</span><br>    &#125;<br>    <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">title:</span> <span class="hljs-string">&quot;Fluid Repo&quot;</span>,<br>      <span class="hljs-attr">intro:</span> <span class="hljs-string">&quot;主题 GitHub 仓库&quot;</span>,<br>      <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot;</span>,<br>      <span class="hljs-attr">avatar:</span> <span class="hljs-string">&quot;/img/favicon.png&quot;</span><br>    &#125;<br><br>  <span class="hljs-comment"># 当成员头像加载失败时，替换为指定图片</span><br>  <span class="hljs-comment"># When the member avatar fails to load, replace the specified image</span><br>  <span class="hljs-attr">onerror_avatar:</span> <span class="hljs-string">/img/avatar.png</span><br><br>  <span class="hljs-comment"># 友链下方自定义区域，支持 HTML，可插入例如申请友链的文字</span><br>  <span class="hljs-comment"># Custom content at the bottom of the links</span><br>  <span class="hljs-attr">custom:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">content:</span> <span class="hljs-string">&#x27;&lt;hr&gt;&lt;p&gt;在下方留言申请加入我的友链，按如下格式提供信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;博客名：Fluid&lt;/li&gt;&lt;li&gt;简介：Fluid 主题官方博客&lt;/li&gt;&lt;li&gt;链接：https://hexo.fluid-dev.com&lt;/li&gt;&lt;li&gt;图片：https://hexo.fluid-dev.com/img/favicon.png&lt;/li&gt;&lt;/ul&gt;&#x27;</span><br><br>  <span class="hljs-comment"># 评论插件</span><br>  <span class="hljs-comment"># Comment plugin</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># 指定的插件，需要同时设置对应插件的必要参数</span><br>    <span class="hljs-comment"># The specified plugin needs to set the necessary parameters at the same time</span><br>    <span class="hljs-comment"># Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">disqus</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 以下是配置 JS CSS 等静态资源的 URL 前缀，可以自定义成 CDN 地址，</span><br><span class="hljs-comment"># 默认的 jsDelivr CDN 可能在部分地区无法访问，如果需要修改，最好使用与默认配置相同的版本，以避免潜在的问题，</span><br><span class="hljs-comment"># ** 如果你不知道如何设置，请不要做任何改动 **</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Here is the url prefix to configure the static assets. Set CDN addresses you want to customize.</span><br><span class="hljs-comment"># Be aware that you would better use the same version as default ones to avoid potential problems.</span><br><span class="hljs-comment"># DO NOT EDIT THE FOLLOWING SETTINGS UNLESS YOU KNOW WHAT YOU ARE DOING</span><br><span class="hljs-comment">#---------------------------</span><br><br><span class="hljs-attr">static_prefix:</span><br>  <span class="hljs-comment"># 内部静态</span><br>  <span class="hljs-comment"># Internal static</span><br>  <span class="hljs-attr">internal_js:</span> <span class="hljs-string">/js</span><br>  <span class="hljs-attr">internal_css:</span> <span class="hljs-string">/css</span><br>  <span class="hljs-attr">internal_img:</span> <span class="hljs-string">/img</span><br><br>  <span class="hljs-attr">anchor:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/anchor-js@4.3.0/</span><br><br>  <span class="hljs-attr">github_markdown:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/github-markdown-css@4.0.0/</span><br><br>  <span class="hljs-attr">jquery:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/</span><br><br>  <span class="hljs-attr">bootstrap:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/</span><br><br>  <span class="hljs-attr">highlightjs:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/highlight.js@10.6.0/</span><br><br>  <span class="hljs-attr">prismjs:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/prismjs@1.23.0/</span><br><br>  <span class="hljs-attr">tocbot:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/tocbot@4.12.2/dist/</span><br><br>  <span class="hljs-attr">typed:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/typed.js@2.0.11/lib/</span><br><br>  <span class="hljs-attr">fancybox:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.7/dist/</span><br><br>  <span class="hljs-attr">nprogress:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/nprogress@0.2.0/</span><br><br>  <span class="hljs-attr">mathjax:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/mathjax@3.1.2/es5/</span><br><br>  <span class="hljs-attr">katex:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/katex@0.13.0/dist/</span><br><br>  <span class="hljs-attr">busuanzi:</span> <span class="hljs-string">https://busuanzi.ibruce.info/busuanzi/2.3/</span><br><br>  <span class="hljs-attr">clipboard:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/clipboard@2.0.8/dist/</span><br><br>  <span class="hljs-attr">mermaid:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/mermaid@8.9.2/dist/</span><br><br>  <span class="hljs-attr">valine:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/</span><br><br>  <span class="hljs-attr">waline:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/@waline/client@0.14.8/dist/</span><br><br>  <span class="hljs-attr">gitalk:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/gitalk@1.7.2/dist/</span><br><br>  <span class="hljs-attr">disqusjs:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/disqusjs@1.3.0/dist/</span><br><br>  <span class="hljs-attr">twikoo:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/twikoo@1.3.0/dist/</span><br><br>  <span class="hljs-attr">hint:</span> <span class="hljs-string">/lib/hint/</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>汇编语言</title>
    <link href="/2021/04/10/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    <url>/2021/04/10/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h2 id="计算机的基本结构"><a href="#计算机的基本结构" class="headerlink" title="计算机的基本结构"></a>计算机的基本结构</h2><p>5种功能部件：中央处理器、内部存储器、系统总线、设备接口、外部设备</p><h3 id="中央处理器"><a href="#中央处理器" class="headerlink" title="中央处理器"></a>中央处理器</h3><p>英文全称Center Process Unit，简称CPU。</p><p>功能如下：</p><ol><li><strong>读取、解释、执行机器指令</strong>。</li><li><strong>与内部存储器、设备接口交换信息</strong>。</li><li><strong>执行除指令外的其他时序过程</strong>。</li><li><strong>完成算数逻辑运算</strong>。</li><li><strong>提供少量存储单元</strong>。</li></ol><h3 id="内部存储器"><a href="#内部存储器" class="headerlink" title="内部存储器"></a>内部存储器</h3><p>内存中存放<strong>指令序列</strong>和<strong>用于运算的各种数据</strong></p><p>内部存储器对应主板上的<strong>内存条</strong></p><p>外部存储器属于<strong>外部设备</strong></p><p>内部存储器中存放的信息可以让CPU立即使用</p><p>可执行程序存放在硬盘上CPU是不会执行的，必须先将其载入到内存，再由CPU执行</p><p>简称<strong>内存</strong></p><h3 id="总线系统"><a href="#总线系统" class="headerlink" title="总线系统"></a>总线系统</h3><p>系统总线是计算机系统的<strong>信息交换枢纽</strong>，供中央处理器、内存和设备接口进行信息交换</p><p>总线分为三组：</p><ol><li>地址总线</li><li>数据总线</li><li>控制总线</li></ol><p>两个部件要想完成信息交换，三者缺一不可</p><p>例如CPU读取内存的过程：</p><ol><li>CPU在<strong>地址总线</strong>上提供内存单元的地址</li><li>CPU在<strong>控制总线</strong>上提供“读”信号</li><li>内存单元执行”读“操作，将指定内存单元的数据取出到<strong>数据总线</strong>上传给CPU</li></ol><h3 id="设备接口"><a href="#设备接口" class="headerlink" title="设备接口"></a>设备接口</h3><p>接口的作用：</p><ol><li>信号转换</li><li>数据缓冲</li><li>与CPU交换信息，使CPU控制外接设备</li><li>可编程</li></ol><h3 id="外部设备"><a href="#外部设备" class="headerlink" title="外部设备"></a>外部设备</h3><p>略</p><h3 id="计算机系统的储存单元"><a href="#计算机系统的储存单元" class="headerlink" title="计算机系统的储存单元"></a>计算机系统的储存单元</h3><p>分为三类</p><ol><li>寄存器，位于CPU内部</li><li>内存单元</li><li>端口</li></ol><h2 id="8088-amp-8086CPU"><a href="#8088-amp-8086CPU" class="headerlink" title="8088&amp;8086CPU"></a>8088&amp;8086CPU</h2><h3 id="基本结构和工作原理"><a href="#基本结构和工作原理" class="headerlink" title="基本结构和工作原理"></a>基本结构和工作原理</h3><p>8086有16位数据总线，可以一次读取一个字（两个字节）</p><p>8088有8位数据总线，可以一次读取一个字节</p><p>但两者内部能够并行处理的最大二进制数都是十六位</p><h4 id="基本的流水线结构"><a href="#基本的流水线结构" class="headerlink" title="基本的流水线结构"></a>基本的流水线结构</h4><p>CPU内部分为BUI和EU两个组成部分</p><p>BUI，即Bus Interface Unit ，是总线接口单元。主要功能是实现CPU与<strong>系统总线</strong>的信息交换。</p><p>EU，即Execute Unit，是执行单元。主要功能是<strong>解释</strong>并<strong>执行</strong>指令。</p><p>BUI和EU可以同时工作，提高效率。</p><h4 id="指令列队"><a href="#指令列队" class="headerlink" title="指令列队"></a>指令列队</h4><p>位于BUI，是具有多个字节的存储单元</p><p>只要<strong>总线出现空闲</strong>，BUI便开始启动读取指令的时序操作，<strong>直到填满指令列队</strong>为止。</p><p>BUI读取到的指令都存在指令列队中，等待被EU读取，读取顺序为<strong>先入先出</strong></p><p><strong>读取指令</strong>这一时序过程与<strong>执行指令</strong>的时序过程<strong>无关</strong>,其中BUI负责<strong>读取指令</strong>，EU负责<strong>从指令列队中取出指令译码后执行</strong></p><p>指令列队与寄存器不同，不能被机器指令访问，只能由CPU自动管理</p><h4 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h4><p>控制器位于EU，是CPU的<strong>控制中心</strong></p><p>产生<strong>控制信号</strong>，包括<strong>作用于CPU内部的控制信号</strong>和<strong>CPU发送到系统总线的控制信号</strong></p><h4 id="地址加法器"><a href="#地址加法器" class="headerlink" title="地址加法器"></a>地址加法器</h4><p>位于BUI模块</p><p>功能是由<strong>逻辑地址</strong>计算<strong>物理地址</strong></p><blockquote><p>物理地址：</p><p>是一个固定长度的二进制无符号数编码。8088/8086通过读/写信号来区分“寄存器”、“内存”和”设备接口“，通过地址来确定在上述三者的具体位置。</p><p>物理地址包括高位地址和地位地址，相当于”栋“和”单元“的关系</p></blockquote><blockquote><p>逻辑地址：</p><p>8088/8086的地址总线宽度为20位，没有寄存器可以存下。所以CPU采用 分段管理方式 ，并使用逻辑地址作为CPU内部的物理地址的表达方式。</p><p>段是指内存中一段连续的存储空间，包含多个连续的字节单元。</p><p>逻辑地址由两个16位的编码组成：段基值 和 偏移量（均为无符号数编码）</p><p>转换关系：</p><p>段基址=段基值*16（左移4位，后补4个0）</p><p>物理地址=段基址+偏移量</p></blockquote><h4 id="运算器"><a href="#运算器" class="headerlink" title="运算器"></a>运算器</h4><p>位于EU模块</p><p>完成算术运算、逻辑运算</p><p>支持双操作数运算</p><h4 id="总线控制逻辑"><a href="#总线控制逻辑" class="headerlink" title="总线控制逻辑"></a>总线控制逻辑</h4><p>位于BIU模块</p><p>用于控制在适当的时候向总线传递相应信号，或从总线接收相应信号</p><h3 id="8088-8086CPU的寄存器组"><a href="#8088-8086CPU的寄存器组" class="headerlink" title="8088/8086CPU的寄存器组"></a>8088/8086CPU的寄存器组</h3><h4 id="数据寄存器组"><a href="#数据寄存器组" class="headerlink" title="数据寄存器组"></a>数据寄存器组</h4><p>数据寄存器是指用于实现指令功能的寄存器。</p><p>数据寄存器都与CPU内部的局部总线相连，使得他们可以为运算器或其他寄存器提供原始数据，即提供<strong>源操作数</strong></p><table><thead><tr><th>寄存器简写</th><th>寄存器名</th></tr></thead><tbody><tr><td>AX（AL、AH）</td><td>累加器</td></tr><tr><td>BX（BL、BH）</td><td>基址寄存器</td></tr><tr><td>CX（CL、CH）</td><td>计数寄存器</td></tr><tr><td>DX（DL、DH）</td><td>数据寄存器</td></tr></tbody></table><h4 id="段寄存器组"><a href="#段寄存器组" class="headerlink" title="段寄存器组"></a>段寄存器组</h4><p>8088/8086CPU共有4个段寄存器，分别用于保存4个段基值，为生成内存单元的物理地址提供必要条件</p><table><thead><tr><th>寄存器简写</th><th>寄存器名</th><th>功能</th></tr></thead><tbody><tr><td>CS(Code Segment)</td><td>代码段段寄存器</td><td>存放由机器指令组成的程序</td></tr><tr><td>DS(Data Segment)</td><td>数据段段寄存器</td><td>保存变量数据</td></tr><tr><td>SS(Stack Segment)</td><td>堆栈段段寄存器</td><td>保存中断断点、子程序返回点、用户使用堆栈临时保存的数据</td></tr><tr><td>ES(Extra Segment)</td><td>附加段段寄存器</td><td>用于串操作等</td></tr></tbody></table><h4 id="地址指针寄存器组"><a href="#地址指针寄存器组" class="headerlink" title="地址指针寄存器组"></a>地址指针寄存器组</h4><p>用于提供内存单元逻辑地址中的<strong>偏移量</strong>或<strong>构成偏移量的分量</strong>。</p><table><thead><tr><th>寄存器简写</th><th>寄存器名</th><th>与段寄存器的搭配关系</th></tr></thead><tbody><tr><td>BX</td><td>基址寄存器</td><td>默认与DS搭配，可更改</td></tr><tr><td>SP</td><td>堆栈指针寄存器</td><td><em><strong>只能与SS搭配</strong></em></td></tr><tr><td>BP</td><td>基址指针寄存器</td><td>默认与SS搭配，可更改</td></tr><tr><td>SI</td><td>源变址寄存器</td><td>默认与DS搭配，可更改</td></tr><tr><td>DI</td><td>目的变址寄存器</td><td>默认与DS搭配，可更改；在串操作指令中只能与ES搭配</td></tr></tbody></table><p><em><strong>数据寄存器和地址指针寄存器一并称为通用寄存器</strong></em></p><h4 id="控制寄存器"><a href="#控制寄存器" class="headerlink" title="控制寄存器"></a>控制寄存器</h4><p>包括<strong>指令指针寄存器IP</strong>和<strong>标志寄存器FR</strong></p><h5 id="指令指针寄存器IP"><a href="#指令指针寄存器IP" class="headerlink" title="指令指针寄存器IP"></a>指令指针寄存器IP</h5><p>指令指针寄存器IP(Instruction Pointer)，该寄存器中保存的是CPU下一条要从<strong>内存</strong>中读取的指令在当前代码段（CS指向的段）中首字节的偏移量。</p><p><strong>IP固定与CS搭配使用</strong>，形成下一条即将被读取指令的逻辑地址</p><p>CPU中的BIU每从内存中读取一条指令后，IP指向的对象都会发生改变，指向下一条将被读取的指令 </p><h5 id="标志寄存器FR"><a href="#标志寄存器FR" class="headerlink" title="标志寄存器FR"></a>标志寄存器FR</h5><p>标志寄存器FR(Flag Register)，用于反映最近一次影响标志位的算术或逻辑运算中，运算过程、运算结果的一些性质</p><p>为16位寄存器，其中有效标志位有9位，分别为</p><table><thead><tr><th>状态标志简写</th><th>状态标志名</th><th>功能</th></tr></thead><tbody><tr><td>CF</td><td>进位寄存器</td><td>执行加、减运算时如果最高位发生进位或借位，则置一</td></tr><tr><td>PF</td><td>奇偶标志位</td><td>执行算数逻辑运算后，如运算结果后8位包含偶个1，则置一</td></tr><tr><td>AF</td><td>辅助进位标志位</td><td>执行加、减运算时如果第三位产生进位或借位，则置一</td></tr><tr><td>ZF</td><td>零值标志位</td><td>运算结果为0，则置一</td></tr><tr><td>SF</td><td>符号标志位</td><td>执行算术逻辑运算指令后，SF标志和运算结果的最高位保持一致</td></tr><tr><td>OF</td><td>溢出标志位</td><td>执行算术指令后，如出现溢出，则置一</td></tr><tr><td>TF</td><td>单步跟踪标志位</td><td>为0时，CPU处于连续执行指令工作模式；为1时，CPU处于单步模式</td></tr><tr><td>IF</td><td>中断使能标志位</td><td>为0时，不会响应任何可屏蔽中断</td></tr><tr><td>DF</td><td>方向标志位</td><td>为0时，串操作指令按照地址递增的方向经行操作；为1时···递减···</td></tr></tbody></table><p>前六个为<strong>状态标志</strong>，后三个为<strong>控制标志</strong></p><p>CF:最高位出现进位，此时将数据解读为<strong>无符号数</strong></p><p>AF:第三位出现进位，此时将数据解读为<strong>无符号数</strong></p><p>SF:将操作数解释为<strong>补码</strong>，与运算结果最高位保持一致，但补码运算溢出时SF无意义</p><p>OF:将操作数解释为<strong>补码</strong>，如溢出，则变为“1”</p><p>ZF:看运算结果，如全为“0”，则变为”1”</p><p>PF:偶数个1，则变为“1”</p><h1 id="8086-8088基本指令系统"><a href="#8086-8088基本指令系统" class="headerlink" title="8086/8088基本指令系统"></a>8086/8088基本指令系统</h1><h2 id="汇编指令基本格式"><a href="#汇编指令基本格式" class="headerlink" title="汇编指令基本格式"></a>汇编指令基本格式</h2><p>构成汇编指令的基本元素包括<strong>操作助记符</strong>和<strong>操作数</strong></p><p>前者指明指令的功能，后者指明指令操作的数据</p><h3 id="基本格式——双操作数指令"><a href="#基本格式——双操作数指令" class="headerlink" title="基本格式——双操作数指令"></a>基本格式——双操作数指令</h3><p>MOV    AX，    BX</p><p>MOV是操作助记符；</p><p>AX是目的操作数，代表操作完成的结果数据；</p><p>BX是源操作数，为指令提供原始数据。</p><h3 id="基本格式——单操作数指令"><a href="#基本格式——单操作数指令" class="headerlink" title="基本格式——单操作数指令"></a>基本格式——单操作数指令</h3><p>NOT    AX</p><p>NOT是操作助记符；</p><p>AX既提供原始数据，又可以保存操作结果。</p><h3 id="基本格式——无操作数指令"><a href="#基本格式——无操作数指令" class="headerlink" title="基本格式——无操作数指令"></a>基本格式——无操作数指令</h3><p>NOP</p><p>NOP是操作助记符</p><h2 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h2><p><em><strong>寻址方式是指指令获得操作数的方式</strong></em></p><h3 id="寄存器寻址"><a href="#寄存器寻址" class="headerlink" title="寄存器寻址"></a>寄存器寻址</h3><p>操作数储存在寄存器中，无需访问内存，执行很快</p><p>例：</p><p>MOV    AX，    BX    ;（BX）保存到AX</p><p>ADD    AL,    DL    ;(AL)与(DL)相加后保存在AL</p><h3 id="立即数寻址"><a href="#立即数寻址" class="headerlink" title="立即数寻址"></a>立即数寻址</h3><p>操作数包含在机器指令内，无需访问内存，执行很快</p><p>例：</p><p>MOV    AL,    25    将25保存到AL</p><h3 id="存储器寻址方式"><a href="#存储器寻址方式" class="headerlink" title="存储器寻址方式"></a>存储器寻址方式</h3><p>操作数在内存单元内，执行较慢</p><p>在内存单元中寻址需要知道物理地址，物理地址由<strong>逻辑地址</strong>转换而来，逻辑地址由<strong>段基值</strong>和<strong>偏移量</strong>构成。</p><p>偏移量有多种获取方式，不同的获取方式形成不同的储存器寻址方式。</p><p>内存单元的偏移量由三种不同的偏移分量构成，它们分别是：</p><ol><li>机器指令位移量字段提供的位移量</li><li>基址寄存器提供的基址分量</li><li>变址寄存器提供的变址分量</li></ol><p>偏移量又称<strong>有效地址(effective address)</strong>,简称<strong>EA</strong>。</p><h5 id="直接寻址方式"><a href="#直接寻址方式" class="headerlink" title="直接寻址方式"></a>直接寻址方式</h5><p>直接使用<strong>机器指令中位移量字段中的位移量</strong>作为内存操作数的偏移量</p><p><em><strong>EA=DISP</strong></em></p><p>DISP是指disparity，即<strong>位移量</strong></p><p>例：</p><p>MOV    AL,    [1000H]</p><p>这条指令忽略了段基值，默认使用<strong>DS提供段基值</strong></p><p>MOV    ES:[0100H],    BX</p><p>这条指令<strong>指明使用ES提供段基值</strong></p><p>MOV    VAR1,    BL</p><p>这条指令中的VAR1是一个<strong>变量名</strong>，实质为<strong>符号位移量</strong>，在会汇编后将被替换成数值位移量，二者在实质上是相同的。同样的这条指令忽略的段基值，由DS提供</p><p>MOV    VAR1+2,    AL</p><p>这条指令的目标操作数的VAR1后面有一个“+2”，表示<strong>偏移量为VAR1+2</strong>.</p><h5 id="寄存器间接寻址方式"><a href="#寄存器间接寻址方式" class="headerlink" title="寄存器间接寻址方式"></a>寄存器间接寻址方式</h5><p>内存操作数的偏移量由地址指针寄存器BX、<strong>BP</strong>、SI、DI<strong>其中之一</strong>提供，则称该操作数为<strong>寄存器间接寻址方式</strong></p><p>其中    BX、<em><strong>BP</strong></em>提供的是<strong>基址分量</strong></p><p>​            SI、DI提供的是<strong>变址分量</strong></p><p><em><strong>EA=(BX\BP\SI\DI)</strong></em></p><table><thead><tr><th align="center">寄存器简写</th><th align="center">寄存器名</th><th align="center">与段寄存器的搭配关系</th></tr></thead><tbody><tr><td align="center">BX</td><td align="center">基址寄存器</td><td align="center">默认与DS搭配，可更改</td></tr><tr><td align="center">SP</td><td align="center">堆栈指针寄存器</td><td align="center"><em><strong>只能与SS搭配</strong></em></td></tr><tr><td align="center">BP</td><td align="center">基址指针寄存器</td><td align="center"><strong>默认与SS搭配</strong>，可更改</td></tr><tr><td align="center">SI</td><td align="center">源变址寄存器(Source Index)</td><td align="center">默认与DS搭配，可更改</td></tr><tr><td align="center">DI</td><td align="center">目的变址寄存器(Destination Index)</td><td align="center">默认与DS搭配，可更改；在串操作指令中只能与ES搭配</td></tr></tbody></table><p>例：</p><p>ADD    CL,    [BX]</p><p>SUB    ES:[SI],    AX</p><h5 id="基址寻址与变址寻址"><a href="#基址寻址与变址寻址" class="headerlink" title="基址寻址与变址寻址"></a>基址寻址与变址寻址</h5><p>如果内存操作数的偏移量由<strong>基址分量</strong>与<strong>位移分量</strong>相加得到，那么称这种寻址方式为<strong>基址寻址方式</strong></p><p>如果内存操作数的偏移量由<strong>变址分量</strong>与<strong>位移分量</strong>相加得到，那么称这种寻址方式为<strong>变址寻址方式</strong></p><p>例：</p><p>MOV    AL,    [BP]100H</p><p>源操作数为基址寻址方式，基址分量由BP提供，段基值默认为SS提供，位移分量为100H；目的操作数为寄存器寻址方式</p><p>MOV    BYTE PTR[SI]220H,    30H</p><p>源操作数为立即数寻址方式；目的操作数为变址寻址方式，变址分量由SI提供，段基值默认由 DS提供，位移分量为220H。其中BYTE PTR代表内存单元的字节类型。</p><p><em><strong>EA=(BX\BP\SI\DI)+DISP</strong></em></p><p><em><strong>注意：BX、SI、DI默认与DS搭配，BP默认与SS搭配</strong></em></p><h5 id="基址变址寻址"><a href="#基址变址寻址" class="headerlink" title="基址变址寻址"></a>基址变址寻址</h5><p>如果偏移量由<strong>基址分量、变址分量和偏移量</strong>组成，那么该操作数为基址变址寻址。（齐全了）</p><p>例：</p><p>AND    AL,    [BX] [SI] 0020H</p><p>源操作数为基址变址寻址，基址分量由BX提供，变址分量由SI提供，位移量为0020H，段基值由DS提供。</p><h4 id="其他寻址方式"><a href="#其他寻址方式" class="headerlink" title="其他寻址方式"></a>其他寻址方式</h4><h5 id="串操作寻址"><a href="#串操作寻址" class="headerlink" title="串操作寻址"></a>串操作寻址</h5><p>若指令为串操作指令，则<strong>内存操作数</strong>的寻址方式为串操作数寻址方式</p><h5 id="端口寻址方式"><a href="#端口寻址方式" class="headerlink" title="端口寻址方式"></a>端口寻址方式</h5><p>在读写端口的指令中，与端口有关的操作数均为<strong>端口寻址方式</strong></p><h5 id="隐含寻址方式"><a href="#隐含寻址方式" class="headerlink" title="隐含寻址方式"></a>隐含寻址方式</h5><p>有一些指令存在对内存单元的隐含使用，这种方式称为<strong>隐含寻址方式</strong></p><h2 id="基本指令系统"><a href="#基本指令系统" class="headerlink" title="基本指令系统"></a>基本指令系统</h2><h3 id="传送类指令"><a href="#传送类指令" class="headerlink" title="传送类指令"></a>传送类指令</h3><p>功能：将源操作数复制一份，送止目的操作数保存，除非<strong>标志寄存器</strong>是指令的<strong>目的操作数</strong>，否则传送类指令不影响任何标志位</p><h4 id="MOV数据传送指令"><a href="#MOV数据传送指令" class="headerlink" title="MOV数据传送指令"></a>MOV数据传送指令</h4><p>格式：MOV    DEST,    SCR</p><p>功能：(SCR)=&gt;DSET</p><p>注意：</p><ol><li>双操作数中只能有一个是<strong>内存操作数</strong></li><li>不能对<strong>段寄存器(CS\DS\SS\ES)<strong>直接传送立即数,需要使用</strong>通用寄存器</strong>中转</li></ol><h4 id="XCHG交换指令"><a href="#XCHG交换指令" class="headerlink" title="XCHG交换指令"></a>XCHG交换指令</h4><p>格式：XCHG    DEST,    SRC</p><p>功能：DEST=&gt;SRC同时SRC=&gt;DEST</p><p>注意：</p><ol><li>指令中不能使用立即数</li><li>不能使用<strong>段寄存器</strong></li><li>不能同时出现两个内存操作数</li></ol><h4 id="LAHF-Load-register-AH-from-FR-取标志位指令"><a href="#LAHF-Load-register-AH-from-FR-取标志位指令" class="headerlink" title="LAHF(Load register AH from FR)取标志位指令"></a>LAHF(Load register AH from FR)取标志位指令</h4><p>格式：LAHF</p><p>功能：（FR)_(0~7)=&gt;AH</p><h4 id="SAHF-Store-register-AH-into-FR-存标志位指令"><a href="#SAHF-Store-register-AH-into-FR-存标志位指令" class="headerlink" title="SAHF(Store register AH into FR)存标志位指令"></a>SAHF(Store register AH into FR)存标志位指令</h4><p>格式：SAHF</p><p>功能：AH=&gt;FR_(0~7)</p><h4 id="PUSH入栈指令"><a href="#PUSH入栈指令" class="headerlink" title="PUSH入栈指令"></a>PUSH入栈指令</h4><p>格式：PUSH    SRC</p><p>功能：(SP)-2=&gt;SP    ;(SRC)=&gt;(SP)</p><p>原理：先将（SP）减2，使之指向一个空的堆栈，再将源操作数保存到该堆栈。</p><p>注意：</p><ol><li>源操作数<strong>必须为16位的寄存器或内存单元</strong>，不能为8位的储存单元或立即数</li></ol><h4 id="POP出栈指令"><a href="#POP出栈指令" class="headerlink" title="POP出栈指令"></a>POP出栈指令</h4><p>格式:POP    DEST</p><p>功能:(SP)=&gt;DEST    ;SP+2=&gt;SP</p><p>原理：先将栈顶的数据传送到目的操作数保存，再将SP加2.</p><p>注意：</p><ol><li>目的操作数<strong>必须为16位的寄存器或内存单元</strong>，不能为8位的储存单元或立即数</li></ol><h4 id="PUSHF标志压栈指令"><a href="#PUSHF标志压栈指令" class="headerlink" title="PUSHF标志压栈指令"></a>PUSHF标志压栈指令</h4><p>格式：PUSHF</p><p>功能：SP-2=&gt;SP    ;FR=&gt;SP</p><h4 id="POPF标志出栈指令"><a href="#POPF标志出栈指令" class="headerlink" title="POPF标志出栈指令"></a>POPF标志出栈指令</h4><p>格式：POPF</p><p>功能：SP=&gt;FR    ;SP+2=&gt;SP</p><h4 id="LEA装入有效地址指令"><a href="#LEA装入有效地址指令" class="headerlink" title="LEA装入有效地址指令"></a>LEA装入<strong>有效地址</strong>指令</h4><p>格式：LEA    DEST,    SRC</p><p>功能：EA_(SRC)=&gt;DEST</p><p>注意：</p><ol><li>源操作数只能是16位内存单元</li><li>目的操作数只能是16位通用寄存器</li></ol><h4 id="LSD装入地址指针指令"><a href="#LSD装入地址指针指令" class="headerlink" title="LSD装入地址指针指令"></a>LSD装入地址指针指令</h4><p>格式：</p><p>LDS    DEST,    SRC </p><p>LES    DEST,    SRC    </p><h3 id="算术运算类指令"><a href="#算术运算类指令" class="headerlink" title="算术运算类指令"></a>算术运算类指令</h3><h4 id="ADD加法指令"><a href="#ADD加法指令" class="headerlink" title="ADD加法指令"></a>ADD加法指令</h4><p>格式：ADD    DEST,    SRC</p><p>功能：(SRC)+(DEST)=&gt;DEST或SRC+(DEST)=&gt;DEST</p><p>所有标志位都受到影响</p><p>注意：</p><ol><li>加法器设计不管数据的类型</li></ol><h4 id="ADC带进位加法指令"><a href="#ADC带进位加法指令" class="headerlink" title="ADC带进位加法指令"></a>ADC带进位加法指令</h4><p>格式：ADC    DEST,    SRC</p><p>功能：(SRC)+(DEST)+<strong>(CF)</strong>=&gt;DEST</p><p>ADC指令可以完成<strong>更高位数</strong>的加法</p><h4 id="INC加一指令"><a href="#INC加一指令" class="headerlink" title="INC加一指令"></a>INC加一指令</h4><p>格式：INC    DEST</p><p>功能：(DEST)+1=&gt;DEST</p><p>注意：</p><ol><li><strong>不影响CF标志</strong></li><li><strong>会影响到OF</strong>0111 1111-&gt;1000 0000 OF被置一</li><li>DEST不能是立即数</li></ol><blockquote><p>•为何设计为不影响CF？</p><p>•     mov  bx, 0                   ;完成80-bit操作数相加</p><p>•     mov  cx, 5</p><p>•     clc                                #清零CF</p><p>•lop1: mov  ax, tab1[bx]    #加数数组</p><p>•     adc  ax, tab2[bx]         #被加数数组 ; 生成有效 CF</p><p>•     mov  res[bx], ax</p><p>•     inc   bx                         ; 不影响 CF</p><p>•     inc   bx</p><p>•     loop  lop1                    ; 不影响 FR,同时将CX减一</p></blockquote><h4 id="SUB减法指令"><a href="#SUB减法指令" class="headerlink" title="SUB减法指令"></a>SUB减法指令</h4><p>格式：SUB    DEST,    SRC</p><p>功能：DEST-SCR=&gt;DEST</p><h4 id="SBB带进位的减法指令"><a href="#SBB带进位的减法指令" class="headerlink" title="SBB带进位的减法指令"></a>SBB带进位的减法指令</h4><p>格式：</p><p>功能：(DEST)-(SRC)-(CF)=&gt;DEST</p><h4 id="DEC减一指令"><a href="#DEC减一指令" class="headerlink" title="DEC减一指令"></a>DEC减一指令</h4><p>格式：DEC    DEST</p><p>功能：DEST-1=&gt;DEST</p><h4 id="NEG求相反数指令"><a href="#NEG求相反数指令" class="headerlink" title="NEG求相反数指令"></a>NEG求相反数指令</h4><p>格式：NEG    DEST</p><p>功能:0-DEST=&gt;DEST</p><p>注意：</p><ol><li>影响6个标志位</li><li>-128和-32768取反后<strong>OF被置一</strong>，且只有这种情况</li><li>如果运算结果为零，则CF为0；如果运算结果非零，则CF为1</li></ol><blockquote><p>•例 在DAW+2，DAW字单元存放有一个32位带符号数，DAW中存放的是低16位，求这个数的相反数并存入原单元中可用以下指令：</p><p>•NEG DAW                        #低16位直接求反</p><p>•MOV AX，0</p><p>•SBB  AX，DAW+2            #高16位用SBB</p><p>•MOV DAW+2，AX</p></blockquote><h4 id="CMP比较指令"><a href="#CMP比较指令" class="headerlink" title="CMP比较指令"></a>CMP比较指令</h4><p>格式：CMP    DEST,    SRC</p><p>功能：(DEST)-(SRC)</p><p>不回送运算结果，只改变FR，根据FR的内容可以判断六种大小关系</p><h3 id="位操作类指令"><a href="#位操作类指令" class="headerlink" title="位操作类指令"></a>位操作类指令</h3><p>包括<strong>运算指令</strong>和<strong>位移指令</strong></p><h4 id="运算指令"><a href="#运算指令" class="headerlink" title="运算指令"></a>运算指令</h4><h5 id="AND与运算指令（取位，清零）"><a href="#AND与运算指令（取位，清零）" class="headerlink" title="AND与运算指令（取位，清零）"></a>AND与运算指令（取位，清零）</h5><p>格式：AND    DEST,    SRC</p><p>功能：(DEST)&amp;(SRC)=&gt;DEST</p><p>注意：</p><ol><li>SF\ZF\PF与运算指令结果相同</li><li>CF\OF强制置零</li><li>AF不确定</li></ol><p><strong>取位操作</strong>时，将所取位设为“1”，其余为设为“0”</p><p>例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0110</span>(取位对象)&amp;<span class="hljs-number">0100</span>(取第三位)=<span class="hljs-number">0100</span><br></code></pre></td></tr></table></figure><p><strong>清零操作</strong>时，将所需清零位设为“0”，其余设为“1”</p><p>例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0110</span>(清零对象)&amp;<span class="hljs-number">1011</span>(将第三位清零)=<span class="hljs-number">0010</span><br></code></pre></td></tr></table></figure><h5 id="OR或运算（置位）"><a href="#OR或运算（置位）" class="headerlink" title="OR或运算（置位）"></a>OR或运算（置位）</h5><p>格式：OR    DESR</p><p>注意：</p><ol><li>SF\ZF\PF与运算指令结果相同</li><li>CF\OF强制置零</li><li>AF不确定</li></ol><p><strong>置位操作</strong>时，将所需置位的位置设为“1”，其余为设为“0”</p><p>例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0110</span>(置位对象)|<span class="hljs-number">0001</span>(置第一位为<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h5 id="XOR异或指令（位求反）"><a href="#XOR异或指令（位求反）" class="headerlink" title="XOR异或指令（位求反）"></a>XOR异或指令（位求反）</h5><p>格式：XOR    DEST,    SRC</p><p>注意：</p><ol><li>SF\ZF\PF与运算指令结果相同</li><li>CF\OF强制置零</li><li>AF不确定</li></ol><p><strong>位求反操作</strong>时，将所需求反位置“1”，其余为“0”</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0110</span>(受害者)异或<span class="hljs-number">0100</span>=<span class="hljs-number">0010</span><br></code></pre></td></tr></table></figure><h5 id="NOT非运算"><a href="#NOT非运算" class="headerlink" title="NOT非运算"></a>NOT非运算</h5><p>格式：NOT    DEST</p><p>注意：</p><ol><li>不进ALU,<strong>不影响标志位</strong>.</li></ol><h5 id="TEXT测试指令"><a href="#TEXT测试指令" class="headerlink" title="TEXT测试指令"></a>TEXT测试指令</h5><p>格式:TEXT    DEST,    SRC</p><p>功能：(DEST)&amp;(SRC)</p><p>只进行运算，改变FR，<strong>不保留结果</strong></p><p>注意：</p><ol><li>SF\ZF\PF与运算指令结果相同</li><li>CF\OF强制置零</li><li>AF不确定</li></ol><h4 id="移位指令"><a href="#移位指令" class="headerlink" title="移位指令"></a>移位指令</h4><p>可以移8位，也可以移16位</p><p>COUNT必须为CL，除非COUNT=1;</p><h5 id="SAL算术左移指令"><a href="#SAL算术左移指令" class="headerlink" title="SAL算术左移指令"></a>SAL算术左移指令</h5><p>格式：SAL    DEST,    COUNT</p><p>功能：将DEST左移COUNT位，<strong>从左边移出的最后一位保存到CF中</strong>，右边的<strong>空位补充为“0”</strong>，等价于DEST*2^COUNT^</p><p>注意：</p><ol><li>AF无意义</li><li>仅当COUNT为1时，OF有意义</li><li>SAL将目的操作数解释为<strong>补码</strong></li></ol><p>例：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dns">移位前CF        COUNT<br>移位前<span class="hljs-number">010110011</span><span class="hljs-number">1</span><br>移位后<span class="hljs-number">101100110</span><br>此时OF=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h5 id="SAR算数右移指令"><a href="#SAR算数右移指令" class="headerlink" title="SAR算数右移指令"></a>SAR算数右移指令</h5><p>格式：SAR    DEST,    COUNT</p><p>功能：将DEST右移COUNT位，<strong>从右边移出的最后一位存到CF中</strong>，将DEST解释为补码，左边的空位<strong>补充DEST的符号位</strong>，相当于DEST/2^COUNT^</p><p>注意</p><ol><li>OF在SAR中始终为0</li></ol><p>例：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">MOV</span> <span class="hljs-built_in">AL</span> <span class="hljs-number">11100010</span><br><span class="hljs-keyword">MOV</span> <span class="hljs-built_in">CL</span> <span class="hljs-number">2</span><br><span class="hljs-keyword">SAR</span> <span class="hljs-built_in">AL</span> <span class="hljs-built_in">CL</span><br><span class="hljs-built_in">AL</span>最后为<span class="hljs-number">11111000</span><br></code></pre></td></tr></table></figure><h5 id="SHL逻辑左移指令"><a href="#SHL逻辑左移指令" class="headerlink" title="SHL逻辑左移指令"></a>SHL逻辑左移指令</h5><p>格式：SHL    DEST,    COUNT</p><p>功能：同SAL</p><p>实质上SAL和SHL是同一条机器指令</p><h5 id="SHR逻辑右移指令"><a href="#SHR逻辑右移指令" class="headerlink" title="SHR逻辑右移指令"></a>SHR逻辑右移指令</h5><p>格式：SHR    DEST,    COUNT</p><p>功能：将DEST右移COUNT位，右边的空位补“0”，从右边移出的最后一位保存到CF</p><p>注意：</p><ol><li>OF只有在COUNT=1时有意义</li></ol><h5 id="ROL循环左移指令"><a href="#ROL循环左移指令" class="headerlink" title="ROL循环左移指令"></a>ROL循环左移指令</h5><p>格式：ROL    DEST,    COUNT</p><p>功能：转圈左移，最后移出（移入）的进CF，仅当COUNT=1时OF有意义</p><h5 id="ROR循环右移指令"><a href="#ROR循环右移指令" class="headerlink" title="ROR循环右移指令"></a>ROR循环右移指令</h5><p>格式：ROR    DEST,    COUNT</p><p>功能：转圈右移，最后移出的（移入）进CF</p><h5 id="RCL带进位的循环左移指令"><a href="#RCL带进位的循环左移指令" class="headerlink" title="RCL带进位的循环左移指令"></a>RCL带进位的循环左移指令</h5><p>格式：RCL    DEST,    COUNT</p><p>功能：带上CF一起转圈圈</p><h5 id="RCR带进位的循环右移指令"><a href="#RCR带进位的循环右移指令" class="headerlink" title="RCR带进位的循环右移指令"></a>RCR带进位的循环右移指令</h5><p>格式：RCR    DEST,    COUNT</p><p>功能：带上CF一起转圈圈</p><h3 id="处理器控制类指令"><a href="#处理器控制类指令" class="headerlink" title="处理器控制类指令"></a>处理器控制类指令</h3><h4 id="CLC清除进位标志指令"><a href="#CLC清除进位标志指令" class="headerlink" title="CLC清除进位标志指令"></a>CLC清除进位标志指令</h4><p>功能：将CF清零</p><h4 id="CMC进位标志取反指令"><a href="#CMC进位标志取反指令" class="headerlink" title="CMC进位标志取反指令"></a>CMC进位标志取反指令</h4><p>功能：将CF取反，再存在CF中</p><h4 id="CLI清除中断标志指令"><a href="#CLI清除中断标志指令" class="headerlink" title="CLI清除中断标志指令"></a>CLI清除中断标志指令</h4><p>功能：将IF清零</p><h4 id="HLT停机指令"><a href="#HLT停机指令" class="headerlink" title="HLT停机指令"></a>HLT停机指令</h4><p>功能：停止CPU的运转</p><h4 id="ESC协处理器指令前缀"><a href="#ESC协处理器指令前缀" class="headerlink" title="ESC协处理器指令前缀"></a>ESC协处理器指令前缀</h4><p>用于8087</p><h4 id="WAIT等待指令"><a href="#WAIT等待指令" class="headerlink" title="WAIT等待指令"></a>WAIT等待指令</h4><p>用于8087</p><h4 id="LOCK总线封锁指令前缀"><a href="#LOCK总线封锁指令前缀" class="headerlink" title="LOCK总线封锁指令前缀"></a>LOCK总线封锁指令前缀</h4><h4 id="NOP空操作指令"><a href="#NOP空操作指令" class="headerlink" title="NOP空操作指令"></a>NOP空操作指令</h4><p>等三个节拍</p><h1 id="第六章-汇编语言程序组织"><a href="#第六章-汇编语言程序组织" class="headerlink" title="第六章 汇编语言程序组织"></a>第六章 汇编语言程序组织</h1><p><strong>汇编语言的指令</strong>不是汇编语言的全部，完备的汇编语言程程序还应包含<strong>常量</strong>和<strong>变量</strong>的定义、<strong>程序结构的描述</strong>、<strong>程序编译控制</strong>等——这些需要使用汇编语言的<strong>伪指令</strong>来实现。</p><p>尽管汇编语言使符号化的机器语言，但不能被计算机直接识别和执行，必须同其他程序语言一样经过编译才能形成计算机能识别的机器代码。</p><h2 id="6-1汇编语言的语句的种类和格式"><a href="#6-1汇编语言的语句的种类和格式" class="headerlink" title="6.1汇编语言的语句的种类和格式"></a>6.1汇编语言的语句的种类和格式</h2><p>汇编语句分为<strong>指令语句</strong>和<strong>伪指令语句</strong></p><h3 id="6-1-1指令语句"><a href="#6-1-1指令语句" class="headerlink" title="6.1.1指令语句"></a>6.1.1指令语句</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">标号: 指令助记符 目标操作数表达式，源操作数表达式 ；注释</span><br></code></pre></td></tr></table></figure><p>标号标注指令的存储位置。标号仅供编译器使用，在源代码中不会体现。</p><p>操作数依次写</p><p>每一行分号后的是注释</p><p>标号的要求：</p><ol><li>字母打头</li><li>需要标记的位置再标记，可以没有标号</li></ol><h3 id="6-1-2伪指令语句格式"><a href="#6-1-2伪指令语句格式" class="headerlink" title="6.1.2伪指令语句格式"></a>6.1.2伪指令语句格式</h3><p>伪指令语句：用于指示汇编程序如何汇编源程序。不产生机器指令代码，其操作在汇编环节完成.</p><p>伪指令指挥编译器工作、汇编语言指令指挥CPU工作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">符号名 伪指令符 操作数表达式1，操作数表达式2······ ；注释<br></code></pre></td></tr></table></figure><p>**注意，符号名后没有</p><hr><p>都看到这里了，赏博主一杯咖啡吧！！</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/mm_facetoface_collect_qrcode_1618912890639.png"></p><p>也支持支付宝哦</p><p><img src="https://cdn.jsdelivr.net/gh/nobug-maker/PicGoCDN@master/1618913193481.jpg"></p><p>不会吧不会吧，真的有人忍心白嫖吗:stuck_out_tongue_winking_eye: </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C++面对对象的程序设计</title>
    <link href="/2021/04/10/C++%E9%9D%A2%E5%AF%B9%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <url>/2021/04/10/C++%E9%9D%A2%E5%AF%B9%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="C-基础知识"><a href="#C-基础知识" class="headerlink" title="C++基础知识"></a>C++基础知识</h1><h2 id="C-概述"><a href="#C-概述" class="headerlink" title="C++概述"></a>C++概述</h2><p>C++是一种面向对象的编程语言，由C语言发展而来。</p><h2 id="C-对C的补充"><a href="#C-对C的补充" class="headerlink" title="C++对C的补充"></a>C++对C的补充</h2><h3 id="新的输入输出方式"><a href="#新的输入输出方式" class="headerlink" title="新的输入输出方式"></a>新的输入输出方式</h3><h4 id="cout"><a href="#cout" class="headerlink" title="cout"></a>cout</h4><p>运算符<code>&lt;&lt;</code> 用于输出，称为插入运算符，意思是将输出内容插入到输出流中。</p><p>说明</p><ol><li><code>&lt;&lt;</code> 可以连续使用。</li><li>对于一般的指针，<code>&lt;&lt;</code> 输出其指针值；对于字符型指针，<code>&lt;&lt;</code> 输出其所指向的字符串。</li><li>可以直接输出字符串常量。</li><li>用<code>endl</code> 表示换行。</li></ol><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> i=<span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">char</span> c=<span class="hljs-string">&#x27;a&#x27;</span>;<br>    <span class="hljs-keyword">float</span> f=<span class="hljs-number">20.325</span>;<br>    <span class="hljs-keyword">int</span> *pi=&amp;i;<br>    <span class="hljs-keyword">char</span> *pa=<span class="hljs-string">&quot;Hello World!&quot;</span>;<br>    cout&lt;&lt;i&lt;&lt;&#x27;/t&#x27;&lt;&lt;c&lt;&lt;&#x27;/t&#x27;&lt;&lt;f&lt;&lt;endl;<br>    cout&lt;&lt;pi&lt;&lt;&#x27;/t&#x27;&lt;&lt;pa&lt;&lt;endl;<br>    cout&lt;&lt;<span class="hljs-string">&quot;这是一个字符串常量！&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">10a20</span><span class="hljs-string">.</span><span class="hljs-comment">325</span><br><span class="hljs-comment">0012ff38Hello</span> <span class="hljs-comment">World!</span><br><span class="hljs-comment">这是一个字符串常量！</span><br></code></pre></td></tr></table></figure><h4 id="cin"><a href="#cin" class="headerlink" title="cin"></a>cin</h4><p>运算符<code>&gt;&gt;</code> 用于输入，称为提取运算符。意思是从输入流中抽取一个数据。</p><p>同样的，可以连续使用。</p><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">char</span> c;<br>    <span class="hljs-keyword">float</span> f;<br>    cin&gt;&gt;i&gt;&gt;c&gt;&gt;f;<br>    cout&lt;&lt;<span class="hljs-string">&quot;i=&quot;</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; c=&quot;</span>&lt;&lt;c&lt;&lt;<span class="hljs-string">&quot; f=&quot;</span>&lt;&lt;f;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输入</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">10</span>a<span class="hljs-number">30</span>.<span class="hljs-number">89</span><br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">i</span>=10 <span class="hljs-attribute">c</span>=a <span class="hljs-attribute">f</span>=30.89<br></code></pre></td></tr></table></figure><p>注意：</p><ol><li>cin为缓冲流。键盘键入的数据保存在缓冲区中，cin实际是从缓冲区提取数据。如果一次输入数据过多，会滞留在缓冲区中，影响下一次输入。</li><li>输入的数据应与数据类型相同。</li><li>空格、回车都可以作为数据之间的分隔符；多个数据可以在同一行输入，也可在不同行输入对于字符型数据和字符串，空格无法用cin输入，字符串中也不能有空格；回车符也无法读入。</li></ol><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> i;<br>cin&gt;&gt;i;<br></code></pre></td></tr></table></figure><p>intput:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">W</span> <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>则<code>i</code>的值<strong>不是</strong>20，cin自动跳过前面的分隔符，遇到第一个非空白字符为W，它无法转化为整形，故读取失败。</p><p>例如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">char</span> s[<span class="hljs-number">100</span>];<br>cin&gt;&gt;s;<br></code></pre></td></tr></table></figure><p>input:</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">123 </span>  <span class="hljs-number">456</span><br></code></pre></td></tr></table></figure><p><code>s</code> 的内容为<code>123</code></p><h3 id="注释、变量声明与作用域限定符"><a href="#注释、变量声明与作用域限定符" class="headerlink" title="注释、变量声明与作用域限定符"></a>注释、变量声明与作用域限定符</h3><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/*...*/</span><br><span class="hljs-comment">//</span><br></code></pre></td></tr></table></figure><h4 id="随时随地声明变量"><a href="#随时随地声明变量" class="headerlink" title="随时随地声明变量"></a>随时随地声明变量</h4><p>C语言中变量声明必须在可执行代码前，C++则可以在任何地方声明。</p><h4 id="作用域限定符”：：“"><a href="#作用域限定符”：：“" class="headerlink" title="作用域限定符”：：“"></a>作用域限定符”：：“</h4><p>格式：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">限定符::成员名<br></code></pre></td></tr></table></figure><p>限定符可以被省略，此时说明<code>::</code> 后的成员为全局变量</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#iostream<span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">int</span> i=<span class="hljs-number">10</span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">fun</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> i=<span class="hljs-number">20</span>;<br>    cout&lt;&lt;<span class="hljs-string">&quot;局部变量i=&quot;</span>&lt;&lt;i;<br>    cout&lt;&lt;<span class="hljs-string">&quot; 全局变量i=&quot;</span>&lt;&lt;::i;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">mian</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">fun</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>outcome:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">局部变量<span class="hljs-attribute">i</span>=20 全局变量<span class="hljs-attribute">i</span>=10<br></code></pre></td></tr></table></figure><h3 id="强制类型转换与从上图标识符"><a href="#强制类型转换与从上图标识符" class="headerlink" title="强制类型转换与从上图标识符"></a>强制类型转换与从上图标识符</h3><h4 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h4><p>C语言</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">int</span> i=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">char</span> c=(<span class="hljs-keyword">char</span>)i;<br></code></pre></td></tr></table></figure><p>C++</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> i=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">char</span> c=<span class="hljs-built_in"><span class="hljs-keyword">char</span></span>(i);<br></code></pre></td></tr></table></figure><p>两者均可用</p><h4 id="const常量标识符"><a href="#const常量标识符" class="headerlink" title="const常量标识符"></a>const常量标识符</h4><p>注意：</p><p>（1）常量定义时必须初始化</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> i=<span class="hljs-number">5</span>;<br>i=<span class="hljs-number">10</span>;<span class="hljs-comment">//wrong</span><br>i++;<span class="hljs-comment">//wrong</span><br></code></pre></td></tr></table></figure><p>（2）const为右结合，若是简单数据类型，可以写在数据类型左侧</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> i=<span class="hljs-number">5</span>;<br><span class="hljs-keyword">int</span> <span class="hljs-keyword">const</span> j=<span class="hljs-number">6</span>;<br></code></pre></td></tr></table></figure><p>（3）可以在任何地方定义，其作用域随位置不同而不同。</p><h3 id="函数原型声明"><a href="#函数原型声明" class="headerlink" title="函数原型声明"></a>函数原型声明</h3><p>如函数调用位置在函数定义之前，则应在调用前声明函数原型，这样编译系统可以对函数调用的合法性经行检查，以保证程序运行的正确性。</p><p>函数原型声明语法如下：</p><p>​    函数返回类型 函数名 （参数表）;</p><p>注意：</p><p>（1）每个参数之间用逗号相隔。</p><p>（2）可以只声明参数类型，不给出参数名，如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *p1,*p2)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *,<span class="hljs-keyword">int</span> *)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="内联函数"><a href="#内联函数" class="headerlink" title="内联函数"></a>内联函数</h3><p>函数调用需要耗费一定时间，如果一个函数需要频繁调用，那么将消耗大量时间，从而降低程序运行效率。C++提供内联函数来减少函数调用所需消耗的时间，即将函数的代码嵌入到每一个调用处，虽然这样会使程序边长，但它可以避免调用函数。</p><p>声明内联函数很简单，只需在函数返回类型前加关键字<code>inline</code> 即可。</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> x+y;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">10</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>        cout&lt;&lt;<span class="hljs-built_in">Add</span>(i,i)&lt;&lt;<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>output</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">20</span><span class="hljs-number">18</span><span class="hljs-number">16</span><span class="hljs-number">14</span><span class="hljs-number">12</span><span class="hljs-number">10</span><span class="hljs-number">8</span><span class="hljs-number">6</span><span class="hljs-number">4</span><span class="hljs-number">2</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>注意：使用内联函数虽然可以减小时间的开销，但会增加程序长度，一次，<code>inline</code> 关键字只适用于<strong>短小且频繁调用的</strong>函数。</p><h3 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h3><p>C语言规定，在同一作用域中不能有同名函数存在。与之相反，C++允许在同一作用域中用同一函数名定义多个函数。</p><p>在这些函数中，函数的参数的个数、类型、顺序不尽相同。编译器会根据实参和形参的最佳匹配来确定调用哪一个函数。这就是函数的重载。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Max</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(b&gt;a) <span class="hljs-keyword">return</span> b;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> a;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">Max</span><span class="hljs-params">(<span class="hljs-keyword">float</span> a,<span class="hljs-keyword">float</span> b,<span class="hljs-keyword">float</span> c)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(b&gt;a) a=b;<br>    <span class="hljs-keyword">if</span>(c&gt;a) a=c;<br>    <span class="hljs-keyword">return</span> a;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a,b;<br>    <span class="hljs-keyword">float</span> c,d,e;<br>    cin&gt;&gt;a&gt;&gt;b;<br>    cin&gt;&gt;c&gt;&gt;d&gt;&gt;e;<br>    <span class="hljs-keyword">int</span> m;<br>    m=<span class="hljs-built_in">Max</span>(a,b);<br>    cout&lt;&lt;<span class="hljs-string">&quot;Max_int=&quot;</span>&lt;&lt;m&lt;&lt;endl;<br>    <span class="hljs-keyword">float</span> n=<span class="hljs-built_in">Max</span>(c,d,e);<br>    cout&lt;&lt;<span class="hljs-string">&quot;Max_float=&quot;</span>&lt;&lt;n&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>input</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">56 </span><span class="hljs-number">90</span><br><span class="hljs-number">23.2</span> <span class="hljs-number">30.5</span> <span class="hljs-number">1.4</span><br></code></pre></td></tr></table></figure><p>output</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">Max_int</span>=<span class="hljs-number">90</span><br><span class="hljs-attr">Max_float</span>=<span class="hljs-number">30.5</span><br></code></pre></td></tr></table></figure><p>注意：重载函数的参数类型、个数和顺序<strong>至少有一个</strong>不同；函数返回类型可以相同也可以不同。</p><h3 id="带默认参数的函数"><a href="#带默认参数的函数" class="headerlink" title="带默认参数的函数"></a>带默认参数的函数</h3><p>函数调用的时候要将实参传递给形参，一般情况下实参的个数应与形参个数相同。有时也会出现多次用相同实参调用同一个函数的情况。C++为此提供简化方式：</p><p>例如：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">void <span class="hljs-builtin-name">Set</span>(int <span class="hljs-attribute">i</span>=0)<br></code></pre></td></tr></table></figure><p>若不传递实参调用</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Set</span><span class="hljs-params">()</span></span><span class="hljs-comment">//此时相当于调用Set(0)</span><br></code></pre></td></tr></table></figure><p>也可以传递实参调用</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Set</span><span class="hljs-params">(<span class="hljs-number">2</span>)</span></span><br></code></pre></td></tr></table></figure><p>注意：若有多个实参，则默认参数必须在最右边</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">void <span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">(int a,int b,int c=<span class="hljs-number">10</span>)</span></span><span class="hljs-comment">//合法</span><br>void <span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">(int a,int c=<span class="hljs-number">10</span>,int b)</span></span><span class="hljs-comment">//不合法</span><br></code></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>引用是C++一种数据类型，即给变量起另一个名字，以便在需要时间接引用该变量。对一个变量引用所做的所有操作，都是对该变量本身的操作。引用运算符使用<code>&amp;</code> 。</p><p>声明一个引用的语法如下：</p><p>​    &lt;类型标识符&gt;&amp;&lt;引用名&gt;=&lt;变量名&gt;</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> &amp;j=i;<br></code></pre></td></tr></table></figure><p>注意：<br>（1）引用在声明时必须初始化，即指定它指向哪个变量。</p><p>（2）引用变量一经初始化，就不能再引用别的变量。</p><p>（3）运算符<code>&amp;</code> 只有在其前面有类型符相连时才代表“引用”，否则代表“取地址”。</p><p>（4）系统不会为变量的引用另外分配储存空间，引用和被引用变量共享同一内存单元。</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">mian</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> i=<span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">int</span> &amp;j=i;<br>    cout&lt;&lt;<span class="hljs-string">&quot;i=&quot;</span>&lt;&lt;i&lt;&lt;endl;<br>    cout&lt;&lt;<span class="hljs-string">&quot;j=&quot;</span>&lt;&lt;j&lt;&lt;endl;<br>    j++;<br>    i++;<br>    cout&lt;&lt;<span class="hljs-string">&quot;i=&quot;</span>&lt;&lt;i&lt;&lt;endl;<br>    cout&lt;&lt;<span class="hljs-string">&quot;j=&quot;</span>&lt;&lt;j&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">i</span>=<span class="hljs-number">10</span><br><span class="hljs-attr">j</span>=<span class="hljs-number">10</span><br><span class="hljs-attr">i</span>=<span class="hljs-number">12</span><br><span class="hljs-attr">j</span>=<span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><h3 id="运算符new和delete"><a href="#运算符new和delete" class="headerlink" title="运算符new和delete"></a>运算符new和delete</h3><h4 id="new操作符"><a href="#new操作符" class="headerlink" title="new操作符"></a>new操作符</h4><p>new操作符格式如下：</p><p>（1）指针变量=new 类型；</p><p>（2）指针变量=new 类型（初值）；</p><p>（3）指针变量=new 类型[数组元素数]。</p><p>new的返回值：若是非数组类型，返回指向该类型对象的指针；若是数组类型，返回数组的首地址。</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> *p;<br>p=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>;<span class="hljs-comment">//动态内存分配</span><br>*p=<span class="hljs-number">3</span>;<span class="hljs-comment">//第二、三行可以合并成：p=new int(3);</span><br><span class="hljs-keyword">float</span> *pl;<br>pl=<span class="hljs-keyword">new</span> <span class="hljs-keyword">float</span>[<span class="hljs-number">3</span>];<span class="hljs-comment">//为三个元素的float数组申请堆内存</span><br>pl[<span class="hljs-number">2</span>]=<span class="hljs-number">20.9</span>;<span class="hljs-comment">//为数组第三个元素赋值</span><br></code></pre></td></tr></table></figure><p>注意：</p><p>（1）new申请内存不一定总会成功，不成功时返回NULL。程序应注意判断new操作符的返回值，只有在非NULL的情况下才能进行访问。例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> *p;<br>p=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>;<br><span class="hljs-keyword">if</span>(p!=<span class="hljs-literal">NULL</span>)<br>&#123;<span class="hljs-comment">//申请到内存</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<span class="hljs-comment">//申请失败</span><br>&#125;<br></code></pre></td></tr></table></figure><p>（2）new为数组分配内存时无法提供初值。</p><p>（3）new为二维数组分配堆内存可以按以下方式进行</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> m=<span class="hljs-number">5</span>;<br><span class="hljs-keyword">int</span> n=<span class="hljs-number">4</span>;<br><span class="hljs-keyword">int</span> **p;<br>p=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>* [m];<span class="hljs-comment">//第一维，分配m行</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)<br>&#123;<br>    p[i]=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [n];<span class="hljs-comment">//第二维，为每行分配n给元素</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="delete操作符"><a href="#delete操作符" class="headerlink" title="delete操作符"></a>delete操作符</h4><p>delete操作符格式：</p><p>（1）delete 指针变量；        //释放指针变量所指向的堆内存</p><p>（2）delete []指针变量；     //释放为数组分配的堆内存</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">delete</span> p;<span class="hljs-comment">//释放p指向的堆内存</span><br><br><span class="hljs-keyword">delete</span> []p;<span class="hljs-comment">//释放p数组分配的内存</span><br><br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;m;i++)<span class="hljs-comment">//释放二维数组分配的内存</span><br>&#123;<br><span class="hljs-keyword">delete</span> [] p[i]<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注意：new申请的堆内存在用完后必须用delete释放‘</strong></p><h2 id="C-程序的开发过程"><a href="#C-程序的开发过程" class="headerlink" title="C++程序的开发过程"></a>C++程序的开发过程</h2><h3 id="一个简单的C-程序"><a href="#一个简单的C-程序" class="headerlink" title="一个简单的C++程序"></a>一个简单的C++程序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-comment">/*****************************************</span><br><span class="hljs-comment"> *(1)编译预处理命令</span><br><span class="hljs-comment"> *   所有预处理命令都以“#”引导</span><br><span class="hljs-comment"> *   每条预处理命令单独占一行</span><br><span class="hljs-comment"> *   不以“；”结束                          </span><br><span class="hljs-comment"> *****************************************/</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-comment">/*****************************************</span><br><span class="hljs-comment"> *(2)针对命名空间的命令</span><br><span class="hljs-comment"> *****************************************/</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><span class="hljs-comment">//主函数</span></span><br><span class="hljs-function"></span>&#123;<br>    cout&lt;&lt;<span class="hljs-string">&quot;Hello World!&quot;</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="C-程序的开发"><a href="#C-程序的开发" class="headerlink" title="C++程序的开发"></a>C++程序的开发</h3><p>（1）程序编辑</p><p>​            编写程序源码并将其输入到计算机中，生成拓展名为.cpp的磁盘文件</p><p>（2）程序编译</p><p>​            将源代码通过编译器转换为机器语言代码，生成拓展名为.obj的目标文件</p><p>（3）程序连接</p><p>​            将多个目标文件和系统提供的库文件中的某些文件连接在一起，生成一个拓展名为.exe的可执行文件</p><p>（4）程序运行</p><h1 id="C-类和对象"><a href="#C-类和对象" class="headerlink" title="C++类和对象"></a>C++类和对象</h1><h2 id="面向对象程序设计方法概述"><a href="#面向对象程序设计方法概述" class="headerlink" title="面向对象程序设计方法概述"></a>面向对象程序设计方法概述</h2><h3 id="面对对象程序设计方法的基本概念"><a href="#面对对象程序设计方法的基本概念" class="headerlink" title="面对对象程序设计方法的基本概念"></a>面对对象程序设计方法的基本概念</h3><h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>对象是人研究的任何事物，包含两个要素——属性和行为。</p><p>例如研究对象是学生张三，其属性包括：姓名、性别、年龄、学号、成绩······其行为可以包括：添加一个学生，更改学号，添加成绩······</p><h4 id="类"><a href="#类" class="headerlink" title="类"></a>类</h4><p>具有相同属性和行为的对象的抽象就是<strong>类</strong>。</p><p>例如许多像张三一样的学生就是学生类。</p><h4 id="方法和消息"><a href="#方法和消息" class="headerlink" title="方法和消息"></a>方法和消息</h4><p>类中行为的实现过程即类的方法，也是类的成员函数。一个方法包括方法名（函数名）、返回值类型、参数表和方法体（函数体）。</p><p>对象之间通过发送消息来实现相互沟通。向对象发送一条消息时至少要包括接收消息的对象名、对象需执行行为的名称（方法名）也许还有调用方法的参数。</p><h3 id="面向对象程序设计方法的基本原理"><a href="#面向对象程序设计方法的基本原理" class="headerlink" title="面向对象程序设计方法的基本原理"></a>面向对象程序设计方法的基本原理</h3><h4 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a>抽象</h4><p>从众多的事物中抽取出共同的、本质的特征就是抽象。</p><p>抽象是简化问题的途径，它可以为具体问题找到最恰当的类定义。</p><p>抽象时要忽略无关信息。</p><h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><p>把对象的属性和行为结合成一个独立的单位，尽可能隐藏对象的内部细节。</p><p>有两层含义：</p><ol><li>把对象的全部属性和行为结合在一起，形成一个不可分割的独立单位，对象的属性值只能由这个对象的行为来读取和修改。</li><li>在对象的内部和外部之间形成一道屏障，内部与外部的联系只能通过外部接口实现。</li></ol><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><h4 id="多态性"><a href="#多态性" class="headerlink" title="多态性"></a>多态性</h4><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p>类是C++语言的一种抽象和封装机制,它描述了一种具有相同属性和行为的对象</p><h3 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h3><p>将对象的属性抽象为数据成员，将对象的行为抽象为成员函数，并对他们经行封装，就由此形成了类。</p><p>类的定义格式一般分为声明部分和实现部分。</p><p>声明部分是用来声明该类的成员，包括数据成员的声明和成员函数的声明。所谓成员函数的声明，就是只声明成员函数的函数原型，而成员函数的实现则是对成员函数经行定义。</p><p>类的一般定义格式如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span>&lt;</span>name&gt;<br>&#123;<br>    <span class="hljs-keyword">public</span>:<br>    &lt;成员函数或数据成员的声明&gt;<br>    <span class="hljs-keyword">private</span>:<br>    &lt;数据成员或成员函数的声明&gt;<br>&#125;;<br>&lt;各个成员函数的类外实现&gt;<br></code></pre></td></tr></table></figure><ol><li>class是定义类的关键字，<name>是标识符</li><li>{}内是声明部分，包含描述属性的数据成员和定义行为的成员函数的函数原型</li><li>关键字public、private和protected被称为访问限制符，说明成员的访问权限</li><li>成员函数一般被列为公有成员，为外界提供操作接口，便于访问和</li><li>应用数据成员一般被列为私有成员，因为类的数据必须是封装的，不能随便取用</li><li>&lt;各个成员函数的类外实现&gt;是类的实现部分</li></ol><p>下面给出一个日期类定义的例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//文件路径名：s2_1\sclass2_1_date.h</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Date</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetDate</span><span class="hljs-params">(<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> m,<span class="hljs-keyword">int</span> d)</span></span><br><span class="hljs-function">    </span>&#123;<br>        year = y;<br>        month = m;<br>        day = d;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">IsLeapYear</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span>(year%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>&amp;&amp;year%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>)||(year%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Print</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        cout&lt;&lt;year&lt;&lt;<span class="hljs-string">&quot;年&quot;</span>&lt;&lt;month&lt;&lt;<span class="hljs-string">&quot;月&quot;</span>&lt;&lt;day&lt;&lt;<span class="hljs-string">&quot;日&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">private</span>:<br>    <span class="hljs-keyword">int</span> year;<br>    <span class="hljs-keyword">int</span> month;<br>    <span class="hljs-keyword">int</span> day;<br>&#125;;<br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&quot;sclass2_1_date.h.&quot;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    Date d1;<br>    d1.<span class="hljs-built_in">SetDate</span>(<span class="hljs-number">2012</span>,<span class="hljs-number">11</span>,<span class="hljs-number">11</span>);<br>    d1.<span class="hljs-built_in">Print</span>();<br>    cout&lt;&lt;<span class="hljs-string">&quot;此年是闰年吗？:&quot;</span>&lt;&lt;d1.<span class="hljs-built_in">IsLeapYear</span>()&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2012</span>年<span class="hljs-number">11</span>月<span class="hljs-number">11</span>日此年是闰年吗？：<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><strong>一般规定：</strong></p><ol><li>在类体中先声明类的行为，后声明类的属性</li><li>一般按数据成员类型的大小，由小到大声明，这样可以提高空间利用率</li></ol><h3 id="成员函数的实现"><a href="#成员函数的实现" class="headerlink" title="成员函数的实现"></a>成员函数的实现</h3><p>类的核心是<strong>成员函数</strong>，而成员函数的核心是<strong>算法</strong>。因此算法的程序实现就是成员函数的实现，即“类的实现”。</p><p>成员函数的实现一般有两种方式：<strong>类内实现</strong>，和<strong>类外实现</strong></p><p><strong>类内实现</strong>指每一个成员函数在声明时就定义了代码。</p><p><strong>类外实现</strong>指把实现成员函数的代码放在类外。</p><p>例如把前一个例子的声明精简如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Date</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetDate</span><span class="hljs-params">(<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> m,<span class="hljs-keyword">int</span> d)</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">IsLeapYear</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Print</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-keyword">private</span>:<br>    <span class="hljs-keyword">int</span> year;<br>    <span class="hljs-keyword">int</span> month;<br>    <span class="hljs-keyword">int</span> day;<br>&#125;;<br></code></pre></td></tr></table></figure><p>建议将声明内容单独放在一个头文件（拓展名.h）中，实现部分放在一个源文件（拓展名为.cpp）里。</p><p><strong>上面为声明部分，下面为实现部分</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Date::SetDate</span><span class="hljs-params">(<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> m,<span class="hljs-keyword">int</span> d)</span></span><br><span class="hljs-function"></span>&#123;<br>    year = y;<br>    month = m;<br>    day = d;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Date::IsLeapYear</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span>(year%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>&amp;&amp;year%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>)||(year%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Date::Print</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cout&lt;&lt;year&lt;&lt;<span class="hljs-string">&#x27;.&#x27;</span>&lt;&lt;month&lt;&lt;<span class="hljs-string">&#x27;.&#x27;</span>&lt;&lt;day&lt;&lt;endl;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="对象的创建"><a href="#对象的创建" class="headerlink" title="对象的创建"></a>对象的创建</h3><p><strong>类名 对象名;</strong></p><p>或</p><p><strong>类名 对象1，对象2；</strong></p><p>如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">Date newDate;<span class="hljs-comment">//方法一</span><br>Date newDate1,newDate2;<span class="hljs-comment">//方法二</span><br></code></pre></td></tr></table></figure><p>由于Date类没有为对象初始化，所以以上每个对象的年月日在对象创建时由系统<strong>随机</strong>初始化。</p><p>创建对象的代码要写在main()中，并将main()单独放在一个源文件（.cpp）中</p><h3 id="类成员的访问"><a href="#类成员的访问" class="headerlink" title="类成员的访问"></a>类成员的访问</h3><h4 id="类成员的一般访问形式"><a href="#类成员的一般访问形式" class="headerlink" title="类成员的一般访问形式"></a>类成员的一般访问形式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">对象名.数据成员名;<br>对象名.成员函数名(参数表);<br></code></pre></td></tr></table></figure><h4 id="类成员的访问权限"><a href="#类成员的访问权限" class="headerlink" title="类成员的访问权限"></a>类成员的访问权限</h4><p>共有三中访问权限</p><ol><li><strong>public</strong>代表公有的访问权限。它修饰了类对外公开的部分，凡是由public声明的成员被称为<strong>公有成员</strong>，<strong>允许类外访问</strong>。</li><li><strong>private</strong>代表私有的访问权限，它规定了只能被<strong>类内部的成员函数</strong>访问的部分，任何类外的访问都是非法的。private像一道屏障，把它所修饰的成员与外部分隔开实现数据隐藏，在最大程度上保护了类的私有数据。</li><li><strong>protected</strong>代表保护的访问权限。它与私有的访问权限类似，曲别在于保护权限的成员不仅可以被本类的成员函数访问，还可以被派生类的成员访问。</li></ol><p>注意：</p><ol><li>不同权限的成员可以以任意顺序声明。</li><li>如果<strong>私有成员</strong>类在最前面，可以省略关键字<code>private</code>,因为它是默认的访问限制符。</li></ol><p>例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//文件路径名：s2_2\sclass2_2_cdemo.h    // sclass2_2_cdemo.h文件开始</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> __SCLASS2_2_CDEMO_H__</span><br><span class="hljs-comment">// 如果未定义__SCLASS2_2_CDEMO_H__</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __SCLASS2_2_CDEMO_H__</span><br><span class="hljs-comment">// 则定义__SCLASS2_2_CDEMO_H__,继续编译后面的语句,直到遇到#endif</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span>  </span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std; <br><br><span class="hljs-comment">//CDemo类的定义     </span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CDemo</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">public</span>:<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetI</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a)</span>                 <span class="hljs-comment">//设置外部接口SetI( )为i赋值</span></span><br><span class="hljs-function"></span>&#123;<br>i = a;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetJ</span><span class="hljs-params">(<span class="hljs-keyword">int</span> b)</span> <span class="hljs-comment">//设置外部接口SetJ( )为j赋值</span></span><br><span class="hljs-function"></span>&#123;<br>j = b;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">GetI</span><span class="hljs-params">( )</span> </span><br><span class="hljs-function"></span>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;i=&quot;</span> &lt;&lt; i &lt;&lt; endl;     <span class="hljs-comment">//输出i的值</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">GetJ</span><span class="hljs-params">( )</span> </span><br><span class="hljs-function"></span>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;j=&quot;</span> &lt;&lt; j &lt;&lt; endl;     <span class="hljs-comment">//输出j的值</span><br>&#125;<br><br><span class="hljs-keyword">protected</span>:<br><span class="hljs-keyword">int</span> j;<br><span class="hljs-keyword">private</span>:<br><span class="hljs-keyword">int</span> i;<br>&#125;;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span><span class="hljs-comment">// sclass2_2_cdemo.h文件结束</span></span><br><br><br><span class="hljs-comment">// 文件路径名:s2_2\smain2_2.cpp  // smain2_2.cppsmain2_2.cpp文件开始</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;sclass2_2_cdemo.h.&quot;</span> </span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>CDemo d; <span class="hljs-comment">//创建一个Demo类对象 </span><br>d.<span class="hljs-built_in">SetI</span>(<span class="hljs-number">10</span>); <span class="hljs-comment">//调用SetI( ) 间接访问私有数据i并为i赋值为10</span><br>d.<span class="hljs-built_in">SetJ</span>(<span class="hljs-number">20</span>); <span class="hljs-comment">//调用SetJ( ) 间接访问私有数据j并为i赋值为20</span><br><span class="hljs-comment">// d.i ＝10;       // 非法！</span><br><span class="hljs-comment">// d.j ＝20;       // 非法！</span><br>d.<span class="hljs-built_in">GetI</span>( ); <span class="hljs-comment">//调用GetI( )间接访问私有数据i并输出其值</span><br>d.<span class="hljs-built_in">GetJ</span>( ); <span class="hljs-comment">//调用GetJ( )间接访问私有数据j并输出其值</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<span class="hljs-comment">// smain2_2.cpp文件结束</span><br><br></code></pre></td></tr></table></figure><h2 id="2-3构造函数和析构函数"><a href="#2-3构造函数和析构函数" class="headerlink" title="2.3构造函数和析构函数"></a>2.3构造函数和析构函数</h2><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>构造函数为对象在被创建时<strong>分配内存空间</strong>，利用给定的值去<strong>初始化对象的数据成员</strong>，把对象构造成一个特定的状态。</p><p>声明构造函数的格式：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">public</span>:<br>类名(参数表);<br></code></pre></td></tr></table></figure><p>构造函是类的一个特殊函数，如果一个类没有人为构造函数，那么系统会自动生成一个<strong>不带参数</strong>的默认构造函数。</p><p><em><strong>构造函数名就是类名，无返回值</strong></em></p><h3 id="重载构造函数"><a href="#重载构造函数" class="headerlink" title="重载构造函数"></a>重载构造函数</h3><p>可以在一个类中定义多个构造函数，即重载函数</p><p>例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Date</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">Date</span>();<span class="hljs-comment">//构造函数1</span><br>    <span class="hljs-built_in">Date</span>(<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> m,<span class="hljs-keyword">int</span> d);<span class="hljs-comment">//构造函数2</span><br>    <span class="hljs-comment">/*以下略*/</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="带默认参数的构造函数"><a href="#带默认参数的构造函数" class="headerlink" title="带默认参数的构造函数"></a>带默认参数的构造函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Date</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">Date</span>(<span class="hljs-keyword">int</span> y=<span class="hljs-number">2021</span>,m=<span class="hljs-number">4</span>,d=<span class="hljs-number">8</span>);<br>    <span class="hljs-comment">/*略*/</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="拷贝构造函数"><a href="#拷贝构造函数" class="headerlink" title="拷贝构造函数"></a>拷贝构造函数</h3><p>用来复制对象的一种特殊构造函数，格式如下：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">public</span>:<br>类名(<span class="hljs-keyword">const</span> 类名&amp;对象名)；<br></code></pre></td></tr></table></figure><p>注意</p><ol><li>拷贝构造函数名就是类名</li><li>没有返回类型</li><li>有且只有一个参数</li><li>const用于约束参数不变</li><li>参数采用引用方法传递可以减少内存空间的占用，减少系统开销</li><li>不含指针的类可以使用系统自动生成的拷贝构造函数经行<strong>浅拷贝</strong></li><li>含指针的类有必要定义一个<strong>深度拷贝构造函数</strong>，先申请内存空间再经行内容的复制</li></ol><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">cpoint</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">cpoint</span>(<span class="hljs-keyword">int</span> x1,<span class="hljs-keyword">int</span> y1);<br><span class="hljs-built_in">cpoint</span>(<span class="hljs-keyword">const</span> cpoint &amp;obj);<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getX</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getY</span><span class="hljs-params">()</span></span>;<br>~<span class="hljs-built_in">cpoint</span>()&#123;&#125;;<br><br><span class="hljs-keyword">private</span>:<br><span class="hljs-keyword">int</span> x;<br><span class="hljs-keyword">int</span> y;<br>&#125;;<br><br>cpoint::<span class="hljs-built_in">cpoint</span>(<span class="hljs-keyword">int</span> x1,<span class="hljs-keyword">int</span> y1)<br>&#123;<br>x=x1;<br>y=y1;<br>&#125;<br><br>cpoint::<span class="hljs-built_in">cpoint</span>(<span class="hljs-keyword">const</span> cpoint &amp;obj)<br>&#123;<br>x=obj.x;<br>y=obj.y;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">cpoint::getX</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> x;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">cpoint::getY</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> y;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;cpoint.h&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-function">cpoint <span class="hljs-title">a</span><span class="hljs-params">(<span class="hljs-number">20</span>,<span class="hljs-number">30</span>)</span></span>;<br><span class="hljs-function">cpoint <span class="hljs-title">b</span><span class="hljs-params">(a)</span></span>;<br>cpoint c=b;<br>cout&lt;&lt;<span class="hljs-string">&quot;a(&quot;</span>&lt;&lt;a.<span class="hljs-built_in">getX</span>()&lt;&lt;<span class="hljs-string">&quot;,&quot;</span>&lt;&lt;a.<span class="hljs-built_in">getY</span>()&lt;&lt;<span class="hljs-string">&quot;)&quot;</span>&lt;&lt;endl;<br>cout&lt;&lt;<span class="hljs-string">&quot;b(&quot;</span>&lt;&lt;b.<span class="hljs-built_in">getX</span>()&lt;&lt;<span class="hljs-string">&quot;,&quot;</span>&lt;&lt;b.<span class="hljs-built_in">getY</span>()&lt;&lt;<span class="hljs-string">&quot;)&quot;</span>&lt;&lt;endl;<br>cout&lt;&lt;<span class="hljs-string">&quot;c(&quot;</span>&lt;&lt;c.<span class="hljs-built_in">getX</span>()&lt;&lt;<span class="hljs-string">&quot;,&quot;</span>&lt;&lt;c.<span class="hljs-built_in">getY</span>()&lt;&lt;<span class="hljs-string">&quot;)&quot;</span>&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h3><p>经行对象的清理工作</p><p>格式：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">public</span>:<br>~类名();<br></code></pre></td></tr></table></figure><p>注意：</p><ol><li>析构函数名与类名相同，前面多家一个“~”</li><li>无返回值和参数，不能重载</li></ol><h2 id="2-4对象数组"><a href="#2-4对象数组" class="headerlink" title="2.4对象数组"></a>2.4对象数组</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">Student *st = <span class="hljs-keyword">new</span> Student[<span class="hljs-number">45</span>];<br></code></pre></td></tr></table></figure><h2 id="2-5对象指针"><a href="#2-5对象指针" class="headerlink" title="2.5对象指针"></a>2.5对象指针</h2><h3 id="this指针"><a href="#this指针" class="headerlink" title="this指针"></a>this指针</h3><p>this指针指向调用类函数的成员</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CPoint::Move</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x1,<span class="hljs-keyword">int</span> y1)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">this</span>-&gt;x=x1;<br><span class="hljs-keyword">this</span>-&gt;y=y1;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-6静态成员"><a href="#2-6静态成员" class="headerlink" title="2.6静态成员"></a>2.6静态成员</h2><h3 id="2-6-1静态数据成员"><a href="#2-6-1静态数据成员" class="headerlink" title="2.6.1静态数据成员"></a>2.6.1静态数据成员</h3><p>在C++中类的数据成员如果被声明成为<code>static</code>,那么他就是静态数据成员，意味着<strong>它为该类的所有对象共享</strong></p><p>静态数据成员不属于某一个对象，即使某个对象消亡了，静态数据成员还会在程序中存在</p><p>可以将静态数据成员的访问权限设为<code>private</code>,使之更加安全</p><p><strong>静态数据成员的初始化不能在构造函数中进行</strong></p><p>静态数据成员的初始化是在类外经行的，格式如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">数据类型 类名：：静态数据成员名=初始值；<br></code></pre></td></tr></table></figure><p>静态数据成员的访问格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">类名：：静态数据成员名；<br></code></pre></td></tr></table></figure><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Point</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">Point</span>()<br>        &#123;<br>            x=<span class="hljs-number">0</span>;<br>            y=<span class="hljs-number">0</span>;<br>            counter++;<br>        &#125;<br>        ~<span class="hljs-built_in">Point</span>()<br>        &#123;<br>            counter--;<br>        &#125;<br>    <span class="hljs-keyword">private</span>:<br>    <span class="hljs-keyword">int</span> x,y;<br>    <span class="hljs-keyword">public</span>:<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> counter;<br>&#125;<br><span class="hljs-keyword">int</span> Point::counter=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//略</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-6-2静态成员函数"><a href="#2-6-2静态成员函数" class="headerlink" title="2.6.2静态成员函数"></a>2.6.2静态成员函数</h3><p><strong>用于访问静态数据成员</strong></p><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Point</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">Point</span>()<br>        &#123;<br>            x=<span class="hljs-number">0</span>;<br>            y=<span class="hljs-number">0</span>;<br>            counter++;<br>        &#125;<br>        ~<span class="hljs-built_in">Point</span>()<br>        &#123;<br>            counter--;<br>        &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GetCounter</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-comment">//静态成员函数的声明前面要加static</span><br>            <span class="hljs-keyword">return</span> counter;<br>        &#125;<br>    <span class="hljs-keyword">private</span>:<br>    <span class="hljs-keyword">int</span> x,y;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> counter;<span class="hljs-comment">//将counter的访问权限设为private</span><br>&#125;<br><span class="hljs-keyword">int</span> Point::counter=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//略</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-7友元关系"><a href="#2-7友元关系" class="headerlink" title="2.7友元关系"></a>2.7友元关系</h2><h3 id="2-7-1友元函数"><a href="#2-7-1友元函数" class="headerlink" title="2.7.1友元函数"></a>2.7.1友元函数</h3><p>由关键字<code>friend</code>修饰</p><p>在类中声明，但不属于该类的成员函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cpoint</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Cpoint</span>(<span class="hljs-keyword">double</span> xx=<span class="hljs-number">0</span>,<span class="hljs-keyword">double</span> yy=<span class="hljs-number">0</span>)<br>&#123;<br>x=xx;<br>y=yy;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">double</span> <span class="hljs-title">Getx</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> x;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">double</span> <span class="hljs-title">Gety</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> y;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">friend</span> <span class="hljs-keyword">double</span> <span class="hljs-title">fDist</span><span class="hljs-params">(Cpoint *p1,Cpoint *p2)</span></span>;<span class="hljs-comment">//友元函数</span><br>    <span class="hljs-keyword">private</span>:<br>    <span class="hljs-keyword">double</span> x,y;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">double</span> <span class="hljs-title">fDist</span><span class="hljs-params">(Cpoint *p1,Cpoint *p2)</span><span class="hljs-comment">//注意。这里友元函数的实现</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">double</span> x=<span class="hljs-built_in"><span class="hljs-keyword">double</span></span>(p1-&gt;x-p2-&gt;x);<span class="hljs-comment">//友元函数可以直接访问所属类的私有成员</span><br>    <span class="hljs-keyword">double</span> y=<span class="hljs-built_in"><span class="hljs-keyword">double</span></span>(p1-&gt;y-p2-&gt;y);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sqrt</span>(x*x+y*y);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//略</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>友元函数可以直接访问所属类的私有成员</strong></p><p>注意：</p><ol><li>友元函数<code>fDist</code>不是类<code>Cpoint</code>的成员函数，在类外实现的时候不能写成<code>double Cpoint::fDist(Cpoint *p1,Cpoint *p2)。</code></li><li>友元函数无<code>this</code>指针，如要改变所属类的私有成员，应将该私有成员作为参数传递给友元函数。</li><li>友元函数的声明可以放在<code>public</code>区，也可以放在<code>private</code>区，不受类的访问权限限制。</li><li>如果一个类A的友元函数是另一个类A的成员函数，那么在<strong>声明</strong>友元关系的时候要在函数名前加<code>B::</code></li></ol><h3 id="2-7-2友元类"><a href="#2-7-2友元类" class="headerlink" title="2.7.2友元类"></a>2.7.2友元类</h3><p>如果类B是类A的友元函数，那么类B的<strong>所有成员函数</strong>都是类A的友元函数</p><p>声明如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-comment">//略</span><br>    <span class="hljs-keyword">friend</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span>;</span><span class="hljs-comment">//B为A的友元类</span><br>&#125;<br></code></pre></td></tr></table></figure><p><em>当下CPU的运行速度越来越快，我们不太推荐使用友元。</em></p><h2 id="2-8共享数据成员的保护"><a href="#2-8共享数据成员的保护" class="headerlink" title="2.8共享数据成员的保护"></a>2.8共享数据成员的保护</h2><h3 id="2-8-1常引用"><a href="#2-8-1常引用" class="headerlink" title="2.8.1常引用"></a>2.8.1常引用</h3><h3 id="2-8-2常对象"><a href="#2-8-2常对象" class="headerlink" title="2.8.2常对象"></a>2.8.2常对象</h3><h3 id="2-8-3常成员函数"><a href="#2-8-3常成员函数" class="headerlink" title="2.8.3常成员函数"></a>2.8.3常成员函数</h3><p>格式：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">返回类型 函数名（参数） <span class="hljs-keyword">const</span>；<br></code></pre></td></tr></table></figure><p>常对象不能调用成员函数，但可以使用常成员函数访问常对象的成员</p><p>可以重载，<strong>常对象调用常成员函数</strong>，一般对象<strong>优先</strong>调用一般成员函数</p><h3 id="2-8-4常数据成员"><a href="#2-8-4常数据成员" class="headerlink" title="2.8.4常数据成员"></a>2.8.4常数据成员</h3><p>任何成员函数<strong>都不能</strong>修改常数据成员的值</p><p><strong>只能通过初始化列表完成初始化</strong></p><p>格式：</p><h1 id="继承-1"><a href="#继承-1" class="headerlink" title="继承"></a>继承</h1><h2 id="3-1类的继承与派生"><a href="#3-1类的继承与派生" class="headerlink" title="3.1类的继承与派生"></a>3.1类的继承与派生</h2><p>子继承，父派生</p><p>继承：以原有类为基础创建新类，提高开发效率。可以提高代码利用率。</p><h3 id="3-1-1继承与派生的概念"><a href="#3-1-1继承与派生的概念" class="headerlink" title="3.1.1继承与派生的概念"></a>3.1.1继承与派生的概念</h3><p>不同的类中，可能会有相同的成员。这就说明如果代码可以重复利用，将大大提高编程效率。C++提供了途径来实现这种想法——继承与派生。</p><p>类的继承指在一个已有类的基础上设计新类，新类直接获得已有类的所有成员。</p><p>一个基类可以有多个派生类，一个类可以继承多个类，派生类可以作为基类进行派生。</p><p>子类具有上层的特征，还有属于本类自身的特征。</p><h3 id="3-1-2派生类的定义"><a href="#3-1-2派生类的定义" class="headerlink" title="3.1.2派生类的定义"></a>3.1.2派生类的定义</h3><p>格式：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">class</span> 派生类名：继承方式 基类<span class="hljs-symbol">1</span>，继承方式 基类<span class="hljs-symbol">2</span>···<br>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>继承方式</strong>控制派生类成员以及派生类对象如何<strong>访问</strong>从基类继承来的成员。派生类的定义语句中，每一个继承方式只能限制紧跟其后的一个基类。</p><p>继承方式分三种：public、private、protected</p><h3 id="3-1-3继承方式"><a href="#3-1-3继承方式" class="headerlink" title="3.1.3继承方式"></a>3.1.3继承方式</h3><p><strong>private是默认继承方式</strong></p><h3 id="3-2-1共有继承public"><a href="#3-2-1共有继承public" class="headerlink" title="3.2.1共有继承public"></a>3.2.1共有继承public</h3><p>基类的共有和保护成员在派生类中仍然是共有或保护成员，可以由派生类的成员函数访问。</p><p>派生类的成员函数与派生类的对象都无法访问基类的私有成员，但可以通过基类的成员函数访问和改变基类的私有成员。</p><h3 id="3-2-2私有继承private"><a href="#3-2-2私有继承private" class="headerlink" title="3.2.2私有继承private"></a>3.2.2私有继承private</h3><p>基类的所有非私有成员，在派生类中一律变成私有成员，派生类只能通过它的成员函数来访问；</p><p>基类的私有成员在派生类中不可访问，不可改变。</p><h3 id="3-2-3保护继承protected"><a href="#3-2-3保护继承protected" class="headerlink" title="3.2.3保护继承protected"></a>3.2.3保护继承protected</h3><p>没有继承关系时，可以用private和protected来隐藏成员。</p><p>如有继承关系，在隐藏继承成员的时候要允许派生类函数成员访问，就可以使用protected。</p><p>保护继承方式下，基类的非私有成员都变成了保护成员，可以被派生类的成员函数访问，但不能被派生类对象访问，基类中的私有成员在派生类中依然不可见。</p><p><strong>利用保护继承方式，既可以实现成员的隐藏，又可以方便类家族中派生类的访问。</strong></p><table><thead><tr><th></th><th>public</th><th>private</th><th>protected</th></tr></thead><tbody><tr><td>public继承方式</td><td>public</td><td>不可见</td><td>protected</td></tr><tr><td>private继承方式</td><td>private</td><td>不可见</td><td>private</td></tr><tr><td>protected继承方式</td><td>protected</td><td>不可见</td><td>protected</td></tr></tbody></table><h2 id="3-3派生类的构造函数和析构函数"><a href="#3-3派生类的构造函数和析构函数" class="headerlink" title="3.3派生类的构造函数和析构函数"></a>3.3派生类的构造函数和析构函数</h2><h3 id="3-3-1派生类的构造函数"><a href="#3-3-1派生类的构造函数" class="headerlink" title="3.3.1派生类的构造函数"></a>3.3.1派生类的构造函数</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C++Primer</title>
    <link href="/2021/04/10/C++Primer/"/>
    <url>/2021/04/10/C++Primer/</url>
    
    <content type="html"><![CDATA[<h1 id="DOS命令"><a href="#DOS命令" class="headerlink" title="DOS命令"></a>DOS命令</h1><ol><li><code>win+r</code>打开运行，输入<code>cmd</code>打开DOS窗口</li><li><code>exit</code>命令退出当前DOS窗口</li><li><code>cls</code>清屏</li><li><code>dir</code>列出当前目录下的所有子文件/子目录</li><li><code>cd</code>命令。（1）表示change directry 改变路径（2）用法：<code>cd 目录的路径</code>（3）路径可以是相对路径也可以是绝对路径</li><li><code>cd..</code>回到上级目录</li><li><code>cd\</code>回到根目录</li><li><code>D:</code>切换盘符</li></ol><h1 id="C-基础"><a href="#C-基础" class="headerlink" title="C++基础"></a>C++基础</h1><h2 id="变量和基本类型"><a href="#变量和基本类型" class="headerlink" title="变量和基本类型"></a>变量和基本类型</h2><h3 id="基本内置类型"><a href="#基本内置类型" class="headerlink" title="基本内置类型"></a>基本内置类型</h3><h4 id="2-1-1算术类型"><a href="#2-1-1算术类型" class="headerlink" title="2.1.1算术类型"></a>2.1.1算术类型</h4><p>算术类型分为两类，即<strong>整型</strong>和<strong>浮点型</strong></p><blockquote><p>此处有一个表格</p></blockquote><p>整型包括<strong>有符号型</strong>和<strong>无符号型</strong></p><h4 id="2-1-2类型转换"><a href="#2-1-2类型转换" class="headerlink" title="2.1.2类型转换"></a>2.1.2类型转换</h4><ol><li>当我们把一个非布尔型的算数值赋给布尔型时，初始值为0则结果为false，否则结果为true。</li><li>当我们把一个布尔值赋给非布尔值时，初始值为false，则结果为0，否则为1。</li><li>当我们把一个浮点数赋给整型时，进行了近似处理。结果仅保留浮点数的整数部分。</li><li>当我们把一个整数赋给浮点类型时，小数部分记为0.如果整数部分超过了浮点类型的容量，精度可能有损失。</li><li>当我们赋给无符号类型一个超出它表示范围的值时，结果是<strong>初始值对无符号类型表示数值总数取模后的余数</strong>。</li><li>当我们赋给一个类型超出它表示范围的值时，结果是未定义的。</li></ol><h4 id="2-1-3字面量常量"><a href="#2-1-3字面量常量" class="headerlink" title="2.1.3字面量常量"></a>2.1.3字面量常量</h4><p>整型字面量的具体数据类型由它的值和符号决定。十进制字面量是带符号数，八进制和十六进制数既可以是带符号数也可以是无符号数。</p><p>十进制字面量的类型是int、long int、long long int中尺寸最小的那个。</p><p>八进制和十六进制的类型是int\long int\long long int\unsigned int····中最小的那一个。</p><p>字符和字符串字面量略</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="列表初始化"><a href="#列表初始化" class="headerlink" title="列表初始化"></a>列表初始化</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> a = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> a = &#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-keyword">int</span> a&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">a</span><span class="hljs-params">(<span class="hljs-number">0</span>)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="符合类型"><a href="#符合类型" class="headerlink" title="符合类型"></a>符合类型</h3><h3 id="const限定符"><a href="#const限定符" class="headerlink" title="const限定符"></a>const限定符</h3><h3 id="处理类型"><a href="#处理类型" class="headerlink" title="处理类型"></a>处理类型</h3><h3 id="自定义数据类型"><a href="#自定义数据类型" class="headerlink" title="自定义数据类型"></a>自定义数据类型</h3><h2 id="字符串、向量和数组"><a href="#字符串、向量和数组" class="headerlink" title="字符串、向量和数组"></a>字符串、向量和数组</h2><h3 id="using声明"><a href="#using声明" class="headerlink" title="using声明"></a>using声明</h3><p>格式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span>::name;<br></code></pre></td></tr></table></figure><p>注意：<strong>头文件不应包含using声明</strong></p><h3 id="标准库类型string"><a href="#标准库类型string" class="headerlink" title="标准库类型string"></a>标准库类型string</h3><p><strong>string</strong>类型表示 <em>可变长</em>  的字符序列</p><p>使用时应包含</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> std::string;<br></code></pre></td></tr></table></figure><h4 id="3-2-1定义和初始化string对象"><a href="#3-2-1定义和初始化string对象" class="headerlink" title="3.2.1定义和初始化string对象"></a>3.2.1定义和初始化string对象</h4><p>定义：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">string s;<br></code></pre></td></tr></table></figure><p>初始化：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">string s1=s2;<br>string s=<span class="hljs-string">&quot;abc&quot;</span>;<span class="hljs-comment">//拷贝初始化</span><br><span class="hljs-function">string <span class="hljs-title">s3</span><span class="hljs-params">(s2)</span></span>;<br><span class="hljs-function">string <span class="hljs-title">ss</span><span class="hljs-params">(<span class="hljs-number">10</span>,<span class="hljs-string">&#x27;c&#x27;</span>)</span></span>;<br><span class="hljs-function">string <span class="hljs-title">sss</span><span class="hljs-params">(<span class="hljs-string">&quot;abc&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure><h4 id="3-2-2string对象的操作"><a href="#3-2-2string对象的操作" class="headerlink" title="3.2.2string对象的操作"></a>3.2.2string对象的操作</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">s1+s2;<span class="hljs-comment">//返回s1和s2连接的结果</span><br><span class="hljs-built_in">getline</span>(is,s);<span class="hljs-comment">//将一行的信息读到s中</span><br>s.<span class="hljs-built_in">size</span>();<span class="hljs-comment">//返回s的长度</span><br>s.<span class="hljs-built_in">empty</span>();<span class="hljs-comment">//如果s为空，则返回1；否则返回0</span><br></code></pre></td></tr></table></figure><p>注意：<code>s.size</code>的返回类型是string::size_type，建议这样使用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">auto</span> len=s.<span class="hljs-built_in">size</span>();<br></code></pre></td></tr></table></figure><p>string对象可以相互比较，并对大小写敏感。</p><p>字面量值可以和string对象相加，但两个字面量值不能相加，如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">string s1=<span class="hljs-string">&quot;hello&quot;</span>,s2=<span class="hljs-string">&quot;world&quot;</span>,s3;<br>s3=s1+<span class="hljs-string">&quot; &quot;</span>+s2;<span class="hljs-comment">//正确</span><br>s3=<span class="hljs-string">&quot;hello&quot;</span>+<span class="hljs-string">&quot; &quot;</span>+s2;<span class="hljs-comment">//错误</span><br></code></pre></td></tr></table></figure><h4 id="3-2-3处理string中的字符"><a href="#3-2-3处理string中的字符" class="headerlink" title="3.2.3处理string中的字符"></a>3.2.3处理string中的字符</h4><p>基于范围的for语句</p><p>格式如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">for</span>(declaration:expression)<br>statement<br></code></pre></td></tr></table></figure><p>例如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">string s=<span class="hljs-string">&quot;hello&quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> c:s)<br>    cout&lt;&lt;c&lt;&lt;endl;<br><span class="hljs-comment">//将s中的每个字符每行一个输出出来，没有改变s中的字符</span><br></code></pre></td></tr></table></figure><p>再例如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">string s=<span class="hljs-string">&quot;hello&quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> &amp;c:s)<br>    c=<span class="hljs-built_in">toupper</span>(c);<br>cout&lt;&lt;s&lt;&lt;endl;<br><span class="hljs-comment">//将s中的每个字母变成大写</span><br></code></pre></td></tr></table></figure><p>可以使用下标取值</p><h3 id="3-3标准库类型vector"><a href="#3-3标准库类型vector" class="headerlink" title="3.3标准库类型vector"></a>3.3标准库类型vector</h3><p>vector表示对象的集合</p><p>使用时应加入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> std::vector;<br></code></pre></td></tr></table></figure><h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h1 id="C-标准库"><a href="#C-标准库" class="headerlink" title="C++标准库"></a>C++标准库</h1><h2 id="IO库"><a href="#IO库" class="headerlink" title="IO库"></a>IO库</h2><h2 id="顺序容器"><a href="#顺序容器" class="headerlink" title="顺序容器"></a>顺序容器</h2><h2 id="泛型算法"><a href="#泛型算法" class="headerlink" title="泛型算法"></a>泛型算法</h2><h2 id="关联容器"><a href="#关联容器" class="headerlink" title="关联容器"></a>关联容器</h2><h2 id="动态内存"><a href="#动态内存" class="headerlink" title="动态内存"></a>动态内存</h2><h1 id="类设计者的工具"><a href="#类设计者的工具" class="headerlink" title="类设计者的工具"></a>类设计者的工具</h1><h2 id="拷贝控制"><a href="#拷贝控制" class="headerlink" title="拷贝控制"></a>拷贝控制</h2><h2 id="重载运算与类型转换"><a href="#重载运算与类型转换" class="headerlink" title="重载运算与类型转换"></a>重载运算与类型转换</h2><h2 id="面向对象程序设计"><a href="#面向对象程序设计" class="headerlink" title="面向对象程序设计"></a>面向对象程序设计</h2><h2 id="模板与泛型编程"><a href="#模板与泛型编程" class="headerlink" title="模板与泛型编程"></a>模板与泛型编程</h2><h1 id="高级主题"><a href="#高级主题" class="headerlink" title="高级主题"></a>高级主题</h1>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
